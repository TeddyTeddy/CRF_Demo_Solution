<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.3 (Python 3.7.4 on linux)" generated="20210729 14:18:46.554" rpa="false" schemaversion="2">
<suite id="s1" name="3-Updating-Personal-Information" source="/home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/Tests/API/3-Updating-Personal-Information.robot">
<test id="s1-t1" name="With Any Valid Token, Updating Username Of Each System User With '' Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:18:47.154" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:18:47.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:18:47.163" level="INFO">${pids} = 11308</msg>
<status status="PASS" starttime="20210729 14:18:47.150" endtime="20210729 14:18:47.163"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:47.167" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:18:47.163" endtime="20210729 14:18:47.167"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:47.168" level="INFO">${pids} = ['11308']</msg>
<status status="PASS" starttime="20210729 14:18:47.167" endtime="20210729 14:18:47.168"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11308</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:47.171" level="INFO">Running command 'kill 11308 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:47.168" endtime="20210729 14:18:47.171"/>
</kw>
<status status="PASS" starttime="20210729 14:18:47.168" endtime="20210729 14:18:47.171"/>
</iter>
<status status="PASS" starttime="20210729 14:18:47.168" endtime="20210729 14:18:47.171"/>
</for>
<status status="PASS" starttime="20210729 14:18:47.167" endtime="20210729 14:18:47.171"/>
</branch>
<status status="PASS" starttime="20210729 14:18:47.167" endtime="20210729 14:18:47.171"/>
</if>
<status status="PASS" starttime="20210729 14:18:47.150" endtime="20210729 14:18:47.172"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:47.173" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:47.172" endtime="20210729 14:18:47.173"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:47.173" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:18:47.173" endtime="20210729 14:18:47.173"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:18:47.174" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:18:47.174" endtime="20210729 14:18:47.174"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:47.174" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:47.174" endtime="20210729 14:18:47.174"/>
</kw>
<msg timestamp="20210729 14:18:47.174" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:47.173" endtime="20210729 14:18:47.174"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:47.178" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:47.175" endtime="20210729 14:18:47.182"/>
</kw>
<status status="PASS" starttime="20210729 14:18:47.172" endtime="20210729 14:18:47.182"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:18:47.183" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:18:47.183" endtime="20210729 14:18:47.187"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:18:48.697" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:18:47.187" endtime="20210729 14:18:48.697"/>
</kw>
<status status="PASS" starttime="20210729 14:18:47.182" endtime="20210729 14:18:48.698"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:48.699" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:18:48.699" endtime="20210729 14:18:48.699"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:18:48.700" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:18:48.699" endtime="20210729 14:18:48.700"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:48.700" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:48.700" endtime="20210729 14:18:48.700"/>
</kw>
<msg timestamp="20210729 14:18:48.701" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:48.698" endtime="20210729 14:18:48.701"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:18:48.702" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:18:48.701" endtime="20210729 14:18:48.703"/>
</kw>
<status status="PASS" starttime="20210729 14:18:48.698" endtime="20210729 14:18:48.703"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:18:48.703" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:18:48.703" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:18:48.703" endtime="20210729 14:18:48.704"/>
</kw>
<status status="PASS" starttime="20210729 14:18:48.703" endtime="20210729 14:18:48.704"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:18:48.704" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:18:48.705" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:18:48.704" endtime="20210729 14:18:48.705"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:18:48.705" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:18:48.705" endtime="20210729 14:18:48.705"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:48.705" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:18:48.705" endtime="20210729 14:18:48.705"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:18:48.706" endtime="20210729 14:18:48.706"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:18:48.706" endtime="20210729 14:18:48.706"/>
</kw>
<status status="PASS" starttime="20210729 14:18:48.705" endtime="20210729 14:18:48.706"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:48.707" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:18:48.707" endtime="20210729 14:18:48.707"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:18:48.707" endtime="20210729 14:18:48.708"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:18:48.708" endtime="20210729 14:18:48.708"/>
</kw>
<status status="PASS" starttime="20210729 14:18:48.707" endtime="20210729 14:18:48.708"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:48.708" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:18:48.708" endtime="20210729 14:18:48.708"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:18:48.708" endtime="20210729 14:18:48.709"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:18:48.709" endtime="20210729 14:18:48.709"/>
</kw>
<status status="PASS" starttime="20210729 14:18:48.708" endtime="20210729 14:18:48.709"/>
</iter>
<status status="PASS" starttime="20210729 14:18:48.705" endtime="20210729 14:18:48.709"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:18:48.710" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:18:48.710" endtime="20210729 14:18:48.710"/>
</kw>
<status status="PASS" starttime="20210729 14:18:48.704" endtime="20210729 14:18:48.710"/>
</kw>
<status status="PASS" starttime="20210729 14:18:47.149" endtime="20210729 14:18:48.710"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=${EMPTY}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:48.712" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:18:48.712" endtime="20210729 14:18:48.712"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:48.713" level="INFO">${payload} = {'username': ''}</msg>
<status status="PASS" starttime="20210729 14:18:48.713" endtime="20210729 14:18:48.713"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:18:48.724" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:18:48.725" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:18:48.713" endtime="20210729 14:18:48.725"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:18:48.725" endtime="20210729 14:18:48.725"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:18:48.725" endtime="20210729 14:18:48.725"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:48.713" endtime="20210729 14:18:48.725"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:48.713" endtime="20210729 14:18:48.725"/>
</for>
<status status="FAIL" starttime="20210729 14:18:48.711" endtime="20210729 14:18:48.725"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:48.710" endtime="20210729 14:18:48.725"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=${EMPTY}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:48.727" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:18:48.726" endtime="20210729 14:18:48.727"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:48.727" level="INFO">${payload} = {'username': ''}</msg>
<status status="PASS" starttime="20210729 14:18:48.727" endtime="20210729 14:18:48.727"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:18:48.732" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:18:48.732" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:18:48.728" endtime="20210729 14:18:48.732"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:18:48.732" endtime="20210729 14:18:48.732"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:18:48.732" endtime="20210729 14:18:48.732"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:48.727" endtime="20210729 14:18:48.732"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:48.727" endtime="20210729 14:18:48.732"/>
</for>
<status status="FAIL" starttime="20210729 14:18:48.725" endtime="20210729 14:18:48.733"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:48.725" endtime="20210729 14:18:48.733"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=${EMPTY}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:48.734" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:18:48.734" endtime="20210729 14:18:48.734"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:48.734" level="INFO">${payload} = {'username': ''}</msg>
<status status="PASS" starttime="20210729 14:18:48.734" endtime="20210729 14:18:48.734"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:18:48.740" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:18:48.740" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:18:48.735" endtime="20210729 14:18:48.740"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:18:48.740" endtime="20210729 14:18:48.740"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:18:48.740" endtime="20210729 14:18:48.741"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:48.735" endtime="20210729 14:18:48.741"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:48.734" endtime="20210729 14:18:48.741"/>
</for>
<status status="FAIL" starttime="20210729 14:18:48.733" endtime="20210729 14:18:48.741"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:48.733" endtime="20210729 14:18:48.741"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:48.710" endtime="20210729 14:18:48.741"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:18:48.745" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:18:48.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:18:48.752" level="INFO">${pids} = 11331
11338
11344</msg>
<status status="PASS" starttime="20210729 14:18:48.742" endtime="20210729 14:18:48.752"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:48.753" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:18:48.753" endtime="20210729 14:18:48.753"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:48.754" level="INFO">${pids} = ['11331', '11338', '11344']</msg>
<status status="PASS" starttime="20210729 14:18:48.754" endtime="20210729 14:18:48.754"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11331</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:48.757" level="INFO">Running command 'kill 11331 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:48.754" endtime="20210729 14:18:48.757"/>
</kw>
<status status="PASS" starttime="20210729 14:18:48.754" endtime="20210729 14:18:48.757"/>
</iter>
<iter>
<var name="${pid}">11338</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:48.760" level="INFO">Running command 'kill 11338 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:48.758" endtime="20210729 14:18:48.761"/>
</kw>
<status status="PASS" starttime="20210729 14:18:48.757" endtime="20210729 14:18:48.761"/>
</iter>
<iter>
<var name="${pid}">11344</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:48.764" level="INFO">Running command 'kill 11344 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:48.761" endtime="20210729 14:18:48.765"/>
</kw>
<status status="PASS" starttime="20210729 14:18:48.761" endtime="20210729 14:18:48.765"/>
</iter>
<status status="PASS" starttime="20210729 14:18:48.754" endtime="20210729 14:18:48.765"/>
</for>
<status status="PASS" starttime="20210729 14:18:48.754" endtime="20210729 14:18:48.765"/>
</branch>
<status status="PASS" starttime="20210729 14:18:48.753" endtime="20210729 14:18:48.765"/>
</if>
<status status="PASS" starttime="20210729 14:18:48.741" endtime="20210729 14:18:48.765"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
username as such:
{
"username": ''
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:18:47.148" endtime="20210729 14:18:48.765">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t2" name="With Any Valid Token, Updating Username Of Each System User With !#%&amp;/¤% Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:18:48.772" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:18:48.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:18:48.780" level="INFO">${pids} = 11373</msg>
<status status="PASS" starttime="20210729 14:18:48.767" endtime="20210729 14:18:48.780"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:48.781" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:18:48.781" endtime="20210729 14:18:48.781"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:48.782" level="INFO">${pids} = ['11373']</msg>
<status status="PASS" starttime="20210729 14:18:48.782" endtime="20210729 14:18:48.782"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11373</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:48.790" level="INFO">Running command 'kill 11373 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:48.782" endtime="20210729 14:18:48.790"/>
</kw>
<status status="PASS" starttime="20210729 14:18:48.782" endtime="20210729 14:18:48.790"/>
</iter>
<status status="PASS" starttime="20210729 14:18:48.782" endtime="20210729 14:18:48.790"/>
</for>
<status status="PASS" starttime="20210729 14:18:48.781" endtime="20210729 14:18:48.790"/>
</branch>
<status status="PASS" starttime="20210729 14:18:48.781" endtime="20210729 14:18:48.790"/>
</if>
<status status="PASS" starttime="20210729 14:18:48.767" endtime="20210729 14:18:48.791"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:48.792" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:48.792" endtime="20210729 14:18:48.792"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:48.793" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:18:48.792" endtime="20210729 14:18:48.793"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:18:48.793" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:18:48.793" endtime="20210729 14:18:48.793"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:48.794" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:48.793" endtime="20210729 14:18:48.794"/>
</kw>
<msg timestamp="20210729 14:18:48.794" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:48.792" endtime="20210729 14:18:48.794"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:48.800" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:48.794" endtime="20210729 14:18:48.804"/>
</kw>
<status status="PASS" starttime="20210729 14:18:48.791" endtime="20210729 14:18:48.804"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:18:48.805" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:18:48.805" endtime="20210729 14:18:48.809"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:18:50.317" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:18:48.810" endtime="20210729 14:18:50.318"/>
</kw>
<status status="PASS" starttime="20210729 14:18:48.804" endtime="20210729 14:18:50.318"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:50.319" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:18:50.319" endtime="20210729 14:18:50.319"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:18:50.320" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:18:50.319" endtime="20210729 14:18:50.320"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:50.321" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:50.320" endtime="20210729 14:18:50.321"/>
</kw>
<msg timestamp="20210729 14:18:50.321" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:50.318" endtime="20210729 14:18:50.321"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:18:50.321" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:18:50.321" endtime="20210729 14:18:50.322"/>
</kw>
<status status="PASS" starttime="20210729 14:18:50.318" endtime="20210729 14:18:50.322"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:18:50.322" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:18:50.322" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:18:50.322" endtime="20210729 14:18:50.322"/>
</kw>
<status status="PASS" starttime="20210729 14:18:50.322" endtime="20210729 14:18:50.323"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:18:50.323" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:18:50.323" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:18:50.323" endtime="20210729 14:18:50.323"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:18:50.323" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:18:50.323" endtime="20210729 14:18:50.323"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:50.324" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:18:50.324" endtime="20210729 14:18:50.324"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:18:50.324" endtime="20210729 14:18:50.325"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:18:50.325" endtime="20210729 14:18:50.325"/>
</kw>
<status status="PASS" starttime="20210729 14:18:50.324" endtime="20210729 14:18:50.325"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:50.325" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:18:50.325" endtime="20210729 14:18:50.325"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:18:50.326" endtime="20210729 14:18:50.326"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:18:50.326" endtime="20210729 14:18:50.326"/>
</kw>
<status status="PASS" starttime="20210729 14:18:50.325" endtime="20210729 14:18:50.326"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:50.327" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:18:50.327" endtime="20210729 14:18:50.327"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:18:50.327" endtime="20210729 14:18:50.328"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:18:50.328" endtime="20210729 14:18:50.328"/>
</kw>
<status status="PASS" starttime="20210729 14:18:50.327" endtime="20210729 14:18:50.328"/>
</iter>
<status status="PASS" starttime="20210729 14:18:50.323" endtime="20210729 14:18:50.328"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:18:50.329" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:18:50.328" endtime="20210729 14:18:50.329"/>
</kw>
<status status="PASS" starttime="20210729 14:18:50.323" endtime="20210729 14:18:50.329"/>
</kw>
<status status="PASS" starttime="20210729 14:18:48.766" endtime="20210729 14:18:50.329"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤%</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:50.330" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:18:50.330" endtime="20210729 14:18:50.330"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:50.330" level="INFO">${payload} = {'username': '!#%&amp;/¤%'}</msg>
<status status="PASS" starttime="20210729 14:18:50.330" endtime="20210729 14:18:50.330"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:18:50.339" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:18:50.340" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:18:50.331" endtime="20210729 14:18:50.340"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:18:50.340" endtime="20210729 14:18:50.342"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:18:50.342" endtime="20210729 14:18:50.342"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:50.331" endtime="20210729 14:18:50.343"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:50.330" endtime="20210729 14:18:50.343"/>
</for>
<status status="FAIL" starttime="20210729 14:18:50.329" endtime="20210729 14:18:50.343"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:50.329" endtime="20210729 14:18:50.343"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤%</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:50.344" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:18:50.344" endtime="20210729 14:18:50.344"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:50.344" level="INFO">${payload} = {'username': '!#%&amp;/¤%'}</msg>
<status status="PASS" starttime="20210729 14:18:50.344" endtime="20210729 14:18:50.345"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:18:50.349" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:18:50.350" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:18:50.345" endtime="20210729 14:18:50.350"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:18:50.350" endtime="20210729 14:18:50.350"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:18:50.350" endtime="20210729 14:18:50.350"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:50.345" endtime="20210729 14:18:50.350"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:50.345" endtime="20210729 14:18:50.350"/>
</for>
<status status="FAIL" starttime="20210729 14:18:50.343" endtime="20210729 14:18:50.350"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:50.343" endtime="20210729 14:18:50.350"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤%</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:50.352" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:18:50.351" endtime="20210729 14:18:50.352"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:50.352" level="INFO">${payload} = {'username': '!#%&amp;/¤%'}</msg>
<status status="PASS" starttime="20210729 14:18:50.352" endtime="20210729 14:18:50.352"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:18:50.360" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:18:50.360" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:18:50.352" endtime="20210729 14:18:50.360"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:18:50.360" endtime="20210729 14:18:50.360"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:18:50.360" endtime="20210729 14:18:50.360"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:50.352" endtime="20210729 14:18:50.360"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:50.352" endtime="20210729 14:18:50.360"/>
</for>
<status status="FAIL" starttime="20210729 14:18:50.350" endtime="20210729 14:18:50.361"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:50.350" endtime="20210729 14:18:50.361"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:50.329" endtime="20210729 14:18:50.361"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:18:50.364" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:18:50.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:18:50.373" level="INFO">${pids} = 11396
11404
11413</msg>
<status status="PASS" starttime="20210729 14:18:50.361" endtime="20210729 14:18:50.373"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:50.374" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:18:50.373" endtime="20210729 14:18:50.374"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:50.375" level="INFO">${pids} = ['11396', '11404', '11413']</msg>
<status status="PASS" starttime="20210729 14:18:50.374" endtime="20210729 14:18:50.375"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11396</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:50.379" level="INFO">Running command 'kill 11396 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:50.375" endtime="20210729 14:18:50.379"/>
</kw>
<status status="PASS" starttime="20210729 14:18:50.375" endtime="20210729 14:18:50.379"/>
</iter>
<iter>
<var name="${pid}">11404</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:50.383" level="INFO">Running command 'kill 11404 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:50.380" endtime="20210729 14:18:50.383"/>
</kw>
<status status="PASS" starttime="20210729 14:18:50.380" endtime="20210729 14:18:50.384"/>
</iter>
<iter>
<var name="${pid}">11413</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:50.389" level="INFO">Running command 'kill 11413 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:50.384" endtime="20210729 14:18:50.389"/>
</kw>
<status status="PASS" starttime="20210729 14:18:50.384" endtime="20210729 14:18:50.389"/>
</iter>
<status status="PASS" starttime="20210729 14:18:50.375" endtime="20210729 14:18:50.389"/>
</for>
<status status="PASS" starttime="20210729 14:18:50.374" endtime="20210729 14:18:50.389"/>
</branch>
<status status="PASS" starttime="20210729 14:18:50.374" endtime="20210729 14:18:50.389"/>
</if>
<status status="PASS" starttime="20210729 14:18:50.361" endtime="20210729 14:18:50.390"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '!#%&amp;/¤%'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:18:48.766" endtime="20210729 14:18:50.390">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t3" name="With Any Valid Token, Updating Username Of Each System User With !#%&amp;/¤%= Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:18:50.395" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:18:50.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:18:50.404" level="INFO">${pids} = 11442</msg>
<status status="PASS" starttime="20210729 14:18:50.392" endtime="20210729 14:18:50.404"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:50.405" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:18:50.405" endtime="20210729 14:18:50.405"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:50.406" level="INFO">${pids} = ['11442']</msg>
<status status="PASS" starttime="20210729 14:18:50.406" endtime="20210729 14:18:50.406"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11442</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:50.409" level="INFO">Running command 'kill 11442 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:50.406" endtime="20210729 14:18:50.409"/>
</kw>
<status status="PASS" starttime="20210729 14:18:50.406" endtime="20210729 14:18:50.409"/>
</iter>
<status status="PASS" starttime="20210729 14:18:50.406" endtime="20210729 14:18:50.409"/>
</for>
<status status="PASS" starttime="20210729 14:18:50.405" endtime="20210729 14:18:50.409"/>
</branch>
<status status="PASS" starttime="20210729 14:18:50.405" endtime="20210729 14:18:50.409"/>
</if>
<status status="PASS" starttime="20210729 14:18:50.392" endtime="20210729 14:18:50.410"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:50.411" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:50.411" endtime="20210729 14:18:50.411"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:50.412" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:18:50.412" endtime="20210729 14:18:50.412"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:18:50.412" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:18:50.412" endtime="20210729 14:18:50.412"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:50.413" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:50.413" endtime="20210729 14:18:50.413"/>
</kw>
<msg timestamp="20210729 14:18:50.413" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:50.411" endtime="20210729 14:18:50.413"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:50.416" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:50.413" endtime="20210729 14:18:50.422"/>
</kw>
<status status="PASS" starttime="20210729 14:18:50.410" endtime="20210729 14:18:50.422"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:18:50.423" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:18:50.423" endtime="20210729 14:18:50.429"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:18:51.932" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:18:50.429" endtime="20210729 14:18:51.933"/>
</kw>
<status status="PASS" starttime="20210729 14:18:50.422" endtime="20210729 14:18:51.934"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:51.937" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:18:51.937" endtime="20210729 14:18:51.937"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:18:51.938" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:18:51.937" endtime="20210729 14:18:51.938"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:51.938" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:51.938" endtime="20210729 14:18:51.938"/>
</kw>
<msg timestamp="20210729 14:18:51.938" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:51.937" endtime="20210729 14:18:51.938"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:18:51.939" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:18:51.938" endtime="20210729 14:18:51.939"/>
</kw>
<status status="PASS" starttime="20210729 14:18:51.935" endtime="20210729 14:18:51.939"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:18:51.940" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:18:51.940" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:18:51.940" endtime="20210729 14:18:51.940"/>
</kw>
<status status="PASS" starttime="20210729 14:18:51.939" endtime="20210729 14:18:51.940"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:18:51.941" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:18:51.941" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:18:51.940" endtime="20210729 14:18:51.941"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:18:51.941" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:18:51.941" endtime="20210729 14:18:51.941"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:51.942" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:18:51.941" endtime="20210729 14:18:51.942"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:18:51.942" endtime="20210729 14:18:51.942"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:18:51.942" endtime="20210729 14:18:51.943"/>
</kw>
<status status="PASS" starttime="20210729 14:18:51.941" endtime="20210729 14:18:51.943"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:51.943" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:18:51.943" endtime="20210729 14:18:51.943"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:18:51.943" endtime="20210729 14:18:51.944"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:18:51.944" endtime="20210729 14:18:51.944"/>
</kw>
<status status="PASS" starttime="20210729 14:18:51.943" endtime="20210729 14:18:51.944"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:51.944" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:18:51.944" endtime="20210729 14:18:51.944"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:18:51.945" endtime="20210729 14:18:51.945"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:18:51.945" endtime="20210729 14:18:51.946"/>
</kw>
<status status="PASS" starttime="20210729 14:18:51.944" endtime="20210729 14:18:51.946"/>
</iter>
<status status="PASS" starttime="20210729 14:18:51.941" endtime="20210729 14:18:51.946"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:18:51.946" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:18:51.946" endtime="20210729 14:18:51.946"/>
</kw>
<status status="PASS" starttime="20210729 14:18:51.940" endtime="20210729 14:18:51.946"/>
</kw>
<status status="PASS" starttime="20210729 14:18:50.392" endtime="20210729 14:18:51.946"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤%=</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:51.948" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:18:51.947" endtime="20210729 14:18:51.948"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:51.948" level="INFO">${payload} = {'username': '!#%&amp;/¤%='}</msg>
<status status="PASS" starttime="20210729 14:18:51.948" endtime="20210729 14:18:51.948"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:18:51.956" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:18:51.956" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:18:51.948" endtime="20210729 14:18:51.956"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:18:51.957" endtime="20210729 14:18:51.957"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:18:51.957" endtime="20210729 14:18:51.957"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:51.948" endtime="20210729 14:18:51.957"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:51.948" endtime="20210729 14:18:51.957"/>
</for>
<status status="FAIL" starttime="20210729 14:18:51.947" endtime="20210729 14:18:51.957"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:51.947" endtime="20210729 14:18:51.957"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤%=</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:51.958" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:18:51.958" endtime="20210729 14:18:51.958"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:51.959" level="INFO">${payload} = {'username': '!#%&amp;/¤%='}</msg>
<status status="PASS" starttime="20210729 14:18:51.958" endtime="20210729 14:18:51.959"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:18:51.963" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:18:51.964" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:18:51.959" endtime="20210729 14:18:51.964"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:18:51.964" endtime="20210729 14:18:51.964"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:18:51.964" endtime="20210729 14:18:51.964"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:51.959" endtime="20210729 14:18:51.964"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:51.959" endtime="20210729 14:18:51.964"/>
</for>
<status status="FAIL" starttime="20210729 14:18:51.957" endtime="20210729 14:18:51.964"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:51.957" endtime="20210729 14:18:51.964"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤%=</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:51.965" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:18:51.965" endtime="20210729 14:18:51.965"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:51.966" level="INFO">${payload} = {'username': '!#%&amp;/¤%='}</msg>
<status status="PASS" starttime="20210729 14:18:51.965" endtime="20210729 14:18:51.966"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:18:51.970" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:18:51.970" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:18:51.966" endtime="20210729 14:18:51.970"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:18:51.970" endtime="20210729 14:18:51.970"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:18:51.970" endtime="20210729 14:18:51.971"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:51.966" endtime="20210729 14:18:51.971"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:51.966" endtime="20210729 14:18:51.971"/>
</for>
<status status="FAIL" starttime="20210729 14:18:51.964" endtime="20210729 14:18:51.971"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:51.964" endtime="20210729 14:18:51.971"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:51.947" endtime="20210729 14:18:51.971"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:18:51.975" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:18:51.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:18:51.983" level="INFO">${pids} = 11465
11472
11476</msg>
<status status="PASS" starttime="20210729 14:18:51.972" endtime="20210729 14:18:51.984"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:51.984" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:18:51.984" endtime="20210729 14:18:51.984"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:51.985" level="INFO">${pids} = ['11465', '11472', '11476']</msg>
<status status="PASS" starttime="20210729 14:18:51.985" endtime="20210729 14:18:51.985"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11465</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:51.988" level="INFO">Running command 'kill 11465 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:51.986" endtime="20210729 14:18:51.988"/>
</kw>
<status status="PASS" starttime="20210729 14:18:51.985" endtime="20210729 14:18:51.988"/>
</iter>
<iter>
<var name="${pid}">11472</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:51.991" level="INFO">Running command 'kill 11472 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:51.989" endtime="20210729 14:18:51.991"/>
</kw>
<status status="PASS" starttime="20210729 14:18:51.989" endtime="20210729 14:18:51.992"/>
</iter>
<iter>
<var name="${pid}">11476</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:51.995" level="INFO">Running command 'kill 11476 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:51.992" endtime="20210729 14:18:51.995"/>
</kw>
<status status="PASS" starttime="20210729 14:18:51.992" endtime="20210729 14:18:51.995"/>
</iter>
<status status="PASS" starttime="20210729 14:18:51.985" endtime="20210729 14:18:51.995"/>
</for>
<status status="PASS" starttime="20210729 14:18:51.985" endtime="20210729 14:18:51.995"/>
</branch>
<status status="PASS" starttime="20210729 14:18:51.985" endtime="20210729 14:18:51.995"/>
</if>
<status status="PASS" starttime="20210729 14:18:51.971" endtime="20210729 14:18:51.995"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '!#%&amp;/¤%='
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:18:50.391" endtime="20210729 14:18:51.996">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t4" name="With Any Valid Token, Updating Username Of Each System User With !#%&amp;/¤%=!()=? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:18:52.000" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:18:52.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:18:52.015" level="INFO">${pids} = 11505</msg>
<status status="PASS" starttime="20210729 14:18:51.997" endtime="20210729 14:18:52.015"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:52.016" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:18:52.015" endtime="20210729 14:18:52.016"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:52.016" level="INFO">${pids} = ['11505']</msg>
<status status="PASS" starttime="20210729 14:18:52.016" endtime="20210729 14:18:52.017"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11505</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:52.020" level="INFO">Running command 'kill 11505 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:52.017" endtime="20210729 14:18:52.020"/>
</kw>
<status status="PASS" starttime="20210729 14:18:52.017" endtime="20210729 14:18:52.020"/>
</iter>
<status status="PASS" starttime="20210729 14:18:52.017" endtime="20210729 14:18:52.020"/>
</for>
<status status="PASS" starttime="20210729 14:18:52.016" endtime="20210729 14:18:52.020"/>
</branch>
<status status="PASS" starttime="20210729 14:18:52.016" endtime="20210729 14:18:52.020"/>
</if>
<status status="PASS" starttime="20210729 14:18:51.997" endtime="20210729 14:18:52.021"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:52.022" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:52.021" endtime="20210729 14:18:52.022"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:52.022" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:18:52.022" endtime="20210729 14:18:52.022"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:18:52.023" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:18:52.023" endtime="20210729 14:18:52.023"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:52.023" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:52.023" endtime="20210729 14:18:52.023"/>
</kw>
<msg timestamp="20210729 14:18:52.024" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:52.022" endtime="20210729 14:18:52.024"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:52.033" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:52.024" endtime="20210729 14:18:52.035"/>
</kw>
<status status="PASS" starttime="20210729 14:18:52.021" endtime="20210729 14:18:52.036"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:18:52.037" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:18:52.037" endtime="20210729 14:18:52.041"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:18:53.547" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:18:52.041" endtime="20210729 14:18:53.547"/>
</kw>
<status status="PASS" starttime="20210729 14:18:52.036" endtime="20210729 14:18:53.548"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:53.554" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:18:53.553" endtime="20210729 14:18:53.554"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:18:53.554" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:18:53.554" endtime="20210729 14:18:53.554"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:53.554" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:53.554" endtime="20210729 14:18:53.554"/>
</kw>
<msg timestamp="20210729 14:18:53.555" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:53.551" endtime="20210729 14:18:53.555"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:18:53.555" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:18:53.555" endtime="20210729 14:18:53.555"/>
</kw>
<status status="PASS" starttime="20210729 14:18:53.549" endtime="20210729 14:18:53.556"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:18:53.556" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:18:53.556" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:18:53.556" endtime="20210729 14:18:53.557"/>
</kw>
<status status="PASS" starttime="20210729 14:18:53.556" endtime="20210729 14:18:53.557"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:18:53.557" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:18:53.557" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:18:53.557" endtime="20210729 14:18:53.557"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:18:53.558" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:18:53.557" endtime="20210729 14:18:53.558"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:53.558" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:18:53.558" endtime="20210729 14:18:53.558"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:18:53.558" endtime="20210729 14:18:53.559"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:18:53.559" endtime="20210729 14:18:53.559"/>
</kw>
<status status="PASS" starttime="20210729 14:18:53.558" endtime="20210729 14:18:53.559"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:53.560" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:18:53.559" endtime="20210729 14:18:53.560"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:18:53.560" endtime="20210729 14:18:53.560"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:18:53.561" endtime="20210729 14:18:53.561"/>
</kw>
<status status="PASS" starttime="20210729 14:18:53.559" endtime="20210729 14:18:53.561"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:53.561" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:18:53.561" endtime="20210729 14:18:53.561"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:18:53.561" endtime="20210729 14:18:53.562"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:18:53.562" endtime="20210729 14:18:53.562"/>
</kw>
<status status="PASS" starttime="20210729 14:18:53.561" endtime="20210729 14:18:53.562"/>
</iter>
<status status="PASS" starttime="20210729 14:18:53.558" endtime="20210729 14:18:53.562"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:18:53.563" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:18:53.562" endtime="20210729 14:18:53.563"/>
</kw>
<status status="PASS" starttime="20210729 14:18:53.557" endtime="20210729 14:18:53.563"/>
</kw>
<status status="PASS" starttime="20210729 14:18:51.997" endtime="20210729 14:18:53.563"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤%=!()=?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:53.564" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:18:53.564" endtime="20210729 14:18:53.564"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:53.565" level="INFO">${payload} = {'username': '!#%&amp;/¤%=!()=?'}</msg>
<status status="PASS" starttime="20210729 14:18:53.564" endtime="20210729 14:18:53.565"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:18:53.573" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:18:53.573" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:18:53.565" endtime="20210729 14:18:53.573"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:18:53.574" endtime="20210729 14:18:53.574"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:18:53.574" endtime="20210729 14:18:53.574"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:53.565" endtime="20210729 14:18:53.574"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:53.565" endtime="20210729 14:18:53.574"/>
</for>
<status status="FAIL" starttime="20210729 14:18:53.563" endtime="20210729 14:18:53.574"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:53.563" endtime="20210729 14:18:53.574"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤%=!()=?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:53.576" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:18:53.575" endtime="20210729 14:18:53.576"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:53.576" level="INFO">${payload} = {'username': '!#%&amp;/¤%=!()=?'}</msg>
<status status="PASS" starttime="20210729 14:18:53.576" endtime="20210729 14:18:53.576"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:18:53.581" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:18:53.581" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:18:53.577" endtime="20210729 14:18:53.581"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:18:53.582" endtime="20210729 14:18:53.582"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:18:53.582" endtime="20210729 14:18:53.582"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:53.576" endtime="20210729 14:18:53.582"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:53.576" endtime="20210729 14:18:53.582"/>
</for>
<status status="FAIL" starttime="20210729 14:18:53.575" endtime="20210729 14:18:53.582"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:53.575" endtime="20210729 14:18:53.582"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤%=!()=?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:53.583" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:18:53.583" endtime="20210729 14:18:53.583"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:53.584" level="INFO">${payload} = {'username': '!#%&amp;/¤%=!()=?'}</msg>
<status status="PASS" starttime="20210729 14:18:53.583" endtime="20210729 14:18:53.584"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:18:53.587" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:18:53.588" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:18:53.584" endtime="20210729 14:18:53.588"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:18:53.588" endtime="20210729 14:18:53.588"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:18:53.588" endtime="20210729 14:18:53.588"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:53.584" endtime="20210729 14:18:53.588"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:53.584" endtime="20210729 14:18:53.588"/>
</for>
<status status="FAIL" starttime="20210729 14:18:53.582" endtime="20210729 14:18:53.588"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:53.582" endtime="20210729 14:18:53.588"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:53.563" endtime="20210729 14:18:53.588"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:18:53.592" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:18:53.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:18:53.600" level="INFO">${pids} = 11528
11535
11540</msg>
<status status="PASS" starttime="20210729 14:18:53.589" endtime="20210729 14:18:53.600"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:53.601" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:18:53.601" endtime="20210729 14:18:53.601"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:53.602" level="INFO">${pids} = ['11528', '11535', '11540']</msg>
<status status="PASS" starttime="20210729 14:18:53.602" endtime="20210729 14:18:53.602"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11528</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:53.605" level="INFO">Running command 'kill 11528 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:53.602" endtime="20210729 14:18:53.605"/>
</kw>
<status status="PASS" starttime="20210729 14:18:53.602" endtime="20210729 14:18:53.605"/>
</iter>
<iter>
<var name="${pid}">11535</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:53.608" level="INFO">Running command 'kill 11535 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:53.606" endtime="20210729 14:18:53.608"/>
</kw>
<status status="PASS" starttime="20210729 14:18:53.606" endtime="20210729 14:18:53.608"/>
</iter>
<iter>
<var name="${pid}">11540</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:53.614" level="INFO">Running command 'kill 11540 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:53.609" endtime="20210729 14:18:53.614"/>
</kw>
<status status="PASS" starttime="20210729 14:18:53.609" endtime="20210729 14:18:53.614"/>
</iter>
<status status="PASS" starttime="20210729 14:18:53.602" endtime="20210729 14:18:53.614"/>
</for>
<status status="PASS" starttime="20210729 14:18:53.602" endtime="20210729 14:18:53.614"/>
</branch>
<status status="PASS" starttime="20210729 14:18:53.601" endtime="20210729 14:18:53.614"/>
</if>
<status status="PASS" starttime="20210729 14:18:53.589" endtime="20210729 14:18:53.615"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '!#%&amp;/¤%=!()=?'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:18:51.996" endtime="20210729 14:18:53.615">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t5" name="With Any Valid Token, Updating Username Of Each System User With 1234567 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:18:53.619" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:18:53.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:18:53.632" level="INFO">${pids} = 11569</msg>
<status status="PASS" starttime="20210729 14:18:53.617" endtime="20210729 14:18:53.632"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:53.633" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:18:53.632" endtime="20210729 14:18:53.633"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:53.633" level="INFO">${pids} = ['11569']</msg>
<status status="PASS" starttime="20210729 14:18:53.633" endtime="20210729 14:18:53.633"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11569</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:53.636" level="INFO">Running command 'kill 11569 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:53.634" endtime="20210729 14:18:53.637"/>
</kw>
<status status="PASS" starttime="20210729 14:18:53.634" endtime="20210729 14:18:53.637"/>
</iter>
<status status="PASS" starttime="20210729 14:18:53.633" endtime="20210729 14:18:53.637"/>
</for>
<status status="PASS" starttime="20210729 14:18:53.633" endtime="20210729 14:18:53.637"/>
</branch>
<status status="PASS" starttime="20210729 14:18:53.633" endtime="20210729 14:18:53.637"/>
</if>
<status status="PASS" starttime="20210729 14:18:53.616" endtime="20210729 14:18:53.637"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:53.638" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:53.638" endtime="20210729 14:18:53.638"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:53.639" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:18:53.639" endtime="20210729 14:18:53.639"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:18:53.639" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:18:53.639" endtime="20210729 14:18:53.639"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:53.640" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:53.640" endtime="20210729 14:18:53.640"/>
</kw>
<msg timestamp="20210729 14:18:53.640" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:53.638" endtime="20210729 14:18:53.640"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:53.650" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:53.640" endtime="20210729 14:18:53.651"/>
</kw>
<status status="PASS" starttime="20210729 14:18:53.637" endtime="20210729 14:18:53.652"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:18:53.653" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:18:53.653" endtime="20210729 14:18:53.657"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:18:55.159" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:18:53.657" endtime="20210729 14:18:55.159"/>
</kw>
<status status="PASS" starttime="20210729 14:18:53.652" endtime="20210729 14:18:55.160"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:55.161" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:18:55.161" endtime="20210729 14:18:55.161"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:18:55.162" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:18:55.162" endtime="20210729 14:18:55.162"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:55.162" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:55.162" endtime="20210729 14:18:55.162"/>
</kw>
<msg timestamp="20210729 14:18:55.162" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:55.161" endtime="20210729 14:18:55.162"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:18:55.163" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:18:55.163" endtime="20210729 14:18:55.163"/>
</kw>
<status status="PASS" starttime="20210729 14:18:55.160" endtime="20210729 14:18:55.163"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:18:55.164" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:18:55.164" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:18:55.164" endtime="20210729 14:18:55.164"/>
</kw>
<status status="PASS" starttime="20210729 14:18:55.163" endtime="20210729 14:18:55.164"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:18:55.165" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:18:55.165" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:18:55.165" endtime="20210729 14:18:55.165"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:18:55.166" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:18:55.166" endtime="20210729 14:18:55.166"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:55.167" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:18:55.166" endtime="20210729 14:18:55.167"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:18:55.167" endtime="20210729 14:18:55.168"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:18:55.168" endtime="20210729 14:18:55.168"/>
</kw>
<status status="PASS" starttime="20210729 14:18:55.166" endtime="20210729 14:18:55.168"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:55.168" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:18:55.168" endtime="20210729 14:18:55.168"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:18:55.168" endtime="20210729 14:18:55.169"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:18:55.169" endtime="20210729 14:18:55.169"/>
</kw>
<status status="PASS" starttime="20210729 14:18:55.168" endtime="20210729 14:18:55.169"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:55.170" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:18:55.170" endtime="20210729 14:18:55.170"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:18:55.170" endtime="20210729 14:18:55.171"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:18:55.171" endtime="20210729 14:18:55.171"/>
</kw>
<status status="PASS" starttime="20210729 14:18:55.170" endtime="20210729 14:18:55.171"/>
</iter>
<status status="PASS" starttime="20210729 14:18:55.166" endtime="20210729 14:18:55.171"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:18:55.172" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:18:55.171" endtime="20210729 14:18:55.172"/>
</kw>
<status status="PASS" starttime="20210729 14:18:55.164" endtime="20210729 14:18:55.172"/>
</kw>
<status status="PASS" starttime="20210729 14:18:53.616" endtime="20210729 14:18:55.172"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=1234567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:55.173" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:18:55.173" endtime="20210729 14:18:55.173"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:55.173" level="INFO">${payload} = {'username': '1234567'}</msg>
<status status="PASS" starttime="20210729 14:18:55.173" endtime="20210729 14:18:55.173"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:18:55.182" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:18:55.183" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:18:55.174" endtime="20210729 14:18:55.183"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:18:55.183" endtime="20210729 14:18:55.183"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:18:55.183" endtime="20210729 14:18:55.183"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:55.174" endtime="20210729 14:18:55.183"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:55.173" endtime="20210729 14:18:55.183"/>
</for>
<status status="FAIL" starttime="20210729 14:18:55.172" endtime="20210729 14:18:55.183"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:55.172" endtime="20210729 14:18:55.183"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=1234567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:55.185" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:18:55.184" endtime="20210729 14:18:55.185"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:55.185" level="INFO">${payload} = {'username': '1234567'}</msg>
<status status="PASS" starttime="20210729 14:18:55.185" endtime="20210729 14:18:55.185"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:18:55.189" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:18:55.190" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:18:55.186" endtime="20210729 14:18:55.190"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:18:55.190" endtime="20210729 14:18:55.190"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:18:55.190" endtime="20210729 14:18:55.190"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:55.185" endtime="20210729 14:18:55.190"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:55.185" endtime="20210729 14:18:55.190"/>
</for>
<status status="FAIL" starttime="20210729 14:18:55.184" endtime="20210729 14:18:55.190"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:55.184" endtime="20210729 14:18:55.190"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=1234567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:55.191" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:18:55.191" endtime="20210729 14:18:55.191"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:55.192" level="INFO">${payload} = {'username': '1234567'}</msg>
<status status="PASS" starttime="20210729 14:18:55.191" endtime="20210729 14:18:55.192"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:18:55.196" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:18:55.196" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:18:55.192" endtime="20210729 14:18:55.197"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:18:55.197" endtime="20210729 14:18:55.197"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:18:55.197" endtime="20210729 14:18:55.197"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:55.192" endtime="20210729 14:18:55.197"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:55.192" endtime="20210729 14:18:55.197"/>
</for>
<status status="FAIL" starttime="20210729 14:18:55.190" endtime="20210729 14:18:55.197"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:55.190" endtime="20210729 14:18:55.197"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:55.172" endtime="20210729 14:18:55.197"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:18:55.203" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:18:55.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:18:55.212" level="INFO">${pids} = 11592
11599
11609</msg>
<status status="PASS" starttime="20210729 14:18:55.198" endtime="20210729 14:18:55.212"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:55.213" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:18:55.213" endtime="20210729 14:18:55.213"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:55.214" level="INFO">${pids} = ['11592', '11599', '11609']</msg>
<status status="PASS" starttime="20210729 14:18:55.214" endtime="20210729 14:18:55.214"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11592</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:55.219" level="INFO">Running command 'kill 11592 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:55.214" endtime="20210729 14:18:55.219"/>
</kw>
<status status="PASS" starttime="20210729 14:18:55.214" endtime="20210729 14:18:55.219"/>
</iter>
<iter>
<var name="${pid}">11599</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:55.228" level="INFO">Running command 'kill 11599 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:55.220" endtime="20210729 14:18:55.229"/>
</kw>
<status status="PASS" starttime="20210729 14:18:55.219" endtime="20210729 14:18:55.229"/>
</iter>
<iter>
<var name="${pid}">11609</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:55.233" level="INFO">Running command 'kill 11609 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:55.229" endtime="20210729 14:18:55.233"/>
</kw>
<status status="PASS" starttime="20210729 14:18:55.229" endtime="20210729 14:18:55.233"/>
</iter>
<status status="PASS" starttime="20210729 14:18:55.214" endtime="20210729 14:18:55.233"/>
</for>
<status status="PASS" starttime="20210729 14:18:55.214" endtime="20210729 14:18:55.233"/>
</branch>
<status status="PASS" starttime="20210729 14:18:55.213" endtime="20210729 14:18:55.233"/>
</if>
<status status="PASS" starttime="20210729 14:18:55.198" endtime="20210729 14:18:55.234"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '1234567'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:18:53.615" endtime="20210729 14:18:55.234">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t6" name="With Any Valid Token, Updating Username Of Each System User With 12345678 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:18:55.239" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:18:55.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:18:55.248" level="INFO">${pids} = 11638</msg>
<status status="PASS" starttime="20210729 14:18:55.236" endtime="20210729 14:18:55.248"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:55.250" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:18:55.249" endtime="20210729 14:18:55.250"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:55.251" level="INFO">${pids} = ['11638']</msg>
<status status="PASS" starttime="20210729 14:18:55.250" endtime="20210729 14:18:55.251"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11638</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:55.255" level="INFO">Running command 'kill 11638 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:55.251" endtime="20210729 14:18:55.255"/>
</kw>
<status status="PASS" starttime="20210729 14:18:55.251" endtime="20210729 14:18:55.255"/>
</iter>
<status status="PASS" starttime="20210729 14:18:55.251" endtime="20210729 14:18:55.255"/>
</for>
<status status="PASS" starttime="20210729 14:18:55.250" endtime="20210729 14:18:55.255"/>
</branch>
<status status="PASS" starttime="20210729 14:18:55.250" endtime="20210729 14:18:55.255"/>
</if>
<status status="PASS" starttime="20210729 14:18:55.235" endtime="20210729 14:18:55.256"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:55.257" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:55.256" endtime="20210729 14:18:55.257"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:55.257" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:18:55.257" endtime="20210729 14:18:55.257"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:18:55.258" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:18:55.258" endtime="20210729 14:18:55.258"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:55.258" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:55.258" endtime="20210729 14:18:55.258"/>
</kw>
<msg timestamp="20210729 14:18:55.258" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:55.257" endtime="20210729 14:18:55.258"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:55.262" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:55.259" endtime="20210729 14:18:55.263"/>
</kw>
<status status="PASS" starttime="20210729 14:18:55.256" endtime="20210729 14:18:55.264"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:18:55.265" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:18:55.265" endtime="20210729 14:18:55.277"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:18:56.800" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:18:55.278" endtime="20210729 14:18:56.801"/>
</kw>
<status status="PASS" starttime="20210729 14:18:55.264" endtime="20210729 14:18:56.802"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:56.804" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:18:56.804" endtime="20210729 14:18:56.804"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:18:56.804" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:18:56.804" endtime="20210729 14:18:56.804"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:56.805" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:56.805" endtime="20210729 14:18:56.805"/>
</kw>
<msg timestamp="20210729 14:18:56.805" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:56.803" endtime="20210729 14:18:56.805"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:18:56.805" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:18:56.805" endtime="20210729 14:18:56.806"/>
</kw>
<status status="PASS" starttime="20210729 14:18:56.803" endtime="20210729 14:18:56.806"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:18:56.806" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:18:56.806" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:18:56.806" endtime="20210729 14:18:56.806"/>
</kw>
<status status="PASS" starttime="20210729 14:18:56.806" endtime="20210729 14:18:56.807"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:18:56.807" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:18:56.807" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:18:56.807" endtime="20210729 14:18:56.807"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:18:56.807" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:18:56.807" endtime="20210729 14:18:56.807"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:56.808" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:18:56.808" endtime="20210729 14:18:56.808"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:18:56.808" endtime="20210729 14:18:56.809"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:18:56.809" endtime="20210729 14:18:56.809"/>
</kw>
<status status="PASS" starttime="20210729 14:18:56.808" endtime="20210729 14:18:56.809"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:56.810" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:18:56.809" endtime="20210729 14:18:56.810"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:18:56.810" endtime="20210729 14:18:56.810"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:18:56.810" endtime="20210729 14:18:56.811"/>
</kw>
<status status="PASS" starttime="20210729 14:18:56.809" endtime="20210729 14:18:56.811"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:56.811" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:18:56.811" endtime="20210729 14:18:56.811"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:18:56.811" endtime="20210729 14:18:56.812"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:18:56.812" endtime="20210729 14:18:56.812"/>
</kw>
<status status="PASS" starttime="20210729 14:18:56.811" endtime="20210729 14:18:56.812"/>
</iter>
<status status="PASS" starttime="20210729 14:18:56.808" endtime="20210729 14:18:56.812"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:18:56.813" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:18:56.813" endtime="20210729 14:18:56.813"/>
</kw>
<status status="PASS" starttime="20210729 14:18:56.807" endtime="20210729 14:18:56.813"/>
</kw>
<status status="PASS" starttime="20210729 14:18:55.235" endtime="20210729 14:18:56.813"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=12345678</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:56.815" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:18:56.814" endtime="20210729 14:18:56.815"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:56.815" level="INFO">${payload} = {'username': '12345678'}</msg>
<status status="PASS" starttime="20210729 14:18:56.815" endtime="20210729 14:18:56.815"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:18:56.823" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:18:56.824" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:18:56.815" endtime="20210729 14:18:56.824"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:18:56.824" endtime="20210729 14:18:56.824"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:18:56.824" endtime="20210729 14:18:56.824"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:56.815" endtime="20210729 14:18:56.824"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:56.815" endtime="20210729 14:18:56.824"/>
</for>
<status status="FAIL" starttime="20210729 14:18:56.814" endtime="20210729 14:18:56.824"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:56.814" endtime="20210729 14:18:56.824"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=12345678</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:56.825" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:18:56.825" endtime="20210729 14:18:56.826"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:56.826" level="INFO">${payload} = {'username': '12345678'}</msg>
<status status="PASS" starttime="20210729 14:18:56.826" endtime="20210729 14:18:56.826"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:18:56.831" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:18:56.832" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:18:56.826" endtime="20210729 14:18:56.832"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:18:56.832" endtime="20210729 14:18:56.833"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:18:56.833" endtime="20210729 14:18:56.833"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:56.826" endtime="20210729 14:18:56.833"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:56.826" endtime="20210729 14:18:56.833"/>
</for>
<status status="FAIL" starttime="20210729 14:18:56.825" endtime="20210729 14:18:56.833"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:56.825" endtime="20210729 14:18:56.833"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=12345678</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:56.834" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:18:56.834" endtime="20210729 14:18:56.835"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:56.835" level="INFO">${payload} = {'username': '12345678'}</msg>
<status status="PASS" starttime="20210729 14:18:56.835" endtime="20210729 14:18:56.835"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:18:56.839" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:18:56.839" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:18:56.835" endtime="20210729 14:18:56.839"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:18:56.840" endtime="20210729 14:18:56.840"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:18:56.840" endtime="20210729 14:18:56.840"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:56.835" endtime="20210729 14:18:56.840"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:56.835" endtime="20210729 14:18:56.840"/>
</for>
<status status="FAIL" starttime="20210729 14:18:56.833" endtime="20210729 14:18:56.840"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:56.833" endtime="20210729 14:18:56.840"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:56.814" endtime="20210729 14:18:56.840"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:18:56.850" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:18:56.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:18:56.858" level="INFO">${pids} = 11661
11668
11672</msg>
<status status="PASS" starttime="20210729 14:18:56.841" endtime="20210729 14:18:56.858"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:56.859" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:18:56.858" endtime="20210729 14:18:56.859"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:56.860" level="INFO">${pids} = ['11661', '11668', '11672']</msg>
<status status="PASS" starttime="20210729 14:18:56.859" endtime="20210729 14:18:56.860"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11661</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:56.863" level="INFO">Running command 'kill 11661 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:56.860" endtime="20210729 14:18:56.863"/>
</kw>
<status status="PASS" starttime="20210729 14:18:56.860" endtime="20210729 14:18:56.863"/>
</iter>
<iter>
<var name="${pid}">11668</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:56.866" level="INFO">Running command 'kill 11668 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:56.863" endtime="20210729 14:18:56.867"/>
</kw>
<status status="PASS" starttime="20210729 14:18:56.863" endtime="20210729 14:18:56.867"/>
</iter>
<iter>
<var name="${pid}">11672</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:56.872" level="INFO">Running command 'kill 11672 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:56.867" endtime="20210729 14:18:56.873"/>
</kw>
<status status="PASS" starttime="20210729 14:18:56.867" endtime="20210729 14:18:56.873"/>
</iter>
<status status="PASS" starttime="20210729 14:18:56.860" endtime="20210729 14:18:56.873"/>
</for>
<status status="PASS" starttime="20210729 14:18:56.859" endtime="20210729 14:18:56.873"/>
</branch>
<status status="PASS" starttime="20210729 14:18:56.859" endtime="20210729 14:18:56.873"/>
</if>
<status status="PASS" starttime="20210729 14:18:56.840" endtime="20210729 14:18:56.873"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '12345678'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:18:55.234" endtime="20210729 14:18:56.873">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t7" name="With Any Valid Token, Updating Username Of Each System User With 12345678912345 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:18:56.878" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:18:56.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:18:56.887" level="INFO">${pids} = 11701</msg>
<status status="PASS" starttime="20210729 14:18:56.875" endtime="20210729 14:18:56.887"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:56.888" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:18:56.887" endtime="20210729 14:18:56.888"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:56.889" level="INFO">${pids} = ['11701']</msg>
<status status="PASS" starttime="20210729 14:18:56.888" endtime="20210729 14:18:56.889"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11701</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:56.893" level="INFO">Running command 'kill 11701 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:56.889" endtime="20210729 14:18:56.893"/>
</kw>
<status status="PASS" starttime="20210729 14:18:56.889" endtime="20210729 14:18:56.893"/>
</iter>
<status status="PASS" starttime="20210729 14:18:56.889" endtime="20210729 14:18:56.893"/>
</for>
<status status="PASS" starttime="20210729 14:18:56.888" endtime="20210729 14:18:56.893"/>
</branch>
<status status="PASS" starttime="20210729 14:18:56.888" endtime="20210729 14:18:56.893"/>
</if>
<status status="PASS" starttime="20210729 14:18:56.875" endtime="20210729 14:18:56.893"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:56.895" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:56.894" endtime="20210729 14:18:56.895"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:56.895" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:18:56.895" endtime="20210729 14:18:56.896"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:18:56.896" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:18:56.896" endtime="20210729 14:18:56.896"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:56.896" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:56.896" endtime="20210729 14:18:56.896"/>
</kw>
<msg timestamp="20210729 14:18:56.897" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:56.895" endtime="20210729 14:18:56.897"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:56.900" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:56.897" endtime="20210729 14:18:56.901"/>
</kw>
<status status="PASS" starttime="20210729 14:18:56.894" endtime="20210729 14:18:56.902"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:18:56.903" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:18:56.902" endtime="20210729 14:18:56.911"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:18:58.412" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:18:56.911" endtime="20210729 14:18:58.413"/>
</kw>
<status status="PASS" starttime="20210729 14:18:56.902" endtime="20210729 14:18:58.413"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:58.414" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:18:58.414" endtime="20210729 14:18:58.414"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:18:58.414" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:18:58.414" endtime="20210729 14:18:58.414"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:58.415" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:58.414" endtime="20210729 14:18:58.415"/>
</kw>
<msg timestamp="20210729 14:18:58.415" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:58.413" endtime="20210729 14:18:58.415"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:18:58.416" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:18:58.415" endtime="20210729 14:18:58.416"/>
</kw>
<status status="PASS" starttime="20210729 14:18:58.413" endtime="20210729 14:18:58.416"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:18:58.417" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:18:58.417" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:18:58.416" endtime="20210729 14:18:58.417"/>
</kw>
<status status="PASS" starttime="20210729 14:18:58.416" endtime="20210729 14:18:58.417"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:18:58.417" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:18:58.417" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:18:58.417" endtime="20210729 14:18:58.417"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:18:58.418" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:18:58.418" endtime="20210729 14:18:58.418"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:58.418" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:18:58.418" endtime="20210729 14:18:58.418"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:18:58.418" endtime="20210729 14:18:58.419"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:18:58.420" endtime="20210729 14:18:58.420"/>
</kw>
<status status="PASS" starttime="20210729 14:18:58.418" endtime="20210729 14:18:58.420"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:58.420" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:18:58.420" endtime="20210729 14:18:58.420"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:18:58.420" endtime="20210729 14:18:58.421"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:18:58.421" endtime="20210729 14:18:58.421"/>
</kw>
<status status="PASS" starttime="20210729 14:18:58.420" endtime="20210729 14:18:58.421"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:58.421" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:18:58.421" endtime="20210729 14:18:58.421"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:18:58.422" endtime="20210729 14:18:58.422"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:18:58.422" endtime="20210729 14:18:58.422"/>
</kw>
<status status="PASS" starttime="20210729 14:18:58.421" endtime="20210729 14:18:58.423"/>
</iter>
<status status="PASS" starttime="20210729 14:18:58.418" endtime="20210729 14:18:58.423"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:18:58.423" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:18:58.423" endtime="20210729 14:18:58.423"/>
</kw>
<status status="PASS" starttime="20210729 14:18:58.417" endtime="20210729 14:18:58.423"/>
</kw>
<status status="PASS" starttime="20210729 14:18:56.875" endtime="20210729 14:18:58.423"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=12345678912345</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:58.424" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:18:58.424" endtime="20210729 14:18:58.424"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:58.425" level="INFO">${payload} = {'username': '12345678912345'}</msg>
<status status="PASS" starttime="20210729 14:18:58.424" endtime="20210729 14:18:58.425"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:18:58.435" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:18:58.436" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:18:58.425" endtime="20210729 14:18:58.436"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:18:58.436" endtime="20210729 14:18:58.436"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:18:58.436" endtime="20210729 14:18:58.436"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:58.425" endtime="20210729 14:18:58.436"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:58.425" endtime="20210729 14:18:58.436"/>
</for>
<status status="FAIL" starttime="20210729 14:18:58.424" endtime="20210729 14:18:58.436"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:58.424" endtime="20210729 14:18:58.437"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=12345678912345</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:58.438" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:18:58.437" endtime="20210729 14:18:58.438"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:58.438" level="INFO">${payload} = {'username': '12345678912345'}</msg>
<status status="PASS" starttime="20210729 14:18:58.438" endtime="20210729 14:18:58.438"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:18:58.442" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:18:58.443" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:18:58.439" endtime="20210729 14:18:58.443"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:18:58.443" endtime="20210729 14:18:58.443"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:18:58.443" endtime="20210729 14:18:58.443"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:58.438" endtime="20210729 14:18:58.443"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:58.438" endtime="20210729 14:18:58.443"/>
</for>
<status status="FAIL" starttime="20210729 14:18:58.437" endtime="20210729 14:18:58.443"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:58.437" endtime="20210729 14:18:58.443"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=12345678912345</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:58.444" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:18:58.444" endtime="20210729 14:18:58.444"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:18:58.445" level="INFO">${payload} = {'username': '12345678912345'}</msg>
<status status="PASS" starttime="20210729 14:18:58.445" endtime="20210729 14:18:58.445"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:18:58.450" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:18:58.450" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:18:58.445" endtime="20210729 14:18:58.450"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:18:58.450" endtime="20210729 14:18:58.450"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:18:58.450" endtime="20210729 14:18:58.450"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:58.445" endtime="20210729 14:18:58.450"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:58.445" endtime="20210729 14:18:58.450"/>
</for>
<status status="FAIL" starttime="20210729 14:18:58.443" endtime="20210729 14:18:58.451"/>
</kw>
<status status="FAIL" starttime="20210729 14:18:58.443" endtime="20210729 14:18:58.451"/>
</iter>
<status status="FAIL" starttime="20210729 14:18:58.423" endtime="20210729 14:18:58.451"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:18:58.455" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:18:58.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:18:58.464" level="INFO">${pids} = 11724
11731
11736</msg>
<status status="PASS" starttime="20210729 14:18:58.452" endtime="20210729 14:18:58.464"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:58.465" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:18:58.464" endtime="20210729 14:18:58.465"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:58.466" level="INFO">${pids} = ['11724', '11731', '11736']</msg>
<status status="PASS" starttime="20210729 14:18:58.465" endtime="20210729 14:18:58.466"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11724</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:58.469" level="INFO">Running command 'kill 11724 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:58.466" endtime="20210729 14:18:58.469"/>
</kw>
<status status="PASS" starttime="20210729 14:18:58.466" endtime="20210729 14:18:58.469"/>
</iter>
<iter>
<var name="${pid}">11731</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:58.472" level="INFO">Running command 'kill 11731 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:58.470" endtime="20210729 14:18:58.472"/>
</kw>
<status status="PASS" starttime="20210729 14:18:58.470" endtime="20210729 14:18:58.473"/>
</iter>
<iter>
<var name="${pid}">11736</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:58.476" level="INFO">Running command 'kill 11736 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:58.473" endtime="20210729 14:18:58.476"/>
</kw>
<status status="PASS" starttime="20210729 14:18:58.473" endtime="20210729 14:18:58.476"/>
</iter>
<status status="PASS" starttime="20210729 14:18:58.466" endtime="20210729 14:18:58.476"/>
</for>
<status status="PASS" starttime="20210729 14:18:58.465" endtime="20210729 14:18:58.476"/>
</branch>
<status status="PASS" starttime="20210729 14:18:58.465" endtime="20210729 14:18:58.476"/>
</if>
<status status="PASS" starttime="20210729 14:18:58.451" endtime="20210729 14:18:58.476"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '12345678912345'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:18:56.874" endtime="20210729 14:18:58.477">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t8" name="With Any Valid Token, Updating Username Of Each System User With abcdefg Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:18:58.484" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:18:58.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:18:58.493" level="INFO">${pids} = 11765</msg>
<status status="PASS" starttime="20210729 14:18:58.479" endtime="20210729 14:18:58.493"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:58.494" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:18:58.493" endtime="20210729 14:18:58.494"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:18:58.494" level="INFO">${pids} = ['11765']</msg>
<status status="PASS" starttime="20210729 14:18:58.494" endtime="20210729 14:18:58.495"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11765</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:58.498" level="INFO">Running command 'kill 11765 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:58.495" endtime="20210729 14:18:58.500"/>
</kw>
<status status="PASS" starttime="20210729 14:18:58.495" endtime="20210729 14:18:58.500"/>
</iter>
<status status="PASS" starttime="20210729 14:18:58.495" endtime="20210729 14:18:58.500"/>
</for>
<status status="PASS" starttime="20210729 14:18:58.494" endtime="20210729 14:18:58.500"/>
</branch>
<status status="PASS" starttime="20210729 14:18:58.494" endtime="20210729 14:18:58.500"/>
</if>
<status status="PASS" starttime="20210729 14:18:58.479" endtime="20210729 14:18:58.501"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:58.502" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:58.501" endtime="20210729 14:18:58.502"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:58.503" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:18:58.502" endtime="20210729 14:18:58.503"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:18:58.503" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:18:58.503" endtime="20210729 14:18:58.503"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:18:58.504" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:58.503" endtime="20210729 14:18:58.504"/>
</kw>
<msg timestamp="20210729 14:18:58.504" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:18:58.502" endtime="20210729 14:18:58.504"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:18:58.512" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:18:58.504" endtime="20210729 14:18:58.514"/>
</kw>
<status status="PASS" starttime="20210729 14:18:58.501" endtime="20210729 14:18:58.514"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:18:58.516" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:18:58.515" endtime="20210729 14:18:58.519"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:00.022" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:18:58.520" endtime="20210729 14:19:00.022"/>
</kw>
<status status="PASS" starttime="20210729 14:18:58.514" endtime="20210729 14:19:00.022"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:00.023" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:00.023" endtime="20210729 14:19:00.023"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:00.023" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:00.023" endtime="20210729 14:19:00.023"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:00.024" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:00.023" endtime="20210729 14:19:00.024"/>
</kw>
<msg timestamp="20210729 14:19:00.024" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:00.022" endtime="20210729 14:19:00.024"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:00.024" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:00.024" endtime="20210729 14:19:00.025"/>
</kw>
<status status="PASS" starttime="20210729 14:19:00.022" endtime="20210729 14:19:00.025"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:00.025" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:00.025" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:00.025" endtime="20210729 14:19:00.026"/>
</kw>
<status status="PASS" starttime="20210729 14:19:00.025" endtime="20210729 14:19:00.026"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:00.026" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:00.027" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:00.026" endtime="20210729 14:19:00.027"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:00.027" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:00.027" endtime="20210729 14:19:00.027"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:00.028" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:00.028" endtime="20210729 14:19:00.028"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:00.028" endtime="20210729 14:19:00.029"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:00.029" endtime="20210729 14:19:00.029"/>
</kw>
<status status="PASS" starttime="20210729 14:19:00.028" endtime="20210729 14:19:00.029"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:00.030" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:00.030" endtime="20210729 14:19:00.030"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:00.030" endtime="20210729 14:19:00.031"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:00.031" endtime="20210729 14:19:00.031"/>
</kw>
<status status="PASS" starttime="20210729 14:19:00.030" endtime="20210729 14:19:00.031"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:00.032" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:00.032" endtime="20210729 14:19:00.032"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:00.032" endtime="20210729 14:19:00.033"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:00.033" endtime="20210729 14:19:00.033"/>
</kw>
<status status="PASS" starttime="20210729 14:19:00.031" endtime="20210729 14:19:00.033"/>
</iter>
<status status="PASS" starttime="20210729 14:19:00.027" endtime="20210729 14:19:00.033"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:00.034" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:00.034" endtime="20210729 14:19:00.035"/>
</kw>
<status status="PASS" starttime="20210729 14:19:00.026" endtime="20210729 14:19:00.035"/>
</kw>
<status status="PASS" starttime="20210729 14:18:58.478" endtime="20210729 14:19:00.035"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcdefg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:00.037" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:00.036" endtime="20210729 14:19:00.037"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:00.037" level="INFO">${payload} = {'username': 'abcdefg'}</msg>
<status status="PASS" starttime="20210729 14:19:00.037" endtime="20210729 14:19:00.037"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:00.047" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:00.048" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:00.038" endtime="20210729 14:19:00.048"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:00.048" endtime="20210729 14:19:00.048"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:00.048" endtime="20210729 14:19:00.048"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:00.038" endtime="20210729 14:19:00.048"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:00.037" endtime="20210729 14:19:00.048"/>
</for>
<status status="FAIL" starttime="20210729 14:19:00.036" endtime="20210729 14:19:00.048"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:00.036" endtime="20210729 14:19:00.048"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcdefg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:00.049" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:00.049" endtime="20210729 14:19:00.050"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:00.050" level="INFO">${payload} = {'username': 'abcdefg'}</msg>
<status status="PASS" starttime="20210729 14:19:00.050" endtime="20210729 14:19:00.050"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:00.054" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:00.055" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:00.050" endtime="20210729 14:19:00.055"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:00.055" endtime="20210729 14:19:00.055"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:00.055" endtime="20210729 14:19:00.055"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:00.050" endtime="20210729 14:19:00.055"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:00.050" endtime="20210729 14:19:00.055"/>
</for>
<status status="FAIL" starttime="20210729 14:19:00.049" endtime="20210729 14:19:00.055"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:00.049" endtime="20210729 14:19:00.055"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcdefg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:00.057" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:00.056" endtime="20210729 14:19:00.057"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:00.057" level="INFO">${payload} = {'username': 'abcdefg'}</msg>
<status status="PASS" starttime="20210729 14:19:00.057" endtime="20210729 14:19:00.057"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:00.062" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:00.062" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:00.057" endtime="20210729 14:19:00.062"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:00.062" endtime="20210729 14:19:00.062"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:00.063" endtime="20210729 14:19:00.063"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:00.057" endtime="20210729 14:19:00.063"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:00.057" endtime="20210729 14:19:00.063"/>
</for>
<status status="FAIL" starttime="20210729 14:19:00.056" endtime="20210729 14:19:00.063"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:00.055" endtime="20210729 14:19:00.063"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:00.036" endtime="20210729 14:19:00.063"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:00.069" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:00.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:00.078" level="INFO">${pids} = 11788
11795
11805</msg>
<status status="PASS" starttime="20210729 14:19:00.065" endtime="20210729 14:19:00.078"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:00.080" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:00.079" endtime="20210729 14:19:00.080"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:00.081" level="INFO">${pids} = ['11788', '11795', '11805']</msg>
<status status="PASS" starttime="20210729 14:19:00.081" endtime="20210729 14:19:00.081"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11788</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:00.084" level="INFO">Running command 'kill 11788 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:00.081" endtime="20210729 14:19:00.085"/>
</kw>
<status status="PASS" starttime="20210729 14:19:00.081" endtime="20210729 14:19:00.085"/>
</iter>
<iter>
<var name="${pid}">11795</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:00.089" level="INFO">Running command 'kill 11795 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:00.085" endtime="20210729 14:19:00.089"/>
</kw>
<status status="PASS" starttime="20210729 14:19:00.085" endtime="20210729 14:19:00.089"/>
</iter>
<iter>
<var name="${pid}">11805</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:00.093" level="INFO">Running command 'kill 11805 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:00.090" endtime="20210729 14:19:00.093"/>
</kw>
<status status="PASS" starttime="20210729 14:19:00.089" endtime="20210729 14:19:00.093"/>
</iter>
<status status="PASS" starttime="20210729 14:19:00.081" endtime="20210729 14:19:00.093"/>
</for>
<status status="PASS" starttime="20210729 14:19:00.080" endtime="20210729 14:19:00.093"/>
</branch>
<status status="PASS" starttime="20210729 14:19:00.080" endtime="20210729 14:19:00.093"/>
</if>
<status status="PASS" starttime="20210729 14:19:00.064" endtime="20210729 14:19:00.094"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": 'abcdefg'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:18:58.477" endtime="20210729 14:19:00.094">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t9" name="With Any Valid Token, Updating Username Of Each System User With abcdefgh Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:00.102" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:00.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:00.112" level="INFO">${pids} = 11834</msg>
<status status="PASS" starttime="20210729 14:19:00.096" endtime="20210729 14:19:00.112"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:00.113" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:00.112" endtime="20210729 14:19:00.113"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:00.114" level="INFO">${pids} = ['11834']</msg>
<status status="PASS" starttime="20210729 14:19:00.113" endtime="20210729 14:19:00.114"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11834</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:00.117" level="INFO">Running command 'kill 11834 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:00.114" endtime="20210729 14:19:00.118"/>
</kw>
<status status="PASS" starttime="20210729 14:19:00.114" endtime="20210729 14:19:00.118"/>
</iter>
<status status="PASS" starttime="20210729 14:19:00.114" endtime="20210729 14:19:00.118"/>
</for>
<status status="PASS" starttime="20210729 14:19:00.113" endtime="20210729 14:19:00.118"/>
</branch>
<status status="PASS" starttime="20210729 14:19:00.113" endtime="20210729 14:19:00.118"/>
</if>
<status status="PASS" starttime="20210729 14:19:00.096" endtime="20210729 14:19:00.118"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:00.120" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:00.119" endtime="20210729 14:19:00.120"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:00.120" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:00.120" endtime="20210729 14:19:00.120"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:00.121" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:00.120" endtime="20210729 14:19:00.121"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:00.121" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:00.121" endtime="20210729 14:19:00.121"/>
</kw>
<msg timestamp="20210729 14:19:00.121" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:00.120" endtime="20210729 14:19:00.122"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:00.126" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:00.122" endtime="20210729 14:19:00.128"/>
</kw>
<status status="PASS" starttime="20210729 14:19:00.119" endtime="20210729 14:19:00.128"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:00.130" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:00.129" endtime="20210729 14:19:00.134"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:01.649" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:00.134" endtime="20210729 14:19:01.649"/>
</kw>
<status status="PASS" starttime="20210729 14:19:00.128" endtime="20210729 14:19:01.650"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:01.652" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:01.651" endtime="20210729 14:19:01.652"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:01.652" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:01.652" endtime="20210729 14:19:01.652"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:01.653" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:01.652" endtime="20210729 14:19:01.653"/>
</kw>
<msg timestamp="20210729 14:19:01.653" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:01.651" endtime="20210729 14:19:01.653"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:01.654" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:01.654" endtime="20210729 14:19:01.655"/>
</kw>
<status status="PASS" starttime="20210729 14:19:01.650" endtime="20210729 14:19:01.655"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:01.656" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:01.656" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:01.655" endtime="20210729 14:19:01.656"/>
</kw>
<status status="PASS" starttime="20210729 14:19:01.655" endtime="20210729 14:19:01.656"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:01.657" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:01.658" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:01.657" endtime="20210729 14:19:01.658"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:01.658" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:01.658" endtime="20210729 14:19:01.658"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:01.659" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:01.659" endtime="20210729 14:19:01.659"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:01.659" endtime="20210729 14:19:01.661"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:01.661" endtime="20210729 14:19:01.661"/>
</kw>
<status status="PASS" starttime="20210729 14:19:01.659" endtime="20210729 14:19:01.661"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:01.662" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:01.661" endtime="20210729 14:19:01.662"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:01.662" endtime="20210729 14:19:01.663"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:01.663" endtime="20210729 14:19:01.664"/>
</kw>
<status status="PASS" starttime="20210729 14:19:01.661" endtime="20210729 14:19:01.664"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:01.664" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:01.664" endtime="20210729 14:19:01.664"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:01.665" endtime="20210729 14:19:01.666"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:01.666" endtime="20210729 14:19:01.666"/>
</kw>
<status status="PASS" starttime="20210729 14:19:01.664" endtime="20210729 14:19:01.666"/>
</iter>
<status status="PASS" starttime="20210729 14:19:01.658" endtime="20210729 14:19:01.666"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:01.667" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:01.667" endtime="20210729 14:19:01.667"/>
</kw>
<status status="PASS" starttime="20210729 14:19:01.656" endtime="20210729 14:19:01.668"/>
</kw>
<status status="PASS" starttime="20210729 14:19:00.095" endtime="20210729 14:19:01.668"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcdefgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:01.669" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:01.669" endtime="20210729 14:19:01.669"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:01.670" level="INFO">${payload} = {'username': 'abcdefgh'}</msg>
<status status="PASS" starttime="20210729 14:19:01.670" endtime="20210729 14:19:01.670"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:01.683" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:01.683" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:01.671" endtime="20210729 14:19:01.683"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:01.683" endtime="20210729 14:19:01.684"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:01.684" endtime="20210729 14:19:01.684"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:01.670" endtime="20210729 14:19:01.684"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:01.670" endtime="20210729 14:19:01.684"/>
</for>
<status status="FAIL" starttime="20210729 14:19:01.668" endtime="20210729 14:19:01.684"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:01.668" endtime="20210729 14:19:01.684"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcdefgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:01.686" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:01.685" endtime="20210729 14:19:01.686"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:01.686" level="INFO">${payload} = {'username': 'abcdefgh'}</msg>
<status status="PASS" starttime="20210729 14:19:01.686" endtime="20210729 14:19:01.686"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:01.692" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:01.692" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:01.687" endtime="20210729 14:19:01.692"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:01.693" endtime="20210729 14:19:01.693"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:01.693" endtime="20210729 14:19:01.693"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:01.687" endtime="20210729 14:19:01.693"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:01.686" endtime="20210729 14:19:01.693"/>
</for>
<status status="FAIL" starttime="20210729 14:19:01.684" endtime="20210729 14:19:01.693"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:01.684" endtime="20210729 14:19:01.693"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcdefgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:01.695" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:01.694" endtime="20210729 14:19:01.695"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:01.696" level="INFO">${payload} = {'username': 'abcdefgh'}</msg>
<status status="PASS" starttime="20210729 14:19:01.695" endtime="20210729 14:19:01.696"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:01.702" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:01.703" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:01.696" endtime="20210729 14:19:01.703"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:01.703" endtime="20210729 14:19:01.703"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:01.703" endtime="20210729 14:19:01.703"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:01.696" endtime="20210729 14:19:01.703"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:01.696" endtime="20210729 14:19:01.703"/>
</for>
<status status="FAIL" starttime="20210729 14:19:01.694" endtime="20210729 14:19:01.704"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:01.693" endtime="20210729 14:19:01.704"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:01.668" endtime="20210729 14:19:01.704"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:01.709" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:01.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:01.722" level="INFO">${pids} = 11857
11864
11868</msg>
<status status="PASS" starttime="20210729 14:19:01.705" endtime="20210729 14:19:01.722"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:01.723" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:01.723" endtime="20210729 14:19:01.723"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:01.724" level="INFO">${pids} = ['11857', '11864', '11868']</msg>
<status status="PASS" starttime="20210729 14:19:01.724" endtime="20210729 14:19:01.724"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11857</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:01.729" level="INFO">Running command 'kill 11857 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:01.725" endtime="20210729 14:19:01.729"/>
</kw>
<status status="PASS" starttime="20210729 14:19:01.725" endtime="20210729 14:19:01.729"/>
</iter>
<iter>
<var name="${pid}">11864</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:01.733" level="INFO">Running command 'kill 11864 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:01.730" endtime="20210729 14:19:01.735"/>
</kw>
<status status="PASS" starttime="20210729 14:19:01.730" endtime="20210729 14:19:01.735"/>
</iter>
<iter>
<var name="${pid}">11868</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:01.740" level="INFO">Running command 'kill 11868 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:01.736" endtime="20210729 14:19:01.740"/>
</kw>
<status status="PASS" starttime="20210729 14:19:01.736" endtime="20210729 14:19:01.740"/>
</iter>
<status status="PASS" starttime="20210729 14:19:01.724" endtime="20210729 14:19:01.740"/>
</for>
<status status="PASS" starttime="20210729 14:19:01.724" endtime="20210729 14:19:01.740"/>
</branch>
<status status="PASS" starttime="20210729 14:19:01.723" endtime="20210729 14:19:01.740"/>
</if>
<status status="PASS" starttime="20210729 14:19:01.704" endtime="20210729 14:19:01.741"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": 'abcdefgh'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:00.094" endtime="20210729 14:19:01.741">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t10" name="With Any Valid Token, Updating Username Of Each System User With abcdefghijklmnprstop Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:01.748" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:01.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:01.758" level="INFO">${pids} = 11897</msg>
<status status="PASS" starttime="20210729 14:19:01.743" endtime="20210729 14:19:01.758"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:01.759" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:01.758" endtime="20210729 14:19:01.759"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:01.760" level="INFO">${pids} = ['11897']</msg>
<status status="PASS" starttime="20210729 14:19:01.760" endtime="20210729 14:19:01.760"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11897</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:01.768" level="INFO">Running command 'kill 11897 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:01.761" endtime="20210729 14:19:01.768"/>
</kw>
<status status="PASS" starttime="20210729 14:19:01.760" endtime="20210729 14:19:01.769"/>
</iter>
<status status="PASS" starttime="20210729 14:19:01.760" endtime="20210729 14:19:01.769"/>
</for>
<status status="PASS" starttime="20210729 14:19:01.759" endtime="20210729 14:19:01.769"/>
</branch>
<status status="PASS" starttime="20210729 14:19:01.759" endtime="20210729 14:19:01.769"/>
</if>
<status status="PASS" starttime="20210729 14:19:01.743" endtime="20210729 14:19:01.769"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:01.770" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:01.770" endtime="20210729 14:19:01.770"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:01.771" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:01.771" endtime="20210729 14:19:01.771"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:01.772" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:01.771" endtime="20210729 14:19:01.772"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:01.772" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:01.772" endtime="20210729 14:19:01.772"/>
</kw>
<msg timestamp="20210729 14:19:01.773" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:01.771" endtime="20210729 14:19:01.773"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:01.779" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:01.773" endtime="20210729 14:19:01.789"/>
</kw>
<status status="PASS" starttime="20210729 14:19:01.769" endtime="20210729 14:19:01.790"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:01.792" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:01.791" endtime="20210729 14:19:01.796"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:03.302" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:01.797" endtime="20210729 14:19:03.302"/>
</kw>
<status status="PASS" starttime="20210729 14:19:01.790" endtime="20210729 14:19:03.302"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:03.303" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:03.303" endtime="20210729 14:19:03.303"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:03.304" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:03.303" endtime="20210729 14:19:03.304"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:03.304" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:03.304" endtime="20210729 14:19:03.304"/>
</kw>
<msg timestamp="20210729 14:19:03.304" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:03.303" endtime="20210729 14:19:03.304"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:03.304" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:03.304" endtime="20210729 14:19:03.305"/>
</kw>
<status status="PASS" starttime="20210729 14:19:03.302" endtime="20210729 14:19:03.305"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:03.305" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:03.305" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:03.305" endtime="20210729 14:19:03.305"/>
</kw>
<status status="PASS" starttime="20210729 14:19:03.305" endtime="20210729 14:19:03.306"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:03.306" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:03.307" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:03.306" endtime="20210729 14:19:03.307"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:03.307" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:03.307" endtime="20210729 14:19:03.307"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:03.307" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:03.307" endtime="20210729 14:19:03.307"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:03.308" endtime="20210729 14:19:03.308"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:03.308" endtime="20210729 14:19:03.308"/>
</kw>
<status status="PASS" starttime="20210729 14:19:03.307" endtime="20210729 14:19:03.309"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:03.309" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:03.309" endtime="20210729 14:19:03.309"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:03.309" endtime="20210729 14:19:03.310"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:03.310" endtime="20210729 14:19:03.310"/>
</kw>
<status status="PASS" starttime="20210729 14:19:03.309" endtime="20210729 14:19:03.310"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:03.310" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:03.310" endtime="20210729 14:19:03.311"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:03.311" endtime="20210729 14:19:03.311"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:03.312" endtime="20210729 14:19:03.312"/>
</kw>
<status status="PASS" starttime="20210729 14:19:03.310" endtime="20210729 14:19:03.312"/>
</iter>
<status status="PASS" starttime="20210729 14:19:03.307" endtime="20210729 14:19:03.312"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:03.312" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:03.312" endtime="20210729 14:19:03.312"/>
</kw>
<status status="PASS" starttime="20210729 14:19:03.306" endtime="20210729 14:19:03.313"/>
</kw>
<status status="PASS" starttime="20210729 14:19:01.742" endtime="20210729 14:19:03.313"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcdefghijklmnprstop</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:03.314" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:03.314" endtime="20210729 14:19:03.314"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:03.315" level="INFO">${payload} = {'username': 'abcdefghijklmnprstop'}</msg>
<status status="PASS" starttime="20210729 14:19:03.314" endtime="20210729 14:19:03.315"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:03.325" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:03.325" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:03.315" endtime="20210729 14:19:03.325"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:03.325" endtime="20210729 14:19:03.326"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:03.326" endtime="20210729 14:19:03.326"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:03.315" endtime="20210729 14:19:03.326"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:03.315" endtime="20210729 14:19:03.326"/>
</for>
<status status="FAIL" starttime="20210729 14:19:03.313" endtime="20210729 14:19:03.326"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:03.313" endtime="20210729 14:19:03.326"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcdefghijklmnprstop</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:03.327" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:03.327" endtime="20210729 14:19:03.327"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:03.328" level="INFO">${payload} = {'username': 'abcdefghijklmnprstop'}</msg>
<status status="PASS" starttime="20210729 14:19:03.328" endtime="20210729 14:19:03.328"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:03.333" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:03.333" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:03.328" endtime="20210729 14:19:03.333"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:03.333" endtime="20210729 14:19:03.334"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:03.334" endtime="20210729 14:19:03.334"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:03.328" endtime="20210729 14:19:03.334"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:03.328" endtime="20210729 14:19:03.334"/>
</for>
<status status="FAIL" starttime="20210729 14:19:03.326" endtime="20210729 14:19:03.334"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:03.326" endtime="20210729 14:19:03.334"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcdefghijklmnprstop</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:03.336" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:03.335" endtime="20210729 14:19:03.336"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:03.336" level="INFO">${payload} = {'username': 'abcdefghijklmnprstop'}</msg>
<status status="PASS" starttime="20210729 14:19:03.336" endtime="20210729 14:19:03.336"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:03.342" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:03.343" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:03.337" endtime="20210729 14:19:03.343"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:03.343" endtime="20210729 14:19:03.343"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:03.343" endtime="20210729 14:19:03.343"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:03.336" endtime="20210729 14:19:03.343"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:03.336" endtime="20210729 14:19:03.343"/>
</for>
<status status="FAIL" starttime="20210729 14:19:03.334" endtime="20210729 14:19:03.344"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:03.334" endtime="20210729 14:19:03.344"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:03.313" endtime="20210729 14:19:03.344"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:03.351" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:03.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:03.360" level="INFO">${pids} = 11920
11927
11936</msg>
<status status="PASS" starttime="20210729 14:19:03.348" endtime="20210729 14:19:03.360"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:03.362" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:03.361" endtime="20210729 14:19:03.362"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:03.362" level="INFO">${pids} = ['11920', '11927', '11936']</msg>
<status status="PASS" starttime="20210729 14:19:03.362" endtime="20210729 14:19:03.362"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11920</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:03.368" level="INFO">Running command 'kill 11920 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:03.363" endtime="20210729 14:19:03.368"/>
</kw>
<status status="PASS" starttime="20210729 14:19:03.362" endtime="20210729 14:19:03.368"/>
</iter>
<iter>
<var name="${pid}">11927</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:03.374" level="INFO">Running command 'kill 11927 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:03.369" endtime="20210729 14:19:03.376"/>
</kw>
<status status="PASS" starttime="20210729 14:19:03.369" endtime="20210729 14:19:03.376"/>
</iter>
<iter>
<var name="${pid}">11936</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:03.380" level="INFO">Running command 'kill 11936 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:03.376" endtime="20210729 14:19:03.380"/>
</kw>
<status status="PASS" starttime="20210729 14:19:03.376" endtime="20210729 14:19:03.380"/>
</iter>
<status status="PASS" starttime="20210729 14:19:03.362" endtime="20210729 14:19:03.380"/>
</for>
<status status="PASS" starttime="20210729 14:19:03.362" endtime="20210729 14:19:03.380"/>
</branch>
<status status="PASS" starttime="20210729 14:19:03.362" endtime="20210729 14:19:03.380"/>
</if>
<status status="PASS" starttime="20210729 14:19:03.345" endtime="20210729 14:19:03.381"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": 'abcdefghijklmnprstop'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:01.741" endtime="20210729 14:19:03.381">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t11" name="With Any Valid Token, Updating Username Of Each System User With hakan12 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:03.386" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:03.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:03.394" level="INFO">${pids} = 11965</msg>
<status status="PASS" starttime="20210729 14:19:03.383" endtime="20210729 14:19:03.394"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:03.395" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:03.395" endtime="20210729 14:19:03.396"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:03.397" level="INFO">${pids} = ['11965']</msg>
<status status="PASS" starttime="20210729 14:19:03.396" endtime="20210729 14:19:03.397"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11965</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:03.401" level="INFO">Running command 'kill 11965 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:03.397" endtime="20210729 14:19:03.401"/>
</kw>
<status status="PASS" starttime="20210729 14:19:03.397" endtime="20210729 14:19:03.401"/>
</iter>
<status status="PASS" starttime="20210729 14:19:03.397" endtime="20210729 14:19:03.401"/>
</for>
<status status="PASS" starttime="20210729 14:19:03.396" endtime="20210729 14:19:03.401"/>
</branch>
<status status="PASS" starttime="20210729 14:19:03.396" endtime="20210729 14:19:03.402"/>
</if>
<status status="PASS" starttime="20210729 14:19:03.382" endtime="20210729 14:19:03.402"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:03.410" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:03.409" endtime="20210729 14:19:03.410"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:03.411" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:03.411" endtime="20210729 14:19:03.411"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:03.412" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:03.411" endtime="20210729 14:19:03.412"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:03.412" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:03.412" endtime="20210729 14:19:03.412"/>
</kw>
<msg timestamp="20210729 14:19:03.413" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:03.410" endtime="20210729 14:19:03.413"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:03.422" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:03.413" endtime="20210729 14:19:03.424"/>
</kw>
<status status="PASS" starttime="20210729 14:19:03.402" endtime="20210729 14:19:03.424"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:03.425" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:03.425" endtime="20210729 14:19:03.430"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:04.931" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:03.430" endtime="20210729 14:19:04.932"/>
</kw>
<status status="PASS" starttime="20210729 14:19:03.424" endtime="20210729 14:19:04.932"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:04.933" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:04.933" endtime="20210729 14:19:04.933"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:04.933" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:04.933" endtime="20210729 14:19:04.933"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:04.934" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:04.933" endtime="20210729 14:19:04.934"/>
</kw>
<msg timestamp="20210729 14:19:04.934" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:04.932" endtime="20210729 14:19:04.934"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:04.934" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:04.934" endtime="20210729 14:19:04.935"/>
</kw>
<status status="PASS" starttime="20210729 14:19:04.932" endtime="20210729 14:19:04.935"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:04.935" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:04.935" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:04.935" endtime="20210729 14:19:04.935"/>
</kw>
<status status="PASS" starttime="20210729 14:19:04.935" endtime="20210729 14:19:04.936"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:04.936" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:04.936" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:04.936" endtime="20210729 14:19:04.936"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:04.937" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:04.936" endtime="20210729 14:19:04.937"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:04.937" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:04.937" endtime="20210729 14:19:04.937"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:04.937" endtime="20210729 14:19:04.938"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:04.938" endtime="20210729 14:19:04.938"/>
</kw>
<status status="PASS" starttime="20210729 14:19:04.937" endtime="20210729 14:19:04.938"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:04.938" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:04.938" endtime="20210729 14:19:04.938"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:04.939" endtime="20210729 14:19:04.939"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:04.939" endtime="20210729 14:19:04.939"/>
</kw>
<status status="PASS" starttime="20210729 14:19:04.938" endtime="20210729 14:19:04.940"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:04.940" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:04.940" endtime="20210729 14:19:04.940"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:04.940" endtime="20210729 14:19:04.941"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:04.941" endtime="20210729 14:19:04.941"/>
</kw>
<status status="PASS" starttime="20210729 14:19:04.940" endtime="20210729 14:19:04.941"/>
</iter>
<status status="PASS" starttime="20210729 14:19:04.937" endtime="20210729 14:19:04.941"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:04.941" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:04.941" endtime="20210729 14:19:04.941"/>
</kw>
<status status="PASS" starttime="20210729 14:19:04.936" endtime="20210729 14:19:04.942"/>
</kw>
<status status="PASS" starttime="20210729 14:19:03.382" endtime="20210729 14:19:04.942"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=hakan12</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:04.943" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:04.942" endtime="20210729 14:19:04.943"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:04.943" level="INFO">${payload} = {'username': 'hakan12'}</msg>
<status status="PASS" starttime="20210729 14:19:04.943" endtime="20210729 14:19:04.943"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:04.953" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:04.953" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:04.944" endtime="20210729 14:19:04.953"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:04.953" endtime="20210729 14:19:04.953"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:04.953" endtime="20210729 14:19:04.953"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:04.943" endtime="20210729 14:19:04.953"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:04.943" endtime="20210729 14:19:04.954"/>
</for>
<status status="FAIL" starttime="20210729 14:19:04.942" endtime="20210729 14:19:04.954"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:04.942" endtime="20210729 14:19:04.954"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=hakan12</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:04.955" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:04.954" endtime="20210729 14:19:04.955"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:04.955" level="INFO">${payload} = {'username': 'hakan12'}</msg>
<status status="PASS" starttime="20210729 14:19:04.955" endtime="20210729 14:19:04.955"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:04.959" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:04.959" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:04.955" endtime="20210729 14:19:04.959"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:04.960" endtime="20210729 14:19:04.960"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:04.960" endtime="20210729 14:19:04.960"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:04.955" endtime="20210729 14:19:04.960"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:04.955" endtime="20210729 14:19:04.960"/>
</for>
<status status="FAIL" starttime="20210729 14:19:04.954" endtime="20210729 14:19:04.960"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:04.954" endtime="20210729 14:19:04.960"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=hakan12</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:04.961" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:04.961" endtime="20210729 14:19:04.961"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:04.962" level="INFO">${payload} = {'username': 'hakan12'}</msg>
<status status="PASS" starttime="20210729 14:19:04.961" endtime="20210729 14:19:04.962"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:04.966" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:04.966" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:04.962" endtime="20210729 14:19:04.966"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:04.966" endtime="20210729 14:19:04.967"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:04.967" endtime="20210729 14:19:04.967"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:04.962" endtime="20210729 14:19:04.967"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:04.962" endtime="20210729 14:19:04.967"/>
</for>
<status status="FAIL" starttime="20210729 14:19:04.960" endtime="20210729 14:19:04.967"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:04.960" endtime="20210729 14:19:04.967"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:04.942" endtime="20210729 14:19:04.967"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:04.972" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:04.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:04.980" level="INFO">${pids} = 11988
11995
12005</msg>
<status status="PASS" starttime="20210729 14:19:04.969" endtime="20210729 14:19:04.980"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:04.981" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:04.980" endtime="20210729 14:19:04.981"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:04.981" level="INFO">${pids} = ['11988', '11995', '12005']</msg>
<status status="PASS" starttime="20210729 14:19:04.981" endtime="20210729 14:19:04.981"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">11988</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:04.984" level="INFO">Running command 'kill 11988 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:04.982" endtime="20210729 14:19:04.985"/>
</kw>
<status status="PASS" starttime="20210729 14:19:04.982" endtime="20210729 14:19:04.985"/>
</iter>
<iter>
<var name="${pid}">11995</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:04.987" level="INFO">Running command 'kill 11995 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:04.985" endtime="20210729 14:19:04.987"/>
</kw>
<status status="PASS" starttime="20210729 14:19:04.985" endtime="20210729 14:19:04.987"/>
</iter>
<iter>
<var name="${pid}">12005</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:04.991" level="INFO">Running command 'kill 12005 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:04.988" endtime="20210729 14:19:04.991"/>
</kw>
<status status="PASS" starttime="20210729 14:19:04.988" endtime="20210729 14:19:04.991"/>
</iter>
<status status="PASS" starttime="20210729 14:19:04.981" endtime="20210729 14:19:04.991"/>
</for>
<status status="PASS" starttime="20210729 14:19:04.981" endtime="20210729 14:19:04.991"/>
</branch>
<status status="PASS" starttime="20210729 14:19:04.981" endtime="20210729 14:19:04.991"/>
</if>
<status status="PASS" starttime="20210729 14:19:04.968" endtime="20210729 14:19:04.991"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": 'hakan12'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:03.381" endtime="20210729 14:19:04.992">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t12" name="With Any Valid Token, Updating Username Of Each System User With hakan123 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:04.996" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:05.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:05.004" level="INFO">${pids} = 12034</msg>
<status status="PASS" starttime="20210729 14:19:04.993" endtime="20210729 14:19:05.004"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:05.005" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:05.005" endtime="20210729 14:19:05.005"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:05.006" level="INFO">${pids} = ['12034']</msg>
<status status="PASS" starttime="20210729 14:19:05.006" endtime="20210729 14:19:05.006"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12034</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:05.013" level="INFO">Running command 'kill 12034 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:05.006" endtime="20210729 14:19:05.013"/>
</kw>
<status status="PASS" starttime="20210729 14:19:05.006" endtime="20210729 14:19:05.013"/>
</iter>
<status status="PASS" starttime="20210729 14:19:05.006" endtime="20210729 14:19:05.013"/>
</for>
<status status="PASS" starttime="20210729 14:19:05.006" endtime="20210729 14:19:05.013"/>
</branch>
<status status="PASS" starttime="20210729 14:19:05.005" endtime="20210729 14:19:05.014"/>
</if>
<status status="PASS" starttime="20210729 14:19:04.993" endtime="20210729 14:19:05.014"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:05.015" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:05.015" endtime="20210729 14:19:05.015"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:05.016" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:05.016" endtime="20210729 14:19:05.016"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:05.017" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:05.016" endtime="20210729 14:19:05.017"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:05.017" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:05.017" endtime="20210729 14:19:05.017"/>
</kw>
<msg timestamp="20210729 14:19:05.017" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:05.015" endtime="20210729 14:19:05.017"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:05.029" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:05.017" endtime="20210729 14:19:05.032"/>
</kw>
<status status="PASS" starttime="20210729 14:19:05.014" endtime="20210729 14:19:05.032"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:05.034" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:05.033" endtime="20210729 14:19:05.038"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:06.538" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:05.038" endtime="20210729 14:19:06.539"/>
</kw>
<status status="PASS" starttime="20210729 14:19:05.033" endtime="20210729 14:19:06.539"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:06.540" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:06.540" endtime="20210729 14:19:06.540"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:06.540" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:06.540" endtime="20210729 14:19:06.540"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:06.541" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:06.541" endtime="20210729 14:19:06.541"/>
</kw>
<msg timestamp="20210729 14:19:06.541" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:06.540" endtime="20210729 14:19:06.541"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:06.541" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:06.541" endtime="20210729 14:19:06.542"/>
</kw>
<status status="PASS" starttime="20210729 14:19:06.539" endtime="20210729 14:19:06.542"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:06.542" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:06.542" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:06.542" endtime="20210729 14:19:06.542"/>
</kw>
<status status="PASS" starttime="20210729 14:19:06.542" endtime="20210729 14:19:06.543"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:06.543" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:06.543" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:06.543" endtime="20210729 14:19:06.543"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:06.544" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:06.544" endtime="20210729 14:19:06.544"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:06.544" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:06.544" endtime="20210729 14:19:06.544"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:06.545" endtime="20210729 14:19:06.545"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:06.546" endtime="20210729 14:19:06.546"/>
</kw>
<status status="PASS" starttime="20210729 14:19:06.544" endtime="20210729 14:19:06.546"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:06.546" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:06.546" endtime="20210729 14:19:06.546"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:06.546" endtime="20210729 14:19:06.547"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:06.547" endtime="20210729 14:19:06.547"/>
</kw>
<status status="PASS" starttime="20210729 14:19:06.546" endtime="20210729 14:19:06.547"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:06.548" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:06.548" endtime="20210729 14:19:06.548"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:06.548" endtime="20210729 14:19:06.548"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:06.549" endtime="20210729 14:19:06.549"/>
</kw>
<status status="PASS" starttime="20210729 14:19:06.547" endtime="20210729 14:19:06.549"/>
</iter>
<status status="PASS" starttime="20210729 14:19:06.544" endtime="20210729 14:19:06.549"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:06.549" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:06.549" endtime="20210729 14:19:06.549"/>
</kw>
<status status="PASS" starttime="20210729 14:19:06.543" endtime="20210729 14:19:06.549"/>
</kw>
<status status="PASS" starttime="20210729 14:19:04.993" endtime="20210729 14:19:06.550"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=hakan123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:06.551" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:06.550" endtime="20210729 14:19:06.551"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:06.551" level="INFO">${payload} = {'username': 'hakan123'}</msg>
<status status="PASS" starttime="20210729 14:19:06.551" endtime="20210729 14:19:06.551"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:06.560" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:06.560" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:06.551" endtime="20210729 14:19:06.560"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:06.560" endtime="20210729 14:19:06.560"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:06.560" endtime="20210729 14:19:06.560"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:06.551" endtime="20210729 14:19:06.560"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:06.551" endtime="20210729 14:19:06.560"/>
</for>
<status status="FAIL" starttime="20210729 14:19:06.550" endtime="20210729 14:19:06.561"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:06.550" endtime="20210729 14:19:06.561"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=hakan123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:06.562" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:06.562" endtime="20210729 14:19:06.562"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:06.562" level="INFO">${payload} = {'username': 'hakan123'}</msg>
<status status="PASS" starttime="20210729 14:19:06.562" endtime="20210729 14:19:06.562"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:06.567" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:06.567" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:06.563" endtime="20210729 14:19:06.567"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:06.567" endtime="20210729 14:19:06.567"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:06.567" endtime="20210729 14:19:06.567"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:06.563" endtime="20210729 14:19:06.567"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:06.563" endtime="20210729 14:19:06.568"/>
</for>
<status status="FAIL" starttime="20210729 14:19:06.561" endtime="20210729 14:19:06.568"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:06.561" endtime="20210729 14:19:06.568"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=hakan123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:06.569" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:06.568" endtime="20210729 14:19:06.569"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:06.569" level="INFO">${payload} = {'username': 'hakan123'}</msg>
<status status="PASS" starttime="20210729 14:19:06.569" endtime="20210729 14:19:06.569"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:06.573" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:06.574" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:06.570" endtime="20210729 14:19:06.574"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:06.574" endtime="20210729 14:19:06.574"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:06.574" endtime="20210729 14:19:06.574"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:06.569" endtime="20210729 14:19:06.574"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:06.569" endtime="20210729 14:19:06.574"/>
</for>
<status status="FAIL" starttime="20210729 14:19:06.568" endtime="20210729 14:19:06.574"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:06.568" endtime="20210729 14:19:06.574"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:06.550" endtime="20210729 14:19:06.574"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:06.578" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:06.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:06.587" level="INFO">${pids} = 12057
12064
12068</msg>
<status status="PASS" starttime="20210729 14:19:06.575" endtime="20210729 14:19:06.587"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:06.588" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:06.588" endtime="20210729 14:19:06.588"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:06.589" level="INFO">${pids} = ['12057', '12064', '12068']</msg>
<status status="PASS" starttime="20210729 14:19:06.589" endtime="20210729 14:19:06.589"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12057</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:06.592" level="INFO">Running command 'kill 12057 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:06.589" endtime="20210729 14:19:06.592"/>
</kw>
<status status="PASS" starttime="20210729 14:19:06.589" endtime="20210729 14:19:06.592"/>
</iter>
<iter>
<var name="${pid}">12064</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:06.602" level="INFO">Running command 'kill 12064 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:06.593" endtime="20210729 14:19:06.602"/>
</kw>
<status status="PASS" starttime="20210729 14:19:06.593" endtime="20210729 14:19:06.602"/>
</iter>
<iter>
<var name="${pid}">12068</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:06.605" level="INFO">Running command 'kill 12068 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:06.603" endtime="20210729 14:19:06.606"/>
</kw>
<status status="PASS" starttime="20210729 14:19:06.602" endtime="20210729 14:19:06.606"/>
</iter>
<status status="PASS" starttime="20210729 14:19:06.589" endtime="20210729 14:19:06.606"/>
</for>
<status status="PASS" starttime="20210729 14:19:06.589" endtime="20210729 14:19:06.606"/>
</branch>
<status status="PASS" starttime="20210729 14:19:06.588" endtime="20210729 14:19:06.606"/>
</if>
<status status="PASS" starttime="20210729 14:19:06.574" endtime="20210729 14:19:06.606"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": 'hakan123'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:04.992" endtime="20210729 14:19:06.606">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t13" name="With Any Valid Token, Updating Username Of Each System User With hakan123456789123456789 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:06.613" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:06.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:06.621" level="INFO">${pids} = 12097</msg>
<status status="PASS" starttime="20210729 14:19:06.608" endtime="20210729 14:19:06.622"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:06.622" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:06.622" endtime="20210729 14:19:06.622"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:06.623" level="INFO">${pids} = ['12097']</msg>
<status status="PASS" starttime="20210729 14:19:06.623" endtime="20210729 14:19:06.623"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12097</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:06.626" level="INFO">Running command 'kill 12097 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:06.624" endtime="20210729 14:19:06.627"/>
</kw>
<status status="PASS" starttime="20210729 14:19:06.624" endtime="20210729 14:19:06.627"/>
</iter>
<status status="PASS" starttime="20210729 14:19:06.623" endtime="20210729 14:19:06.627"/>
</for>
<status status="PASS" starttime="20210729 14:19:06.623" endtime="20210729 14:19:06.627"/>
</branch>
<status status="PASS" starttime="20210729 14:19:06.623" endtime="20210729 14:19:06.627"/>
</if>
<status status="PASS" starttime="20210729 14:19:06.608" endtime="20210729 14:19:06.627"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:06.628" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:06.628" endtime="20210729 14:19:06.628"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:06.629" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:06.629" endtime="20210729 14:19:06.629"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:06.629" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:06.629" endtime="20210729 14:19:06.629"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:06.630" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:06.629" endtime="20210729 14:19:06.630"/>
</kw>
<msg timestamp="20210729 14:19:06.630" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:06.629" endtime="20210729 14:19:06.630"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:06.634" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:06.630" endtime="20210729 14:19:06.635"/>
</kw>
<status status="PASS" starttime="20210729 14:19:06.628" endtime="20210729 14:19:06.635"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:06.637" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:06.636" endtime="20210729 14:19:06.646"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:08.147" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:06.646" endtime="20210729 14:19:08.148"/>
</kw>
<status status="PASS" starttime="20210729 14:19:06.636" endtime="20210729 14:19:08.148"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:08.149" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:08.149" endtime="20210729 14:19:08.149"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:08.149" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:08.149" endtime="20210729 14:19:08.149"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:08.150" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:08.150" endtime="20210729 14:19:08.150"/>
</kw>
<msg timestamp="20210729 14:19:08.150" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:08.148" endtime="20210729 14:19:08.150"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:08.150" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:08.150" endtime="20210729 14:19:08.151"/>
</kw>
<status status="PASS" starttime="20210729 14:19:08.148" endtime="20210729 14:19:08.151"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:08.151" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:08.151" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:08.151" endtime="20210729 14:19:08.152"/>
</kw>
<status status="PASS" starttime="20210729 14:19:08.151" endtime="20210729 14:19:08.152"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:08.152" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:08.152" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:08.152" endtime="20210729 14:19:08.152"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:08.153" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:08.153" endtime="20210729 14:19:08.153"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:08.154" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:08.153" endtime="20210729 14:19:08.154"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:08.154" endtime="20210729 14:19:08.154"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:08.155" endtime="20210729 14:19:08.155"/>
</kw>
<status status="PASS" starttime="20210729 14:19:08.153" endtime="20210729 14:19:08.155"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:08.155" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:08.155" endtime="20210729 14:19:08.155"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:08.155" endtime="20210729 14:19:08.156"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:08.156" endtime="20210729 14:19:08.156"/>
</kw>
<status status="PASS" starttime="20210729 14:19:08.155" endtime="20210729 14:19:08.156"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:08.157" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:08.156" endtime="20210729 14:19:08.157"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:08.157" endtime="20210729 14:19:08.157"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:08.157" endtime="20210729 14:19:08.158"/>
</kw>
<status status="PASS" starttime="20210729 14:19:08.156" endtime="20210729 14:19:08.158"/>
</iter>
<status status="PASS" starttime="20210729 14:19:08.153" endtime="20210729 14:19:08.158"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:08.158" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:08.158" endtime="20210729 14:19:08.158"/>
</kw>
<status status="PASS" starttime="20210729 14:19:08.152" endtime="20210729 14:19:08.158"/>
</kw>
<status status="PASS" starttime="20210729 14:19:06.607" endtime="20210729 14:19:08.158"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=hakan123456789123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:08.160" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:08.159" endtime="20210729 14:19:08.160"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:08.160" level="INFO">${payload} = {'username': 'hakan123456789123456789'}</msg>
<status status="PASS" starttime="20210729 14:19:08.160" endtime="20210729 14:19:08.160"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:08.169" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:08.170" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:08.160" endtime="20210729 14:19:08.170"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:08.170" endtime="20210729 14:19:08.170"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:08.170" endtime="20210729 14:19:08.170"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:08.160" endtime="20210729 14:19:08.170"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:08.160" endtime="20210729 14:19:08.170"/>
</for>
<status status="FAIL" starttime="20210729 14:19:08.159" endtime="20210729 14:19:08.170"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:08.159" endtime="20210729 14:19:08.170"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=hakan123456789123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:08.171" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:08.171" endtime="20210729 14:19:08.171"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:08.172" level="INFO">${payload} = {'username': 'hakan123456789123456789'}</msg>
<status status="PASS" starttime="20210729 14:19:08.171" endtime="20210729 14:19:08.172"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:08.176" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:08.176" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:08.172" endtime="20210729 14:19:08.176"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:08.176" endtime="20210729 14:19:08.176"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:08.177" endtime="20210729 14:19:08.177"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:08.172" endtime="20210729 14:19:08.177"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:08.172" endtime="20210729 14:19:08.177"/>
</for>
<status status="FAIL" starttime="20210729 14:19:08.170" endtime="20210729 14:19:08.177"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:08.170" endtime="20210729 14:19:08.177"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=hakan123456789123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:08.178" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:08.178" endtime="20210729 14:19:08.178"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:08.178" level="INFO">${payload} = {'username': 'hakan123456789123456789'}</msg>
<status status="PASS" starttime="20210729 14:19:08.178" endtime="20210729 14:19:08.178"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:08.183" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:08.183" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:08.179" endtime="20210729 14:19:08.183"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:08.183" endtime="20210729 14:19:08.183"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:08.183" endtime="20210729 14:19:08.183"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:08.179" endtime="20210729 14:19:08.183"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:08.179" endtime="20210729 14:19:08.184"/>
</for>
<status status="FAIL" starttime="20210729 14:19:08.177" endtime="20210729 14:19:08.184"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:08.177" endtime="20210729 14:19:08.184"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:08.159" endtime="20210729 14:19:08.184"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:08.188" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:08.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:08.197" level="INFO">${pids} = 12120
12127
12135</msg>
<status status="PASS" starttime="20210729 14:19:08.185" endtime="20210729 14:19:08.197"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:08.198" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:08.197" endtime="20210729 14:19:08.198"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:08.198" level="INFO">${pids} = ['12120', '12127', '12135']</msg>
<status status="PASS" starttime="20210729 14:19:08.198" endtime="20210729 14:19:08.198"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12120</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:08.202" level="INFO">Running command 'kill 12120 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:08.199" endtime="20210729 14:19:08.202"/>
</kw>
<status status="PASS" starttime="20210729 14:19:08.199" endtime="20210729 14:19:08.202"/>
</iter>
<iter>
<var name="${pid}">12127</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:08.205" level="INFO">Running command 'kill 12127 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:08.203" endtime="20210729 14:19:08.205"/>
</kw>
<status status="PASS" starttime="20210729 14:19:08.202" endtime="20210729 14:19:08.205"/>
</iter>
<iter>
<var name="${pid}">12135</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:08.208" level="INFO">Running command 'kill 12135 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:08.206" endtime="20210729 14:19:08.209"/>
</kw>
<status status="PASS" starttime="20210729 14:19:08.205" endtime="20210729 14:19:08.209"/>
</iter>
<status status="PASS" starttime="20210729 14:19:08.199" endtime="20210729 14:19:08.209"/>
</for>
<status status="PASS" starttime="20210729 14:19:08.198" endtime="20210729 14:19:08.209"/>
</branch>
<status status="PASS" starttime="20210729 14:19:08.198" endtime="20210729 14:19:08.209"/>
</if>
<status status="PASS" starttime="20210729 14:19:08.184" endtime="20210729 14:19:08.209"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": 'hakan123456789123456789'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:06.607" endtime="20210729 14:19:08.209">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t14" name="With Any Valid Token, Updating Username Of Each System User With #¤%123! Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:08.214" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:08.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:08.225" level="INFO">${pids} = 12164</msg>
<status status="PASS" starttime="20210729 14:19:08.211" endtime="20210729 14:19:08.225"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:08.226" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:08.226" endtime="20210729 14:19:08.226"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:08.227" level="INFO">${pids} = ['12164']</msg>
<status status="PASS" starttime="20210729 14:19:08.227" endtime="20210729 14:19:08.227"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12164</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:08.230" level="INFO">Running command 'kill 12164 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:08.227" endtime="20210729 14:19:08.231"/>
</kw>
<status status="PASS" starttime="20210729 14:19:08.227" endtime="20210729 14:19:08.231"/>
</iter>
<status status="PASS" starttime="20210729 14:19:08.227" endtime="20210729 14:19:08.231"/>
</for>
<status status="PASS" starttime="20210729 14:19:08.226" endtime="20210729 14:19:08.231"/>
</branch>
<status status="PASS" starttime="20210729 14:19:08.226" endtime="20210729 14:19:08.231"/>
</if>
<status status="PASS" starttime="20210729 14:19:08.211" endtime="20210729 14:19:08.231"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:08.232" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:08.232" endtime="20210729 14:19:08.232"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:08.233" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:08.233" endtime="20210729 14:19:08.233"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:08.235" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:08.234" endtime="20210729 14:19:08.235"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:08.235" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:08.235" endtime="20210729 14:19:08.235"/>
</kw>
<msg timestamp="20210729 14:19:08.236" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:08.233" endtime="20210729 14:19:08.236"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:08.247" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:08.236" endtime="20210729 14:19:08.248"/>
</kw>
<status status="PASS" starttime="20210729 14:19:08.232" endtime="20210729 14:19:08.248"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:08.250" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:08.249" endtime="20210729 14:19:08.253"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:09.755" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:08.254" endtime="20210729 14:19:09.755"/>
</kw>
<status status="PASS" starttime="20210729 14:19:08.249" endtime="20210729 14:19:09.757"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:09.760" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:09.760" endtime="20210729 14:19:09.760"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:09.761" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:09.760" endtime="20210729 14:19:09.761"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:09.761" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:09.761" endtime="20210729 14:19:09.761"/>
</kw>
<msg timestamp="20210729 14:19:09.761" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:09.759" endtime="20210729 14:19:09.761"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:09.762" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:09.762" endtime="20210729 14:19:09.762"/>
</kw>
<status status="PASS" starttime="20210729 14:19:09.758" endtime="20210729 14:19:09.762"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:09.763" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:09.763" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:09.763" endtime="20210729 14:19:09.763"/>
</kw>
<status status="PASS" starttime="20210729 14:19:09.762" endtime="20210729 14:19:09.763"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:09.764" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:09.764" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:09.763" endtime="20210729 14:19:09.764"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:09.764" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:09.764" endtime="20210729 14:19:09.764"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:09.765" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:09.765" endtime="20210729 14:19:09.765"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:09.765" endtime="20210729 14:19:09.766"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:09.766" endtime="20210729 14:19:09.767"/>
</kw>
<status status="PASS" starttime="20210729 14:19:09.764" endtime="20210729 14:19:09.767"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:09.767" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:09.767" endtime="20210729 14:19:09.767"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:09.767" endtime="20210729 14:19:09.768"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:09.768" endtime="20210729 14:19:09.768"/>
</kw>
<status status="PASS" starttime="20210729 14:19:09.767" endtime="20210729 14:19:09.768"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:09.769" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:09.769" endtime="20210729 14:19:09.769"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:09.769" endtime="20210729 14:19:09.770"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:09.770" endtime="20210729 14:19:09.770"/>
</kw>
<status status="PASS" starttime="20210729 14:19:09.768" endtime="20210729 14:19:09.770"/>
</iter>
<status status="PASS" starttime="20210729 14:19:09.764" endtime="20210729 14:19:09.770"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:09.770" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:09.770" endtime="20210729 14:19:09.771"/>
</kw>
<status status="PASS" starttime="20210729 14:19:09.763" endtime="20210729 14:19:09.771"/>
</kw>
<status status="PASS" starttime="20210729 14:19:08.210" endtime="20210729 14:19:09.771"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤%123!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:09.772" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:09.772" endtime="20210729 14:19:09.772"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:09.772" level="INFO">${payload} = {'username': '#¤%123!'}</msg>
<status status="PASS" starttime="20210729 14:19:09.772" endtime="20210729 14:19:09.772"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:09.782" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:09.783" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:09.773" endtime="20210729 14:19:09.783"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:09.783" endtime="20210729 14:19:09.783"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:09.783" endtime="20210729 14:19:09.783"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:09.773" endtime="20210729 14:19:09.783"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:09.773" endtime="20210729 14:19:09.783"/>
</for>
<status status="FAIL" starttime="20210729 14:19:09.771" endtime="20210729 14:19:09.783"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:09.771" endtime="20210729 14:19:09.783"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤%123!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:09.784" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:09.784" endtime="20210729 14:19:09.784"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:09.785" level="INFO">${payload} = {'username': '#¤%123!'}</msg>
<status status="PASS" starttime="20210729 14:19:09.784" endtime="20210729 14:19:09.785"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:09.789" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:09.789" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:09.785" endtime="20210729 14:19:09.789"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:09.789" endtime="20210729 14:19:09.789"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:09.790" endtime="20210729 14:19:09.790"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:09.785" endtime="20210729 14:19:09.790"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:09.785" endtime="20210729 14:19:09.790"/>
</for>
<status status="FAIL" starttime="20210729 14:19:09.783" endtime="20210729 14:19:09.790"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:09.783" endtime="20210729 14:19:09.790"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤%123!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:09.791" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:09.791" endtime="20210729 14:19:09.791"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:09.791" level="INFO">${payload} = {'username': '#¤%123!'}</msg>
<status status="PASS" starttime="20210729 14:19:09.791" endtime="20210729 14:19:09.791"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:09.796" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:09.796" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:09.792" endtime="20210729 14:19:09.796"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:09.796" endtime="20210729 14:19:09.796"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:09.796" endtime="20210729 14:19:09.796"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:09.792" endtime="20210729 14:19:09.796"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:09.791" endtime="20210729 14:19:09.796"/>
</for>
<status status="FAIL" starttime="20210729 14:19:09.790" endtime="20210729 14:19:09.797"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:09.790" endtime="20210729 14:19:09.797"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:09.771" endtime="20210729 14:19:09.797"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:09.803" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:09.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:09.811" level="INFO">${pids} = 12187
12194
12204</msg>
<status status="PASS" starttime="20210729 14:19:09.798" endtime="20210729 14:19:09.811"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:09.812" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:09.812" endtime="20210729 14:19:09.812"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:09.813" level="INFO">${pids} = ['12187', '12194', '12204']</msg>
<status status="PASS" starttime="20210729 14:19:09.813" endtime="20210729 14:19:09.813"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12187</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:09.816" level="INFO">Running command 'kill 12187 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:09.814" endtime="20210729 14:19:09.816"/>
</kw>
<status status="PASS" starttime="20210729 14:19:09.813" endtime="20210729 14:19:09.817"/>
</iter>
<iter>
<var name="${pid}">12194</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:09.819" level="INFO">Running command 'kill 12194 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:09.817" endtime="20210729 14:19:09.820"/>
</kw>
<status status="PASS" starttime="20210729 14:19:09.817" endtime="20210729 14:19:09.820"/>
</iter>
<iter>
<var name="${pid}">12204</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:09.823" level="INFO">Running command 'kill 12204 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:09.820" endtime="20210729 14:19:09.823"/>
</kw>
<status status="PASS" starttime="20210729 14:19:09.820" endtime="20210729 14:19:09.823"/>
</iter>
<status status="PASS" starttime="20210729 14:19:09.813" endtime="20210729 14:19:09.823"/>
</for>
<status status="PASS" starttime="20210729 14:19:09.813" endtime="20210729 14:19:09.823"/>
</branch>
<status status="PASS" starttime="20210729 14:19:09.813" endtime="20210729 14:19:09.824"/>
</if>
<status status="PASS" starttime="20210729 14:19:09.797" endtime="20210729 14:19:09.824"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤%123!'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:08.210" endtime="20210729 14:19:09.824">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t15" name="With Any Valid Token, Updating Username Of Each System User With #¤%123!&amp; Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:09.831" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:09.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:09.839" level="INFO">${pids} = 12233</msg>
<status status="PASS" starttime="20210729 14:19:09.826" endtime="20210729 14:19:09.839"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:09.840" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:09.839" endtime="20210729 14:19:09.840"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:09.840" level="INFO">${pids} = ['12233']</msg>
<status status="PASS" starttime="20210729 14:19:09.840" endtime="20210729 14:19:09.841"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12233</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:09.844" level="INFO">Running command 'kill 12233 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:09.841" endtime="20210729 14:19:09.844"/>
</kw>
<status status="PASS" starttime="20210729 14:19:09.841" endtime="20210729 14:19:09.844"/>
</iter>
<status status="PASS" starttime="20210729 14:19:09.841" endtime="20210729 14:19:09.844"/>
</for>
<status status="PASS" starttime="20210729 14:19:09.840" endtime="20210729 14:19:09.844"/>
</branch>
<status status="PASS" starttime="20210729 14:19:09.840" endtime="20210729 14:19:09.844"/>
</if>
<status status="PASS" starttime="20210729 14:19:09.825" endtime="20210729 14:19:09.845"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:09.846" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:09.845" endtime="20210729 14:19:09.846"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:09.847" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:09.846" endtime="20210729 14:19:09.847"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:09.847" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:09.847" endtime="20210729 14:19:09.847"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:09.848" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:09.847" endtime="20210729 14:19:09.848"/>
</kw>
<msg timestamp="20210729 14:19:09.848" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:09.846" endtime="20210729 14:19:09.848"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:09.852" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:09.848" endtime="20210729 14:19:09.863"/>
</kw>
<status status="PASS" starttime="20210729 14:19:09.845" endtime="20210729 14:19:09.863"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:09.865" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:09.864" endtime="20210729 14:19:09.869"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:11.370" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:09.870" endtime="20210729 14:19:11.370"/>
</kw>
<status status="PASS" starttime="20210729 14:19:09.864" endtime="20210729 14:19:11.371"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:11.372" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:11.371" endtime="20210729 14:19:11.372"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:11.372" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:11.372" endtime="20210729 14:19:11.372"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:11.372" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:11.372" endtime="20210729 14:19:11.372"/>
</kw>
<msg timestamp="20210729 14:19:11.373" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:11.371" endtime="20210729 14:19:11.373"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:11.373" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:11.373" endtime="20210729 14:19:11.373"/>
</kw>
<status status="PASS" starttime="20210729 14:19:11.371" endtime="20210729 14:19:11.373"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:11.374" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:11.374" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:11.374" endtime="20210729 14:19:11.374"/>
</kw>
<status status="PASS" starttime="20210729 14:19:11.373" endtime="20210729 14:19:11.374"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:11.375" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:11.375" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:11.374" endtime="20210729 14:19:11.375"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:11.376" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:11.375" endtime="20210729 14:19:11.376"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:11.376" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:11.376" endtime="20210729 14:19:11.376"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:11.376" endtime="20210729 14:19:11.377"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:11.377" endtime="20210729 14:19:11.377"/>
</kw>
<status status="PASS" starttime="20210729 14:19:11.376" endtime="20210729 14:19:11.377"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:11.378" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:11.377" endtime="20210729 14:19:11.378"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:11.378" endtime="20210729 14:19:11.379"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:11.379" endtime="20210729 14:19:11.379"/>
</kw>
<status status="PASS" starttime="20210729 14:19:11.377" endtime="20210729 14:19:11.379"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:11.380" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:11.380" endtime="20210729 14:19:11.380"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:11.380" endtime="20210729 14:19:11.381"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:11.381" endtime="20210729 14:19:11.381"/>
</kw>
<status status="PASS" starttime="20210729 14:19:11.379" endtime="20210729 14:19:11.381"/>
</iter>
<status status="PASS" starttime="20210729 14:19:11.376" endtime="20210729 14:19:11.381"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:11.382" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:11.381" endtime="20210729 14:19:11.382"/>
</kw>
<status status="PASS" starttime="20210729 14:19:11.374" endtime="20210729 14:19:11.382"/>
</kw>
<status status="PASS" starttime="20210729 14:19:09.825" endtime="20210729 14:19:11.382"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤%123!&amp;</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:11.383" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:11.383" endtime="20210729 14:19:11.383"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:11.384" level="INFO">${payload} = {'username': '#¤%123!&amp;'}</msg>
<status status="PASS" starttime="20210729 14:19:11.383" endtime="20210729 14:19:11.384"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:11.393" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:11.394" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:11.384" endtime="20210729 14:19:11.394"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:11.394" endtime="20210729 14:19:11.394"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:11.394" endtime="20210729 14:19:11.394"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:11.384" endtime="20210729 14:19:11.394"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:11.384" endtime="20210729 14:19:11.394"/>
</for>
<status status="FAIL" starttime="20210729 14:19:11.382" endtime="20210729 14:19:11.395"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:11.382" endtime="20210729 14:19:11.395"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤%123!&amp;</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:11.396" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:11.395" endtime="20210729 14:19:11.396"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:11.396" level="INFO">${payload} = {'username': '#¤%123!&amp;'}</msg>
<status status="PASS" starttime="20210729 14:19:11.396" endtime="20210729 14:19:11.396"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:11.400" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:11.401" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:11.396" endtime="20210729 14:19:11.401"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:11.401" endtime="20210729 14:19:11.401"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:11.401" endtime="20210729 14:19:11.401"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:11.396" endtime="20210729 14:19:11.401"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:11.396" endtime="20210729 14:19:11.401"/>
</for>
<status status="FAIL" starttime="20210729 14:19:11.395" endtime="20210729 14:19:11.401"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:11.395" endtime="20210729 14:19:11.401"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤%123!&amp;</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:11.403" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:11.402" endtime="20210729 14:19:11.403"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:11.403" level="INFO">${payload} = {'username': '#¤%123!&amp;'}</msg>
<status status="PASS" starttime="20210729 14:19:11.403" endtime="20210729 14:19:11.403"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:11.408" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:11.408" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:11.403" endtime="20210729 14:19:11.408"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:11.408" endtime="20210729 14:19:11.408"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:11.408" endtime="20210729 14:19:11.408"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:11.403" endtime="20210729 14:19:11.408"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:11.403" endtime="20210729 14:19:11.408"/>
</for>
<status status="FAIL" starttime="20210729 14:19:11.402" endtime="20210729 14:19:11.409"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:11.402" endtime="20210729 14:19:11.409"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:11.382" endtime="20210729 14:19:11.409"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:11.414" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:11.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:11.422" level="INFO">${pids} = 12256
12263
12267</msg>
<status status="PASS" starttime="20210729 14:19:11.410" endtime="20210729 14:19:11.422"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:11.423" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:11.423" endtime="20210729 14:19:11.423"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:11.424" level="INFO">${pids} = ['12256', '12263', '12267']</msg>
<status status="PASS" starttime="20210729 14:19:11.424" endtime="20210729 14:19:11.424"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12256</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:11.427" level="INFO">Running command 'kill 12256 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:11.424" endtime="20210729 14:19:11.428"/>
</kw>
<status status="PASS" starttime="20210729 14:19:11.424" endtime="20210729 14:19:11.428"/>
</iter>
<iter>
<var name="${pid}">12263</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:11.432" level="INFO">Running command 'kill 12263 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:11.428" endtime="20210729 14:19:11.433"/>
</kw>
<status status="PASS" starttime="20210729 14:19:11.428" endtime="20210729 14:19:11.433"/>
</iter>
<iter>
<var name="${pid}">12267</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:11.437" level="INFO">Running command 'kill 12267 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:11.433" endtime="20210729 14:19:11.438"/>
</kw>
<status status="PASS" starttime="20210729 14:19:11.433" endtime="20210729 14:19:11.438"/>
</iter>
<status status="PASS" starttime="20210729 14:19:11.424" endtime="20210729 14:19:11.438"/>
</for>
<status status="PASS" starttime="20210729 14:19:11.424" endtime="20210729 14:19:11.438"/>
</branch>
<status status="PASS" starttime="20210729 14:19:11.423" endtime="20210729 14:19:11.438"/>
</if>
<status status="PASS" starttime="20210729 14:19:11.409" endtime="20210729 14:19:11.438"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤%123!&amp;'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:09.824" endtime="20210729 14:19:11.438">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t16" name="With Any Valid Token, Updating Username Of Each System User With #¤%123!&amp;7683##()=?@#¤%&amp;34567 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:11.448" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:11.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:11.457" level="INFO">${pids} = 12296</msg>
<status status="PASS" starttime="20210729 14:19:11.441" endtime="20210729 14:19:11.457"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:11.458" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:11.457" endtime="20210729 14:19:11.458"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:11.459" level="INFO">${pids} = ['12296']</msg>
<status status="PASS" starttime="20210729 14:19:11.458" endtime="20210729 14:19:11.459"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12296</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:11.462" level="INFO">Running command 'kill 12296 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:11.459" endtime="20210729 14:19:11.462"/>
</kw>
<status status="PASS" starttime="20210729 14:19:11.459" endtime="20210729 14:19:11.462"/>
</iter>
<status status="PASS" starttime="20210729 14:19:11.459" endtime="20210729 14:19:11.462"/>
</for>
<status status="PASS" starttime="20210729 14:19:11.458" endtime="20210729 14:19:11.463"/>
</branch>
<status status="PASS" starttime="20210729 14:19:11.458" endtime="20210729 14:19:11.463"/>
</if>
<status status="PASS" starttime="20210729 14:19:11.441" endtime="20210729 14:19:11.463"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:11.464" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:11.464" endtime="20210729 14:19:11.464"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:11.465" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:11.464" endtime="20210729 14:19:11.465"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:11.465" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:11.465" endtime="20210729 14:19:11.465"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:11.466" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:11.465" endtime="20210729 14:19:11.466"/>
</kw>
<msg timestamp="20210729 14:19:11.466" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:11.464" endtime="20210729 14:19:11.466"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:11.469" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:11.466" endtime="20210729 14:19:11.471"/>
</kw>
<status status="PASS" starttime="20210729 14:19:11.463" endtime="20210729 14:19:11.471"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:11.472" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:11.472" endtime="20210729 14:19:11.476"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:12.995" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:11.477" endtime="20210729 14:19:12.995"/>
</kw>
<status status="PASS" starttime="20210729 14:19:11.471" endtime="20210729 14:19:12.996"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:12.997" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:12.996" endtime="20210729 14:19:12.997"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:12.997" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:12.997" endtime="20210729 14:19:12.997"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:12.997" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:12.997" endtime="20210729 14:19:12.997"/>
</kw>
<msg timestamp="20210729 14:19:12.998" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:12.996" endtime="20210729 14:19:12.998"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:12.998" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:12.998" endtime="20210729 14:19:12.998"/>
</kw>
<status status="PASS" starttime="20210729 14:19:12.996" endtime="20210729 14:19:12.998"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:12.999" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:12.999" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:12.999" endtime="20210729 14:19:12.999"/>
</kw>
<status status="PASS" starttime="20210729 14:19:12.999" endtime="20210729 14:19:13.000"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:13.001" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:13.001" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:13.001" endtime="20210729 14:19:13.001"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:13.002" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:13.002" endtime="20210729 14:19:13.002"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:13.002" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:13.002" endtime="20210729 14:19:13.002"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:13.002" endtime="20210729 14:19:13.003"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:13.003" endtime="20210729 14:19:13.004"/>
</kw>
<status status="PASS" starttime="20210729 14:19:13.002" endtime="20210729 14:19:13.004"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:13.004" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:13.004" endtime="20210729 14:19:13.004"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:13.004" endtime="20210729 14:19:13.005"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:13.005" endtime="20210729 14:19:13.005"/>
</kw>
<status status="PASS" starttime="20210729 14:19:13.004" endtime="20210729 14:19:13.005"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:13.006" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:13.005" endtime="20210729 14:19:13.006"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:13.006" endtime="20210729 14:19:13.006"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:13.007" endtime="20210729 14:19:13.007"/>
</kw>
<status status="PASS" starttime="20210729 14:19:13.005" endtime="20210729 14:19:13.007"/>
</iter>
<status status="PASS" starttime="20210729 14:19:13.002" endtime="20210729 14:19:13.007"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:13.007" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:13.007" endtime="20210729 14:19:13.007"/>
</kw>
<status status="PASS" starttime="20210729 14:19:13.000" endtime="20210729 14:19:13.008"/>
</kw>
<status status="PASS" starttime="20210729 14:19:11.440" endtime="20210729 14:19:13.008"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤%123!&amp;7683##()=?@#¤%&amp;34567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:13.009" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:13.009" endtime="20210729 14:19:13.009"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:13.009" level="INFO">${payload} = {'username': '#¤%123!&amp;7683##()=?@#¤%&amp;34567'}</msg>
<status status="PASS" starttime="20210729 14:19:13.009" endtime="20210729 14:19:13.009"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:13.019" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:13.019" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:13.010" endtime="20210729 14:19:13.019"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:13.019" endtime="20210729 14:19:13.019"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:13.019" endtime="20210729 14:19:13.019"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:13.010" endtime="20210729 14:19:13.019"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:13.009" endtime="20210729 14:19:13.019"/>
</for>
<status status="FAIL" starttime="20210729 14:19:13.008" endtime="20210729 14:19:13.020"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:13.008" endtime="20210729 14:19:13.020"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤%123!&amp;7683##()=?@#¤%&amp;34567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:13.021" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:13.020" endtime="20210729 14:19:13.021"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:13.021" level="INFO">${payload} = {'username': '#¤%123!&amp;7683##()=?@#¤%&amp;34567'}</msg>
<status status="PASS" starttime="20210729 14:19:13.021" endtime="20210729 14:19:13.021"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:13.025" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:13.026" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:13.022" endtime="20210729 14:19:13.026"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:13.026" endtime="20210729 14:19:13.026"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:13.026" endtime="20210729 14:19:13.026"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:13.021" endtime="20210729 14:19:13.026"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:13.021" endtime="20210729 14:19:13.026"/>
</for>
<status status="FAIL" starttime="20210729 14:19:13.020" endtime="20210729 14:19:13.026"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:13.020" endtime="20210729 14:19:13.026"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤%123!&amp;7683##()=?@#¤%&amp;34567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:13.029" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:13.028" endtime="20210729 14:19:13.029"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:13.029" level="INFO">${payload} = {'username': '#¤%123!&amp;7683##()=?@#¤%&amp;34567'}</msg>
<status status="PASS" starttime="20210729 14:19:13.029" endtime="20210729 14:19:13.029"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:13.034" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:13.034" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:13.030" endtime="20210729 14:19:13.034"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:13.034" endtime="20210729 14:19:13.034"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:13.035" endtime="20210729 14:19:13.035"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:13.030" endtime="20210729 14:19:13.035"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:13.029" endtime="20210729 14:19:13.035"/>
</for>
<status status="FAIL" starttime="20210729 14:19:13.026" endtime="20210729 14:19:13.035"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:13.026" endtime="20210729 14:19:13.035"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:13.008" endtime="20210729 14:19:13.035"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:13.040" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:13.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:13.049" level="INFO">${pids} = 12319
12326
12331</msg>
<status status="PASS" starttime="20210729 14:19:13.036" endtime="20210729 14:19:13.049"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:13.050" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:13.050" endtime="20210729 14:19:13.050"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:13.051" level="INFO">${pids} = ['12319', '12326', '12331']</msg>
<status status="PASS" starttime="20210729 14:19:13.051" endtime="20210729 14:19:13.051"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12319</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:13.055" level="INFO">Running command 'kill 12319 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:13.052" endtime="20210729 14:19:13.055"/>
</kw>
<status status="PASS" starttime="20210729 14:19:13.052" endtime="20210729 14:19:13.056"/>
</iter>
<iter>
<var name="${pid}">12326</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:13.059" level="INFO">Running command 'kill 12326 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:13.056" endtime="20210729 14:19:13.059"/>
</kw>
<status status="PASS" starttime="20210729 14:19:13.056" endtime="20210729 14:19:13.059"/>
</iter>
<iter>
<var name="${pid}">12331</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:13.065" level="INFO">Running command 'kill 12331 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:13.060" endtime="20210729 14:19:13.065"/>
</kw>
<status status="PASS" starttime="20210729 14:19:13.059" endtime="20210729 14:19:13.065"/>
</iter>
<status status="PASS" starttime="20210729 14:19:13.051" endtime="20210729 14:19:13.065"/>
</for>
<status status="PASS" starttime="20210729 14:19:13.051" endtime="20210729 14:19:13.065"/>
</branch>
<status status="PASS" starttime="20210729 14:19:13.051" endtime="20210729 14:19:13.065"/>
</if>
<status status="PASS" starttime="20210729 14:19:13.035" endtime="20210729 14:19:13.066"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤%123!&amp;7683##()=?@#¤%&amp;34567'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:11.439" endtime="20210729 14:19:13.066">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t17" name="With Any Valid Token, Updating Username Of Each System User With #¤123ab Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:13.075" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:13.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:13.083" level="INFO">${pids} = 12360</msg>
<status status="PASS" starttime="20210729 14:19:13.069" endtime="20210729 14:19:13.083"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:13.084" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:13.084" endtime="20210729 14:19:13.084"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:13.085" level="INFO">${pids} = ['12360']</msg>
<status status="PASS" starttime="20210729 14:19:13.085" endtime="20210729 14:19:13.085"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12360</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:13.088" level="INFO">Running command 'kill 12360 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:13.085" endtime="20210729 14:19:13.089"/>
</kw>
<status status="PASS" starttime="20210729 14:19:13.085" endtime="20210729 14:19:13.089"/>
</iter>
<status status="PASS" starttime="20210729 14:19:13.085" endtime="20210729 14:19:13.089"/>
</for>
<status status="PASS" starttime="20210729 14:19:13.085" endtime="20210729 14:19:13.089"/>
</branch>
<status status="PASS" starttime="20210729 14:19:13.084" endtime="20210729 14:19:13.089"/>
</if>
<status status="PASS" starttime="20210729 14:19:13.068" endtime="20210729 14:19:13.089"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:13.090" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:13.090" endtime="20210729 14:19:13.090"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:13.091" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:13.090" endtime="20210729 14:19:13.091"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:13.091" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:13.091" endtime="20210729 14:19:13.091"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:13.092" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:13.091" endtime="20210729 14:19:13.092"/>
</kw>
<msg timestamp="20210729 14:19:13.092" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:13.090" endtime="20210729 14:19:13.092"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:13.095" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:13.092" endtime="20210729 14:19:13.102"/>
</kw>
<status status="PASS" starttime="20210729 14:19:13.089" endtime="20210729 14:19:13.103"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:13.104" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:13.104" endtime="20210729 14:19:13.107"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:14.610" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:13.108" endtime="20210729 14:19:14.610"/>
</kw>
<status status="PASS" starttime="20210729 14:19:13.103" endtime="20210729 14:19:14.610"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:14.612" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:14.611" endtime="20210729 14:19:14.612"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:14.612" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:14.612" endtime="20210729 14:19:14.612"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:14.613" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:14.613" endtime="20210729 14:19:14.613"/>
</kw>
<msg timestamp="20210729 14:19:14.613" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:14.611" endtime="20210729 14:19:14.613"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:14.614" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:14.613" endtime="20210729 14:19:14.614"/>
</kw>
<status status="PASS" starttime="20210729 14:19:14.610" endtime="20210729 14:19:14.614"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:14.615" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:14.615" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:14.615" endtime="20210729 14:19:14.615"/>
</kw>
<status status="PASS" starttime="20210729 14:19:14.614" endtime="20210729 14:19:14.615"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:14.616" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:14.616" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:14.616" endtime="20210729 14:19:14.616"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:14.617" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:14.617" endtime="20210729 14:19:14.617"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:14.617" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:14.617" endtime="20210729 14:19:14.617"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:14.617" endtime="20210729 14:19:14.618"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:14.618" endtime="20210729 14:19:14.618"/>
</kw>
<status status="PASS" starttime="20210729 14:19:14.617" endtime="20210729 14:19:14.618"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:14.619" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:14.618" endtime="20210729 14:19:14.619"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:14.619" endtime="20210729 14:19:14.619"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:14.620" endtime="20210729 14:19:14.620"/>
</kw>
<status status="PASS" starttime="20210729 14:19:14.618" endtime="20210729 14:19:14.620"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:14.620" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:14.620" endtime="20210729 14:19:14.620"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:14.620" endtime="20210729 14:19:14.621"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:14.621" endtime="20210729 14:19:14.621"/>
</kw>
<status status="PASS" starttime="20210729 14:19:14.620" endtime="20210729 14:19:14.621"/>
</iter>
<status status="PASS" starttime="20210729 14:19:14.617" endtime="20210729 14:19:14.621"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:14.622" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:14.621" endtime="20210729 14:19:14.622"/>
</kw>
<status status="PASS" starttime="20210729 14:19:14.616" endtime="20210729 14:19:14.622"/>
</kw>
<status status="PASS" starttime="20210729 14:19:13.068" endtime="20210729 14:19:14.622"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤123ab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:14.623" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:14.623" endtime="20210729 14:19:14.623"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:14.623" level="INFO">${payload} = {'username': '#¤123ab'}</msg>
<status status="PASS" starttime="20210729 14:19:14.623" endtime="20210729 14:19:14.623"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:14.633" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:14.633" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:14.624" endtime="20210729 14:19:14.633"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:14.634" endtime="20210729 14:19:14.634"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:14.634" endtime="20210729 14:19:14.634"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:14.624" endtime="20210729 14:19:14.634"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:14.623" endtime="20210729 14:19:14.634"/>
</for>
<status status="FAIL" starttime="20210729 14:19:14.622" endtime="20210729 14:19:14.634"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:14.622" endtime="20210729 14:19:14.634"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤123ab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:14.635" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:14.635" endtime="20210729 14:19:14.635"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:14.636" level="INFO">${payload} = {'username': '#¤123ab'}</msg>
<status status="PASS" starttime="20210729 14:19:14.635" endtime="20210729 14:19:14.636"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:14.640" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:14.640" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:14.636" endtime="20210729 14:19:14.640"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:14.640" endtime="20210729 14:19:14.640"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:14.640" endtime="20210729 14:19:14.640"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:14.636" endtime="20210729 14:19:14.640"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:14.636" endtime="20210729 14:19:14.640"/>
</for>
<status status="FAIL" starttime="20210729 14:19:14.634" endtime="20210729 14:19:14.641"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:14.634" endtime="20210729 14:19:14.641"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤123ab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:14.642" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:14.641" endtime="20210729 14:19:14.642"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:14.642" level="INFO">${payload} = {'username': '#¤123ab'}</msg>
<status status="PASS" starttime="20210729 14:19:14.642" endtime="20210729 14:19:14.642"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:14.647" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:14.647" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:14.642" endtime="20210729 14:19:14.647"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:14.647" endtime="20210729 14:19:14.647"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:14.647" endtime="20210729 14:19:14.647"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:14.642" endtime="20210729 14:19:14.647"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:14.642" endtime="20210729 14:19:14.647"/>
</for>
<status status="FAIL" starttime="20210729 14:19:14.641" endtime="20210729 14:19:14.648"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:14.641" endtime="20210729 14:19:14.648"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:14.622" endtime="20210729 14:19:14.648"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:14.652" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:14.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:14.660" level="INFO">${pids} = 12383
12390
12400</msg>
<status status="PASS" starttime="20210729 14:19:14.649" endtime="20210729 14:19:14.660"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:14.661" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:14.661" endtime="20210729 14:19:14.661"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:14.662" level="INFO">${pids} = ['12383', '12390', '12400']</msg>
<status status="PASS" starttime="20210729 14:19:14.662" endtime="20210729 14:19:14.662"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12383</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:14.665" level="INFO">Running command 'kill 12383 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:14.662" endtime="20210729 14:19:14.666"/>
</kw>
<status status="PASS" starttime="20210729 14:19:14.662" endtime="20210729 14:19:14.666"/>
</iter>
<iter>
<var name="${pid}">12390</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:14.669" level="INFO">Running command 'kill 12390 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:14.666" endtime="20210729 14:19:14.671"/>
</kw>
<status status="PASS" starttime="20210729 14:19:14.666" endtime="20210729 14:19:14.671"/>
</iter>
<iter>
<var name="${pid}">12400</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:14.674" level="INFO">Running command 'kill 12400 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:14.672" endtime="20210729 14:19:14.675"/>
</kw>
<status status="PASS" starttime="20210729 14:19:14.671" endtime="20210729 14:19:14.675"/>
</iter>
<status status="PASS" starttime="20210729 14:19:14.662" endtime="20210729 14:19:14.675"/>
</for>
<status status="PASS" starttime="20210729 14:19:14.662" endtime="20210729 14:19:14.675"/>
</branch>
<status status="PASS" starttime="20210729 14:19:14.661" endtime="20210729 14:19:14.675"/>
</if>
<status status="PASS" starttime="20210729 14:19:14.648" endtime="20210729 14:19:14.675"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤123ab'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:13.067" endtime="20210729 14:19:14.675">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t18" name="With Any Valid Token, Updating Username Of Each System User With #¤123abc Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:14.687" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:14.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:14.696" level="INFO">${pids} = 12429</msg>
<status status="PASS" starttime="20210729 14:19:14.677" endtime="20210729 14:19:14.696"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:14.697" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:14.696" endtime="20210729 14:19:14.697"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:14.697" level="INFO">${pids} = ['12429']</msg>
<status status="PASS" starttime="20210729 14:19:14.697" endtime="20210729 14:19:14.698"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12429</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:14.710" level="INFO">Running command 'kill 12429 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:14.698" endtime="20210729 14:19:14.711"/>
</kw>
<status status="PASS" starttime="20210729 14:19:14.698" endtime="20210729 14:19:14.711"/>
</iter>
<status status="PASS" starttime="20210729 14:19:14.698" endtime="20210729 14:19:14.711"/>
</for>
<status status="PASS" starttime="20210729 14:19:14.697" endtime="20210729 14:19:14.711"/>
</branch>
<status status="PASS" starttime="20210729 14:19:14.697" endtime="20210729 14:19:14.711"/>
</if>
<status status="PASS" starttime="20210729 14:19:14.677" endtime="20210729 14:19:14.711"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:14.713" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:14.712" endtime="20210729 14:19:14.713"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:14.714" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:14.713" endtime="20210729 14:19:14.714"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:14.714" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:14.714" endtime="20210729 14:19:14.714"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:14.715" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:14.714" endtime="20210729 14:19:14.715"/>
</kw>
<msg timestamp="20210729 14:19:14.715" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:14.713" endtime="20210729 14:19:14.715"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:14.718" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:14.715" endtime="20210729 14:19:14.719"/>
</kw>
<status status="PASS" starttime="20210729 14:19:14.712" endtime="20210729 14:19:14.720"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:14.721" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:14.720" endtime="20210729 14:19:14.724"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:16.247" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:14.725" endtime="20210729 14:19:16.248"/>
</kw>
<status status="PASS" starttime="20210729 14:19:14.720" endtime="20210729 14:19:16.248"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:16.249" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:16.249" endtime="20210729 14:19:16.249"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:16.249" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:16.249" endtime="20210729 14:19:16.249"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:16.250" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:16.250" endtime="20210729 14:19:16.250"/>
</kw>
<msg timestamp="20210729 14:19:16.250" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:16.248" endtime="20210729 14:19:16.250"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:16.250" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:16.250" endtime="20210729 14:19:16.251"/>
</kw>
<status status="PASS" starttime="20210729 14:19:16.248" endtime="20210729 14:19:16.251"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:16.251" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:16.252" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:16.251" endtime="20210729 14:19:16.252"/>
</kw>
<status status="PASS" starttime="20210729 14:19:16.251" endtime="20210729 14:19:16.252"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:16.252" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:16.253" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:16.252" endtime="20210729 14:19:16.253"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:16.253" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:16.253" endtime="20210729 14:19:16.253"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:16.253" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:16.253" endtime="20210729 14:19:16.253"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:16.254" endtime="20210729 14:19:16.254"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:16.254" endtime="20210729 14:19:16.254"/>
</kw>
<status status="PASS" starttime="20210729 14:19:16.253" endtime="20210729 14:19:16.255"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:16.255" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:16.255" endtime="20210729 14:19:16.255"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:16.255" endtime="20210729 14:19:16.256"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:16.256" endtime="20210729 14:19:16.256"/>
</kw>
<status status="PASS" starttime="20210729 14:19:16.255" endtime="20210729 14:19:16.256"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:16.256" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:16.256" endtime="20210729 14:19:16.256"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:16.256" endtime="20210729 14:19:16.257"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:16.257" endtime="20210729 14:19:16.257"/>
</kw>
<status status="PASS" starttime="20210729 14:19:16.256" endtime="20210729 14:19:16.257"/>
</iter>
<status status="PASS" starttime="20210729 14:19:16.253" endtime="20210729 14:19:16.257"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:16.258" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:16.257" endtime="20210729 14:19:16.258"/>
</kw>
<status status="PASS" starttime="20210729 14:19:16.252" endtime="20210729 14:19:16.258"/>
</kw>
<status status="PASS" starttime="20210729 14:19:14.676" endtime="20210729 14:19:16.258"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤123abc</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:16.259" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:16.259" endtime="20210729 14:19:16.259"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:16.260" level="INFO">${payload} = {'username': '#¤123abc'}</msg>
<status status="PASS" starttime="20210729 14:19:16.259" endtime="20210729 14:19:16.260"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:16.269" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:16.269" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:16.260" endtime="20210729 14:19:16.269"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:16.269" endtime="20210729 14:19:16.269"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:16.269" endtime="20210729 14:19:16.269"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:16.260" endtime="20210729 14:19:16.270"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:16.260" endtime="20210729 14:19:16.270"/>
</for>
<status status="FAIL" starttime="20210729 14:19:16.258" endtime="20210729 14:19:16.270"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:16.258" endtime="20210729 14:19:16.270"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤123abc</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:16.271" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:16.271" endtime="20210729 14:19:16.271"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:16.272" level="INFO">${payload} = {'username': '#¤123abc'}</msg>
<status status="PASS" starttime="20210729 14:19:16.271" endtime="20210729 14:19:16.272"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:16.276" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:16.276" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:16.272" endtime="20210729 14:19:16.276"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:16.276" endtime="20210729 14:19:16.276"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:16.276" endtime="20210729 14:19:16.276"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:16.272" endtime="20210729 14:19:16.276"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:16.272" endtime="20210729 14:19:16.276"/>
</for>
<status status="FAIL" starttime="20210729 14:19:16.270" endtime="20210729 14:19:16.276"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:16.270" endtime="20210729 14:19:16.276"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤123abc</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:16.277" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:16.277" endtime="20210729 14:19:16.277"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:16.278" level="INFO">${payload} = {'username': '#¤123abc'}</msg>
<status status="PASS" starttime="20210729 14:19:16.278" endtime="20210729 14:19:16.278"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:16.283" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:16.283" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:16.278" endtime="20210729 14:19:16.283"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:16.283" endtime="20210729 14:19:16.283"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:16.283" endtime="20210729 14:19:16.283"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:16.278" endtime="20210729 14:19:16.283"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:16.278" endtime="20210729 14:19:16.283"/>
</for>
<status status="FAIL" starttime="20210729 14:19:16.277" endtime="20210729 14:19:16.283"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:16.277" endtime="20210729 14:19:16.284"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:16.258" endtime="20210729 14:19:16.284"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:16.294" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:16.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:16.305" level="INFO">${pids} = 12452
12459
12464</msg>
<status status="PASS" starttime="20210729 14:19:16.287" endtime="20210729 14:19:16.305"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:16.306" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:16.305" endtime="20210729 14:19:16.306"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:16.306" level="INFO">${pids} = ['12452', '12459', '12464']</msg>
<status status="PASS" starttime="20210729 14:19:16.306" endtime="20210729 14:19:16.306"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12452</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:16.310" level="INFO">Running command 'kill 12452 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:16.307" endtime="20210729 14:19:16.310"/>
</kw>
<status status="PASS" starttime="20210729 14:19:16.307" endtime="20210729 14:19:16.310"/>
</iter>
<iter>
<var name="${pid}">12459</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:16.314" level="INFO">Running command 'kill 12459 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:16.311" endtime="20210729 14:19:16.315"/>
</kw>
<status status="PASS" starttime="20210729 14:19:16.310" endtime="20210729 14:19:16.315"/>
</iter>
<iter>
<var name="${pid}">12464</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:16.321" level="INFO">Running command 'kill 12464 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:16.317" endtime="20210729 14:19:16.321"/>
</kw>
<status status="PASS" starttime="20210729 14:19:16.316" endtime="20210729 14:19:16.321"/>
</iter>
<status status="PASS" starttime="20210729 14:19:16.307" endtime="20210729 14:19:16.322"/>
</for>
<status status="PASS" starttime="20210729 14:19:16.306" endtime="20210729 14:19:16.322"/>
</branch>
<status status="PASS" starttime="20210729 14:19:16.306" endtime="20210729 14:19:16.322"/>
</if>
<status status="PASS" starttime="20210729 14:19:16.284" endtime="20210729 14:19:16.322"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤123abc'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:14.676" endtime="20210729 14:19:16.322">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t19" name="With Any Valid Token, Updating Username Of Each System User With #¤/&amp;¤!!123abc456hjk Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:16.327" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:16.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:16.336" level="INFO">${pids} = 12493</msg>
<status status="PASS" starttime="20210729 14:19:16.324" endtime="20210729 14:19:16.336"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:16.337" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:16.336" endtime="20210729 14:19:16.337"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:16.338" level="INFO">${pids} = ['12493']</msg>
<status status="PASS" starttime="20210729 14:19:16.337" endtime="20210729 14:19:16.338"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12493</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:16.341" level="INFO">Running command 'kill 12493 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:16.338" endtime="20210729 14:19:16.341"/>
</kw>
<status status="PASS" starttime="20210729 14:19:16.338" endtime="20210729 14:19:16.341"/>
</iter>
<status status="PASS" starttime="20210729 14:19:16.338" endtime="20210729 14:19:16.341"/>
</for>
<status status="PASS" starttime="20210729 14:19:16.337" endtime="20210729 14:19:16.341"/>
</branch>
<status status="PASS" starttime="20210729 14:19:16.337" endtime="20210729 14:19:16.341"/>
</if>
<status status="PASS" starttime="20210729 14:19:16.323" endtime="20210729 14:19:16.341"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:16.342" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:16.342" endtime="20210729 14:19:16.342"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:16.343" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:16.343" endtime="20210729 14:19:16.343"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:16.343" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:16.343" endtime="20210729 14:19:16.344"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:16.344" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:16.344" endtime="20210729 14:19:16.344"/>
</kw>
<msg timestamp="20210729 14:19:16.344" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:16.342" endtime="20210729 14:19:16.344"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:16.354" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:16.345" endtime="20210729 14:19:16.355"/>
</kw>
<status status="PASS" starttime="20210729 14:19:16.342" endtime="20210729 14:19:16.356"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:16.357" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:16.356" endtime="20210729 14:19:16.361"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:17.863" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:16.361" endtime="20210729 14:19:17.863"/>
</kw>
<status status="PASS" starttime="20210729 14:19:16.356" endtime="20210729 14:19:17.863"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:17.864" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:17.864" endtime="20210729 14:19:17.864"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:17.865" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:17.864" endtime="20210729 14:19:17.865"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:17.866" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:17.865" endtime="20210729 14:19:17.866"/>
</kw>
<msg timestamp="20210729 14:19:17.866" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:17.864" endtime="20210729 14:19:17.866"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:17.867" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:17.866" endtime="20210729 14:19:17.867"/>
</kw>
<status status="PASS" starttime="20210729 14:19:17.863" endtime="20210729 14:19:17.867"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:17.868" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:17.868" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:17.867" endtime="20210729 14:19:17.868"/>
</kw>
<status status="PASS" starttime="20210729 14:19:17.867" endtime="20210729 14:19:17.868"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:17.869" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:17.869" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:17.868" endtime="20210729 14:19:17.869"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:17.870" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:17.869" endtime="20210729 14:19:17.870"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:17.870" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:17.870" endtime="20210729 14:19:17.870"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:17.870" endtime="20210729 14:19:17.871"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:17.871" endtime="20210729 14:19:17.871"/>
</kw>
<status status="PASS" starttime="20210729 14:19:17.870" endtime="20210729 14:19:17.872"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:17.872" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:17.872" endtime="20210729 14:19:17.872"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:17.872" endtime="20210729 14:19:17.873"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:17.873" endtime="20210729 14:19:17.873"/>
</kw>
<status status="PASS" starttime="20210729 14:19:17.872" endtime="20210729 14:19:17.873"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:17.873" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:17.873" endtime="20210729 14:19:17.873"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:17.873" endtime="20210729 14:19:17.874"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:17.874" endtime="20210729 14:19:17.874"/>
</kw>
<status status="PASS" starttime="20210729 14:19:17.873" endtime="20210729 14:19:17.874"/>
</iter>
<status status="PASS" starttime="20210729 14:19:17.870" endtime="20210729 14:19:17.874"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:17.875" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:17.875" endtime="20210729 14:19:17.875"/>
</kw>
<status status="PASS" starttime="20210729 14:19:17.868" endtime="20210729 14:19:17.875"/>
</kw>
<status status="PASS" starttime="20210729 14:19:16.323" endtime="20210729 14:19:17.875"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/&amp;¤!!123abc456hjk</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:17.876" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:17.876" endtime="20210729 14:19:17.876"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:17.877" level="INFO">${payload} = {'username': '#¤/&amp;¤!!123abc456hjk'}</msg>
<status status="PASS" starttime="20210729 14:19:17.876" endtime="20210729 14:19:17.877"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:17.885" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:17.886" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:17.877" endtime="20210729 14:19:17.886"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:17.886" endtime="20210729 14:19:17.886"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:17.886" endtime="20210729 14:19:17.886"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:17.877" endtime="20210729 14:19:17.886"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:17.877" endtime="20210729 14:19:17.886"/>
</for>
<status status="FAIL" starttime="20210729 14:19:17.876" endtime="20210729 14:19:17.886"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:17.875" endtime="20210729 14:19:17.886"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/&amp;¤!!123abc456hjk</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:17.888" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:17.887" endtime="20210729 14:19:17.888"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:17.888" level="INFO">${payload} = {'username': '#¤/&amp;¤!!123abc456hjk'}</msg>
<status status="PASS" starttime="20210729 14:19:17.888" endtime="20210729 14:19:17.888"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:17.892" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:17.892" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:17.888" endtime="20210729 14:19:17.892"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:17.892" endtime="20210729 14:19:17.893"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:17.893" endtime="20210729 14:19:17.893"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:17.888" endtime="20210729 14:19:17.893"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:17.888" endtime="20210729 14:19:17.893"/>
</for>
<status status="FAIL" starttime="20210729 14:19:17.887" endtime="20210729 14:19:17.893"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:17.887" endtime="20210729 14:19:17.893"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/&amp;¤!!123abc456hjk</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:17.894" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:17.894" endtime="20210729 14:19:17.894"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:17.894" level="INFO">${payload} = {'username': '#¤/&amp;¤!!123abc456hjk'}</msg>
<status status="PASS" starttime="20210729 14:19:17.894" endtime="20210729 14:19:17.894"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:17.899" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:17.899" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:17.895" endtime="20210729 14:19:17.899"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:17.899" endtime="20210729 14:19:17.899"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:17.900" endtime="20210729 14:19:17.900"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:17.895" endtime="20210729 14:19:17.900"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:17.895" endtime="20210729 14:19:17.900"/>
</for>
<status status="FAIL" starttime="20210729 14:19:17.893" endtime="20210729 14:19:17.900"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:17.893" endtime="20210729 14:19:17.900"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:17.875" endtime="20210729 14:19:17.900"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:17.905" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:17.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:17.914" level="INFO">${pids} = 12516
12523
12528</msg>
<status status="PASS" starttime="20210729 14:19:17.901" endtime="20210729 14:19:17.914"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:17.915" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:17.914" endtime="20210729 14:19:17.915"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:17.916" level="INFO">${pids} = ['12516', '12523', '12528']</msg>
<status status="PASS" starttime="20210729 14:19:17.915" endtime="20210729 14:19:17.916"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12516</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:17.918" level="INFO">Running command 'kill 12516 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:17.916" endtime="20210729 14:19:17.919"/>
</kw>
<status status="PASS" starttime="20210729 14:19:17.916" endtime="20210729 14:19:17.919"/>
</iter>
<iter>
<var name="${pid}">12523</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:17.921" level="INFO">Running command 'kill 12523 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:17.919" endtime="20210729 14:19:17.923"/>
</kw>
<status status="PASS" starttime="20210729 14:19:17.919" endtime="20210729 14:19:17.923"/>
</iter>
<iter>
<var name="${pid}">12528</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:17.926" level="INFO">Running command 'kill 12528 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:17.924" endtime="20210729 14:19:17.927"/>
</kw>
<status status="PASS" starttime="20210729 14:19:17.924" endtime="20210729 14:19:17.927"/>
</iter>
<status status="PASS" starttime="20210729 14:19:17.916" endtime="20210729 14:19:17.927"/>
</for>
<status status="PASS" starttime="20210729 14:19:17.915" endtime="20210729 14:19:17.927"/>
</branch>
<status status="PASS" starttime="20210729 14:19:17.915" endtime="20210729 14:19:17.927"/>
</if>
<status status="PASS" starttime="20210729 14:19:17.900" endtime="20210729 14:19:17.927"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤/&amp;¤!!123abc456hjk'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:16.322" endtime="20210729 14:19:17.927">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t20" name="With Any Valid Token, Updating Username Of Each System User With #¤/abc! Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:17.932" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:17.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:17.943" level="INFO">${pids} = 12557</msg>
<status status="PASS" starttime="20210729 14:19:17.929" endtime="20210729 14:19:17.943"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:17.944" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:17.944" endtime="20210729 14:19:17.944"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:17.945" level="INFO">${pids} = ['12557']</msg>
<status status="PASS" starttime="20210729 14:19:17.945" endtime="20210729 14:19:17.945"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12557</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:17.949" level="INFO">Running command 'kill 12557 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:17.946" endtime="20210729 14:19:17.949"/>
</kw>
<status status="PASS" starttime="20210729 14:19:17.945" endtime="20210729 14:19:17.949"/>
</iter>
<status status="PASS" starttime="20210729 14:19:17.945" endtime="20210729 14:19:17.949"/>
</for>
<status status="PASS" starttime="20210729 14:19:17.945" endtime="20210729 14:19:17.949"/>
</branch>
<status status="PASS" starttime="20210729 14:19:17.944" endtime="20210729 14:19:17.949"/>
</if>
<status status="PASS" starttime="20210729 14:19:17.929" endtime="20210729 14:19:17.949"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:17.951" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:17.950" endtime="20210729 14:19:17.951"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:17.951" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:17.951" endtime="20210729 14:19:17.951"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:17.952" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:17.951" endtime="20210729 14:19:17.952"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:17.952" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:17.952" endtime="20210729 14:19:17.952"/>
</kw>
<msg timestamp="20210729 14:19:17.952" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:17.951" endtime="20210729 14:19:17.952"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:17.965" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:17.953" endtime="20210729 14:19:17.967"/>
</kw>
<status status="PASS" starttime="20210729 14:19:17.950" endtime="20210729 14:19:17.968"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:17.969" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:17.969" endtime="20210729 14:19:17.973"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:19.481" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:17.973" endtime="20210729 14:19:19.482"/>
</kw>
<status status="PASS" starttime="20210729 14:19:17.968" endtime="20210729 14:19:19.483"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:19.489" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:19.487" endtime="20210729 14:19:19.489"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:19.490" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:19.489" endtime="20210729 14:19:19.490"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:19.491" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:19.490" endtime="20210729 14:19:19.492"/>
</kw>
<msg timestamp="20210729 14:19:19.492" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:19.486" endtime="20210729 14:19:19.493"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:19.494" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:19.493" endtime="20210729 14:19:19.494"/>
</kw>
<status status="PASS" starttime="20210729 14:19:19.484" endtime="20210729 14:19:19.495"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:19.496" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:19.496" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:19.496" endtime="20210729 14:19:19.497"/>
</kw>
<status status="PASS" starttime="20210729 14:19:19.495" endtime="20210729 14:19:19.497"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:19.498" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:19.499" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:19.497" endtime="20210729 14:19:19.499"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:19.499" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:19.499" endtime="20210729 14:19:19.500"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:19.501" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:19.500" endtime="20210729 14:19:19.501"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:19.501" endtime="20210729 14:19:19.502"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:19.502" endtime="20210729 14:19:19.502"/>
</kw>
<status status="PASS" starttime="20210729 14:19:19.500" endtime="20210729 14:19:19.502"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:19.503" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:19.502" endtime="20210729 14:19:19.503"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:19.503" endtime="20210729 14:19:19.503"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:19.503" endtime="20210729 14:19:19.504"/>
</kw>
<status status="PASS" starttime="20210729 14:19:19.502" endtime="20210729 14:19:19.504"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:19.504" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:19.504" endtime="20210729 14:19:19.504"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:19.504" endtime="20210729 14:19:19.505"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:19.505" endtime="20210729 14:19:19.505"/>
</kw>
<status status="PASS" starttime="20210729 14:19:19.504" endtime="20210729 14:19:19.505"/>
</iter>
<status status="PASS" starttime="20210729 14:19:19.500" endtime="20210729 14:19:19.505"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:19.506" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:19.505" endtime="20210729 14:19:19.506"/>
</kw>
<status status="PASS" starttime="20210729 14:19:19.497" endtime="20210729 14:19:19.506"/>
</kw>
<status status="PASS" starttime="20210729 14:19:17.929" endtime="20210729 14:19:19.506"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/abc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:19.507" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:19.507" endtime="20210729 14:19:19.507"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:19.508" level="INFO">${payload} = {'username': '#¤/abc!'}</msg>
<status status="PASS" starttime="20210729 14:19:19.507" endtime="20210729 14:19:19.508"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:19.517" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:19.517" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:19.508" endtime="20210729 14:19:19.518"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:19.518" endtime="20210729 14:19:19.518"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:19.518" endtime="20210729 14:19:19.518"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:19.508" endtime="20210729 14:19:19.518"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:19.508" endtime="20210729 14:19:19.518"/>
</for>
<status status="FAIL" starttime="20210729 14:19:19.506" endtime="20210729 14:19:19.518"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:19.506" endtime="20210729 14:19:19.518"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/abc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:19.519" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:19.519" endtime="20210729 14:19:19.519"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:19.520" level="INFO">${payload} = {'username': '#¤/abc!'}</msg>
<status status="PASS" starttime="20210729 14:19:19.520" endtime="20210729 14:19:19.520"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:19.524" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:19.524" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:19.520" endtime="20210729 14:19:19.524"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:19.524" endtime="20210729 14:19:19.524"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:19.524" endtime="20210729 14:19:19.524"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:19.520" endtime="20210729 14:19:19.524"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:19.520" endtime="20210729 14:19:19.524"/>
</for>
<status status="FAIL" starttime="20210729 14:19:19.518" endtime="20210729 14:19:19.524"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:19.518" endtime="20210729 14:19:19.525"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/abc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:19.525" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:19.525" endtime="20210729 14:19:19.525"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:19.526" level="INFO">${payload} = {'username': '#¤/abc!'}</msg>
<status status="PASS" starttime="20210729 14:19:19.526" endtime="20210729 14:19:19.526"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:19.530" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:19.530" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:19.526" endtime="20210729 14:19:19.530"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:19.530" endtime="20210729 14:19:19.530"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:19.530" endtime="20210729 14:19:19.530"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:19.526" endtime="20210729 14:19:19.530"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:19.526" endtime="20210729 14:19:19.531"/>
</for>
<status status="FAIL" starttime="20210729 14:19:19.525" endtime="20210729 14:19:19.531"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:19.525" endtime="20210729 14:19:19.531"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:19.506" endtime="20210729 14:19:19.531"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:19.536" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:19.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:19.544" level="INFO">${pids} = 12580
12587
12597</msg>
<status status="PASS" starttime="20210729 14:19:19.532" endtime="20210729 14:19:19.544"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:19.545" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:19.544" endtime="20210729 14:19:19.545"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:19.546" level="INFO">${pids} = ['12580', '12587', '12597']</msg>
<status status="PASS" starttime="20210729 14:19:19.545" endtime="20210729 14:19:19.546"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12580</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:19.549" level="INFO">Running command 'kill 12580 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:19.546" endtime="20210729 14:19:19.549"/>
</kw>
<status status="PASS" starttime="20210729 14:19:19.546" endtime="20210729 14:19:19.550"/>
</iter>
<iter>
<var name="${pid}">12587</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:19.553" level="INFO">Running command 'kill 12587 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:19.550" endtime="20210729 14:19:19.554"/>
</kw>
<status status="PASS" starttime="20210729 14:19:19.550" endtime="20210729 14:19:19.554"/>
</iter>
<iter>
<var name="${pid}">12597</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:19.557" level="INFO">Running command 'kill 12597 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:19.554" endtime="20210729 14:19:19.557"/>
</kw>
<status status="PASS" starttime="20210729 14:19:19.554" endtime="20210729 14:19:19.557"/>
</iter>
<status status="PASS" starttime="20210729 14:19:19.546" endtime="20210729 14:19:19.557"/>
</for>
<status status="PASS" starttime="20210729 14:19:19.545" endtime="20210729 14:19:19.557"/>
</branch>
<status status="PASS" starttime="20210729 14:19:19.545" endtime="20210729 14:19:19.557"/>
</if>
<status status="PASS" starttime="20210729 14:19:19.531" endtime="20210729 14:19:19.558"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤/abc!'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:17.928" endtime="20210729 14:19:19.558">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t21" name="With Any Valid Token, Updating Username Of Each System User With #¤/abc!g Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:19.567" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:19.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:19.573" level="INFO">${pids} = 12626</msg>
<status status="PASS" starttime="20210729 14:19:19.560" endtime="20210729 14:19:19.573"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:19.574" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:19.573" endtime="20210729 14:19:19.574"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:19.574" level="INFO">${pids} = ['12626']</msg>
<status status="PASS" starttime="20210729 14:19:19.574" endtime="20210729 14:19:19.574"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12626</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:19.577" level="INFO">Running command 'kill 12626 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:19.575" endtime="20210729 14:19:19.578"/>
</kw>
<status status="PASS" starttime="20210729 14:19:19.575" endtime="20210729 14:19:19.578"/>
</iter>
<status status="PASS" starttime="20210729 14:19:19.574" endtime="20210729 14:19:19.578"/>
</for>
<status status="PASS" starttime="20210729 14:19:19.574" endtime="20210729 14:19:19.578"/>
</branch>
<status status="PASS" starttime="20210729 14:19:19.574" endtime="20210729 14:19:19.578"/>
</if>
<status status="PASS" starttime="20210729 14:19:19.559" endtime="20210729 14:19:19.578"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:19.580" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:19.579" endtime="20210729 14:19:19.580"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:19.580" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:19.580" endtime="20210729 14:19:19.580"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:19.581" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:19.581" endtime="20210729 14:19:19.581"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:19.581" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:19.581" endtime="20210729 14:19:19.581"/>
</kw>
<msg timestamp="20210729 14:19:19.582" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:19.580" endtime="20210729 14:19:19.582"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:19.589" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:19.582" endtime="20210729 14:19:19.601"/>
</kw>
<status status="PASS" starttime="20210729 14:19:19.579" endtime="20210729 14:19:19.601"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:19.603" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:19.602" endtime="20210729 14:19:19.607"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:21.129" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:19.607" endtime="20210729 14:19:21.130"/>
</kw>
<status status="PASS" starttime="20210729 14:19:19.601" endtime="20210729 14:19:21.131"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:21.136" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:21.136" endtime="20210729 14:19:21.136"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:21.136" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:21.136" endtime="20210729 14:19:21.137"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:21.137" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:21.137" endtime="20210729 14:19:21.137"/>
</kw>
<msg timestamp="20210729 14:19:21.137" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:21.134" endtime="20210729 14:19:21.137"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:21.137" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:21.137" endtime="20210729 14:19:21.138"/>
</kw>
<status status="PASS" starttime="20210729 14:19:21.132" endtime="20210729 14:19:21.138"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:21.138" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:21.138" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:21.138" endtime="20210729 14:19:21.139"/>
</kw>
<status status="PASS" starttime="20210729 14:19:21.138" endtime="20210729 14:19:21.139"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:21.140" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:21.140" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:21.139" endtime="20210729 14:19:21.140"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:21.140" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:21.140" endtime="20210729 14:19:21.140"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:21.141" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:21.140" endtime="20210729 14:19:21.141"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:21.141" endtime="20210729 14:19:21.141"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:21.142" endtime="20210729 14:19:21.142"/>
</kw>
<status status="PASS" starttime="20210729 14:19:21.140" endtime="20210729 14:19:21.142"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:21.142" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:21.142" endtime="20210729 14:19:21.142"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:21.142" endtime="20210729 14:19:21.143"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:21.143" endtime="20210729 14:19:21.143"/>
</kw>
<status status="PASS" starttime="20210729 14:19:21.142" endtime="20210729 14:19:21.143"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:21.143" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:21.143" endtime="20210729 14:19:21.144"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:21.144" endtime="20210729 14:19:21.145"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:21.145" endtime="20210729 14:19:21.145"/>
</kw>
<status status="PASS" starttime="20210729 14:19:21.143" endtime="20210729 14:19:21.145"/>
</iter>
<status status="PASS" starttime="20210729 14:19:21.140" endtime="20210729 14:19:21.146"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:21.146" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:21.146" endtime="20210729 14:19:21.146"/>
</kw>
<status status="PASS" starttime="20210729 14:19:21.139" endtime="20210729 14:19:21.146"/>
</kw>
<status status="PASS" starttime="20210729 14:19:19.559" endtime="20210729 14:19:21.146"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/abc!g</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:21.148" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:21.148" endtime="20210729 14:19:21.148"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:21.148" level="INFO">${payload} = {'username': '#¤/abc!g'}</msg>
<status status="PASS" starttime="20210729 14:19:21.148" endtime="20210729 14:19:21.148"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:21.157" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:21.157" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:21.149" endtime="20210729 14:19:21.157"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:21.157" endtime="20210729 14:19:21.157"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:21.157" endtime="20210729 14:19:21.157"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:21.149" endtime="20210729 14:19:21.158"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:21.148" endtime="20210729 14:19:21.158"/>
</for>
<status status="FAIL" starttime="20210729 14:19:21.147" endtime="20210729 14:19:21.158"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:21.147" endtime="20210729 14:19:21.158"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/abc!g</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:21.159" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:21.158" endtime="20210729 14:19:21.159"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:21.159" level="INFO">${payload} = {'username': '#¤/abc!g'}</msg>
<status status="PASS" starttime="20210729 14:19:21.159" endtime="20210729 14:19:21.159"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:21.164" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:21.164" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:21.160" endtime="20210729 14:19:21.165"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:21.165" endtime="20210729 14:19:21.165"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:21.165" endtime="20210729 14:19:21.165"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:21.160" endtime="20210729 14:19:21.165"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:21.160" endtime="20210729 14:19:21.165"/>
</for>
<status status="FAIL" starttime="20210729 14:19:21.158" endtime="20210729 14:19:21.166"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:21.158" endtime="20210729 14:19:21.166"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/abc!g</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:21.167" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:21.167" endtime="20210729 14:19:21.167"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:21.168" level="INFO">${payload} = {'username': '#¤/abc!g'}</msg>
<status status="PASS" starttime="20210729 14:19:21.167" endtime="20210729 14:19:21.168"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:21.172" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:21.172" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:21.168" endtime="20210729 14:19:21.172"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:21.172" endtime="20210729 14:19:21.172"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:21.172" endtime="20210729 14:19:21.172"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:21.168" endtime="20210729 14:19:21.172"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:21.168" endtime="20210729 14:19:21.173"/>
</for>
<status status="FAIL" starttime="20210729 14:19:21.166" endtime="20210729 14:19:21.173"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:21.166" endtime="20210729 14:19:21.173"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:21.147" endtime="20210729 14:19:21.173"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:21.181" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:21.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:21.189" level="INFO">${pids} = 12649
12656
12660</msg>
<status status="PASS" starttime="20210729 14:19:21.174" endtime="20210729 14:19:21.189"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:21.190" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:21.189" endtime="20210729 14:19:21.190"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:21.190" level="INFO">${pids} = ['12649', '12656', '12660']</msg>
<status status="PASS" starttime="20210729 14:19:21.190" endtime="20210729 14:19:21.190"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12649</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:21.194" level="INFO">Running command 'kill 12649 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:21.191" endtime="20210729 14:19:21.194"/>
</kw>
<status status="PASS" starttime="20210729 14:19:21.191" endtime="20210729 14:19:21.194"/>
</iter>
<iter>
<var name="${pid}">12656</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:21.199" level="INFO">Running command 'kill 12656 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:21.195" endtime="20210729 14:19:21.200"/>
</kw>
<status status="PASS" starttime="20210729 14:19:21.195" endtime="20210729 14:19:21.200"/>
</iter>
<iter>
<var name="${pid}">12660</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:21.203" level="INFO">Running command 'kill 12660 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:21.200" endtime="20210729 14:19:21.206"/>
</kw>
<status status="PASS" starttime="20210729 14:19:21.200" endtime="20210729 14:19:21.206"/>
</iter>
<status status="PASS" starttime="20210729 14:19:21.190" endtime="20210729 14:19:21.207"/>
</for>
<status status="PASS" starttime="20210729 14:19:21.190" endtime="20210729 14:19:21.207"/>
</branch>
<status status="PASS" starttime="20210729 14:19:21.190" endtime="20210729 14:19:21.207"/>
</if>
<status status="PASS" starttime="20210729 14:19:21.173" endtime="20210729 14:19:21.207"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤/abc!g'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:19.558" endtime="20210729 14:19:21.207">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t22" name="With Any Valid Token, Updating Username Of Each System User With #¤/abc!g()=&amp;%¤fghjklQWERTY Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:21.213" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:21.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:21.221" level="INFO">${pids} = 12689</msg>
<status status="PASS" starttime="20210729 14:19:21.209" endtime="20210729 14:19:21.221"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:21.223" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:21.222" endtime="20210729 14:19:21.223"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:21.223" level="INFO">${pids} = ['12689']</msg>
<status status="PASS" starttime="20210729 14:19:21.223" endtime="20210729 14:19:21.223"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12689</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:21.227" level="INFO">Running command 'kill 12689 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:21.224" endtime="20210729 14:19:21.227"/>
</kw>
<status status="PASS" starttime="20210729 14:19:21.224" endtime="20210729 14:19:21.227"/>
</iter>
<status status="PASS" starttime="20210729 14:19:21.223" endtime="20210729 14:19:21.227"/>
</for>
<status status="PASS" starttime="20210729 14:19:21.223" endtime="20210729 14:19:21.227"/>
</branch>
<status status="PASS" starttime="20210729 14:19:21.223" endtime="20210729 14:19:21.227"/>
</if>
<status status="PASS" starttime="20210729 14:19:21.209" endtime="20210729 14:19:21.228"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:21.229" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:21.228" endtime="20210729 14:19:21.229"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:21.229" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:21.229" endtime="20210729 14:19:21.229"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:21.230" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:21.230" endtime="20210729 14:19:21.230"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:21.230" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:21.230" endtime="20210729 14:19:21.230"/>
</kw>
<msg timestamp="20210729 14:19:21.231" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:21.229" endtime="20210729 14:19:21.231"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:21.235" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:21.231" endtime="20210729 14:19:21.239"/>
</kw>
<status status="PASS" starttime="20210729 14:19:21.228" endtime="20210729 14:19:21.240"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:21.242" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:21.241" endtime="20210729 14:19:21.248"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:22.770" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:21.248" endtime="20210729 14:19:22.770"/>
</kw>
<status status="PASS" starttime="20210729 14:19:21.241" endtime="20210729 14:19:22.770"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:22.772" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:22.771" endtime="20210729 14:19:22.772"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:22.772" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:22.772" endtime="20210729 14:19:22.772"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:22.772" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:22.772" endtime="20210729 14:19:22.772"/>
</kw>
<msg timestamp="20210729 14:19:22.772" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:22.771" endtime="20210729 14:19:22.772"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:22.773" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:22.773" endtime="20210729 14:19:22.773"/>
</kw>
<status status="PASS" starttime="20210729 14:19:22.771" endtime="20210729 14:19:22.773"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:22.774" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:22.774" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:22.774" endtime="20210729 14:19:22.774"/>
</kw>
<status status="PASS" starttime="20210729 14:19:22.773" endtime="20210729 14:19:22.775"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:22.775" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:22.775" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:22.775" endtime="20210729 14:19:22.775"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:22.776" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:22.776" endtime="20210729 14:19:22.776"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:22.776" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:22.776" endtime="20210729 14:19:22.776"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:22.776" endtime="20210729 14:19:22.777"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:22.777" endtime="20210729 14:19:22.777"/>
</kw>
<status status="PASS" starttime="20210729 14:19:22.776" endtime="20210729 14:19:22.777"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:22.778" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:22.778" endtime="20210729 14:19:22.778"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:22.778" endtime="20210729 14:19:22.779"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:22.779" endtime="20210729 14:19:22.779"/>
</kw>
<status status="PASS" starttime="20210729 14:19:22.777" endtime="20210729 14:19:22.779"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:22.780" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:22.780" endtime="20210729 14:19:22.780"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:22.780" endtime="20210729 14:19:22.781"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:22.781" endtime="20210729 14:19:22.781"/>
</kw>
<status status="PASS" starttime="20210729 14:19:22.780" endtime="20210729 14:19:22.781"/>
</iter>
<status status="PASS" starttime="20210729 14:19:22.776" endtime="20210729 14:19:22.781"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:22.782" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:22.781" endtime="20210729 14:19:22.782"/>
</kw>
<status status="PASS" starttime="20210729 14:19:22.775" endtime="20210729 14:19:22.782"/>
</kw>
<status status="PASS" starttime="20210729 14:19:21.209" endtime="20210729 14:19:22.782"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/abc!g()=&amp;%¤fghjklQWERTY</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:22.783" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:22.783" endtime="20210729 14:19:22.783"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:22.783" level="INFO">${payload} = {'username': '#¤/abc!g()=&amp;%¤fghjklQWERTY'}</msg>
<status status="PASS" starttime="20210729 14:19:22.783" endtime="20210729 14:19:22.783"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:22.792" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:22.793" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:22.784" endtime="20210729 14:19:22.793"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:22.793" endtime="20210729 14:19:22.793"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:22.793" endtime="20210729 14:19:22.793"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:22.784" endtime="20210729 14:19:22.793"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:22.784" endtime="20210729 14:19:22.793"/>
</for>
<status status="FAIL" starttime="20210729 14:19:22.782" endtime="20210729 14:19:22.793"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:22.782" endtime="20210729 14:19:22.793"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/abc!g()=&amp;%¤fghjklQWERTY</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:22.795" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:22.794" endtime="20210729 14:19:22.795"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:22.795" level="INFO">${payload} = {'username': '#¤/abc!g()=&amp;%¤fghjklQWERTY'}</msg>
<status status="PASS" starttime="20210729 14:19:22.795" endtime="20210729 14:19:22.795"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:22.800" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:22.800" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:22.796" endtime="20210729 14:19:22.800"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:22.800" endtime="20210729 14:19:22.800"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:22.800" endtime="20210729 14:19:22.800"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:22.796" endtime="20210729 14:19:22.800"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:22.795" endtime="20210729 14:19:22.800"/>
</for>
<status status="FAIL" starttime="20210729 14:19:22.794" endtime="20210729 14:19:22.801"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:22.794" endtime="20210729 14:19:22.801"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/abc!g()=&amp;%¤fghjklQWERTY</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:22.802" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:22.801" endtime="20210729 14:19:22.802"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:22.802" level="INFO">${payload} = {'username': '#¤/abc!g()=&amp;%¤fghjklQWERTY'}</msg>
<status status="PASS" starttime="20210729 14:19:22.802" endtime="20210729 14:19:22.802"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:22.806" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:22.807" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:22.802" endtime="20210729 14:19:22.807"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:22.807" endtime="20210729 14:19:22.807"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:22.807" endtime="20210729 14:19:22.807"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:22.802" endtime="20210729 14:19:22.807"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:22.802" endtime="20210729 14:19:22.807"/>
</for>
<status status="FAIL" starttime="20210729 14:19:22.801" endtime="20210729 14:19:22.807"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:22.801" endtime="20210729 14:19:22.807"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:22.782" endtime="20210729 14:19:22.807"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:22.813" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:22.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:22.822" level="INFO">${pids} = 12712
12719
12725</msg>
<status status="PASS" starttime="20210729 14:19:22.808" endtime="20210729 14:19:22.822"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:22.823" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:22.822" endtime="20210729 14:19:22.823"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:22.823" level="INFO">${pids} = ['12712', '12719', '12725']</msg>
<status status="PASS" starttime="20210729 14:19:22.823" endtime="20210729 14:19:22.823"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12712</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:22.827" level="INFO">Running command 'kill 12712 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:22.824" endtime="20210729 14:19:22.827"/>
</kw>
<status status="PASS" starttime="20210729 14:19:22.824" endtime="20210729 14:19:22.828"/>
</iter>
<iter>
<var name="${pid}">12719</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:22.831" level="INFO">Running command 'kill 12719 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:22.828" endtime="20210729 14:19:22.831"/>
</kw>
<status status="PASS" starttime="20210729 14:19:22.828" endtime="20210729 14:19:22.831"/>
</iter>
<iter>
<var name="${pid}">12725</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:22.835" level="INFO">Running command 'kill 12725 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:22.832" endtime="20210729 14:19:22.836"/>
</kw>
<status status="PASS" starttime="20210729 14:19:22.832" endtime="20210729 14:19:22.836"/>
</iter>
<status status="PASS" starttime="20210729 14:19:22.824" endtime="20210729 14:19:22.836"/>
</for>
<status status="PASS" starttime="20210729 14:19:22.823" endtime="20210729 14:19:22.836"/>
</branch>
<status status="PASS" starttime="20210729 14:19:22.823" endtime="20210729 14:19:22.836"/>
</if>
<status status="PASS" starttime="20210729 14:19:22.808" endtime="20210729 14:19:22.836"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤/abc!g()=&amp;%¤fghjklQWERTY'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:21.208" endtime="20210729 14:19:22.836">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t23" name="With Any Valid Token, Updating Username Of Each System User With !# &amp;/¤% Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:22.847" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:22.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:22.856" level="INFO">${pids} = 12754</msg>
<status status="PASS" starttime="20210729 14:19:22.838" endtime="20210729 14:19:22.856"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:22.857" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:22.856" endtime="20210729 14:19:22.857"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:22.857" level="INFO">${pids} = ['12754']</msg>
<status status="PASS" starttime="20210729 14:19:22.857" endtime="20210729 14:19:22.858"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12754</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:22.869" level="INFO">Running command 'kill 12754 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:22.858" endtime="20210729 14:19:22.869"/>
</kw>
<status status="PASS" starttime="20210729 14:19:22.858" endtime="20210729 14:19:22.869"/>
</iter>
<status status="PASS" starttime="20210729 14:19:22.858" endtime="20210729 14:19:22.869"/>
</for>
<status status="PASS" starttime="20210729 14:19:22.857" endtime="20210729 14:19:22.869"/>
</branch>
<status status="PASS" starttime="20210729 14:19:22.857" endtime="20210729 14:19:22.869"/>
</if>
<status status="PASS" starttime="20210729 14:19:22.838" endtime="20210729 14:19:22.870"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:22.871" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:22.871" endtime="20210729 14:19:22.871"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:22.872" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:22.872" endtime="20210729 14:19:22.872"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:22.872" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:22.872" endtime="20210729 14:19:22.873"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:22.873" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:22.873" endtime="20210729 14:19:22.873"/>
</kw>
<msg timestamp="20210729 14:19:22.873" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:22.872" endtime="20210729 14:19:22.873"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:22.876" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:22.873" endtime="20210729 14:19:22.878"/>
</kw>
<status status="PASS" starttime="20210729 14:19:22.870" endtime="20210729 14:19:22.878"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:22.880" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:22.880" endtime="20210729 14:19:22.884"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:24.385" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:22.884" endtime="20210729 14:19:24.385"/>
</kw>
<status status="PASS" starttime="20210729 14:19:22.879" endtime="20210729 14:19:24.385"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:24.386" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:24.386" endtime="20210729 14:19:24.386"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:24.387" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:24.387" endtime="20210729 14:19:24.387"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:24.387" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:24.387" endtime="20210729 14:19:24.387"/>
</kw>
<msg timestamp="20210729 14:19:24.387" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:24.386" endtime="20210729 14:19:24.387"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:24.388" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:24.388" endtime="20210729 14:19:24.388"/>
</kw>
<status status="PASS" starttime="20210729 14:19:24.386" endtime="20210729 14:19:24.388"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:24.389" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:24.389" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:24.389" endtime="20210729 14:19:24.389"/>
</kw>
<status status="PASS" starttime="20210729 14:19:24.388" endtime="20210729 14:19:24.389"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:24.391" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:24.391" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:24.390" endtime="20210729 14:19:24.391"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:24.391" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:24.391" endtime="20210729 14:19:24.391"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:24.392" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:24.392" endtime="20210729 14:19:24.392"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:24.392" endtime="20210729 14:19:24.393"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:24.393" endtime="20210729 14:19:24.393"/>
</kw>
<status status="PASS" starttime="20210729 14:19:24.392" endtime="20210729 14:19:24.393"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:24.393" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:24.393" endtime="20210729 14:19:24.393"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:24.393" endtime="20210729 14:19:24.394"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:24.394" endtime="20210729 14:19:24.395"/>
</kw>
<status status="PASS" starttime="20210729 14:19:24.393" endtime="20210729 14:19:24.395"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:24.395" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:24.395" endtime="20210729 14:19:24.395"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:24.395" endtime="20210729 14:19:24.396"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:24.396" endtime="20210729 14:19:24.396"/>
</kw>
<status status="PASS" starttime="20210729 14:19:24.395" endtime="20210729 14:19:24.396"/>
</iter>
<status status="PASS" starttime="20210729 14:19:24.391" endtime="20210729 14:19:24.396"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:24.397" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:24.396" endtime="20210729 14:19:24.397"/>
</kw>
<status status="PASS" starttime="20210729 14:19:24.389" endtime="20210729 14:19:24.397"/>
</kw>
<status status="PASS" starttime="20210729 14:19:22.837" endtime="20210729 14:19:24.397"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!# &amp;/¤%</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:24.398" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:24.398" endtime="20210729 14:19:24.398"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:24.398" level="INFO">${payload} = {'username': '!# &amp;/¤%'}</msg>
<status status="PASS" starttime="20210729 14:19:24.398" endtime="20210729 14:19:24.399"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:24.407" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:24.408" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:24.399" endtime="20210729 14:19:24.408"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:24.408" endtime="20210729 14:19:24.408"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:24.408" endtime="20210729 14:19:24.408"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:24.399" endtime="20210729 14:19:24.408"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:24.399" endtime="20210729 14:19:24.408"/>
</for>
<status status="FAIL" starttime="20210729 14:19:24.397" endtime="20210729 14:19:24.409"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:24.397" endtime="20210729 14:19:24.409"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!# &amp;/¤%</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:24.410" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:24.410" endtime="20210729 14:19:24.410"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:24.410" level="INFO">${payload} = {'username': '!# &amp;/¤%'}</msg>
<status status="PASS" starttime="20210729 14:19:24.410" endtime="20210729 14:19:24.410"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:24.415" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:24.415" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:24.411" endtime="20210729 14:19:24.415"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:24.415" endtime="20210729 14:19:24.415"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:24.415" endtime="20210729 14:19:24.415"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:24.411" endtime="20210729 14:19:24.415"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:24.410" endtime="20210729 14:19:24.415"/>
</for>
<status status="FAIL" starttime="20210729 14:19:24.409" endtime="20210729 14:19:24.416"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:24.409" endtime="20210729 14:19:24.416"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!# &amp;/¤%</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:24.417" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:24.416" endtime="20210729 14:19:24.417"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:24.417" level="INFO">${payload} = {'username': '!# &amp;/¤%'}</msg>
<status status="PASS" starttime="20210729 14:19:24.417" endtime="20210729 14:19:24.417"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:24.421" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:24.421" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:24.417" endtime="20210729 14:19:24.421"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:24.421" endtime="20210729 14:19:24.422"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:24.422" endtime="20210729 14:19:24.422"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:24.417" endtime="20210729 14:19:24.422"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:24.417" endtime="20210729 14:19:24.422"/>
</for>
<status status="FAIL" starttime="20210729 14:19:24.416" endtime="20210729 14:19:24.422"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:24.416" endtime="20210729 14:19:24.422"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:24.397" endtime="20210729 14:19:24.422"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:24.426" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:24.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:24.435" level="INFO">${pids} = 12777
12784
12797</msg>
<status status="PASS" starttime="20210729 14:19:24.423" endtime="20210729 14:19:24.435"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:24.436" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:24.435" endtime="20210729 14:19:24.436"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:24.436" level="INFO">${pids} = ['12777', '12784', '12797']</msg>
<status status="PASS" starttime="20210729 14:19:24.436" endtime="20210729 14:19:24.436"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12777</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:24.439" level="INFO">Running command 'kill 12777 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:24.437" endtime="20210729 14:19:24.440"/>
</kw>
<status status="PASS" starttime="20210729 14:19:24.437" endtime="20210729 14:19:24.440"/>
</iter>
<iter>
<var name="${pid}">12784</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:24.443" level="INFO">Running command 'kill 12784 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:24.440" endtime="20210729 14:19:24.445"/>
</kw>
<status status="PASS" starttime="20210729 14:19:24.440" endtime="20210729 14:19:24.445"/>
</iter>
<iter>
<var name="${pid}">12797</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:24.448" level="INFO">Running command 'kill 12797 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:24.445" endtime="20210729 14:19:24.449"/>
</kw>
<status status="PASS" starttime="20210729 14:19:24.445" endtime="20210729 14:19:24.449"/>
</iter>
<status status="PASS" starttime="20210729 14:19:24.436" endtime="20210729 14:19:24.449"/>
</for>
<status status="PASS" starttime="20210729 14:19:24.436" endtime="20210729 14:19:24.449"/>
</branch>
<status status="PASS" starttime="20210729 14:19:24.436" endtime="20210729 14:19:24.449"/>
</if>
<status status="PASS" starttime="20210729 14:19:24.422" endtime="20210729 14:19:24.449"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '!# &amp;/¤%'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:22.837" endtime="20210729 14:19:24.449">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t24" name="With Any Valid Token, Updating Username Of Each System User With !#%&amp;/¤ = Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:24.454" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:24.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:24.466" level="INFO">${pids} = 12826</msg>
<status status="PASS" starttime="20210729 14:19:24.451" endtime="20210729 14:19:24.466"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:24.467" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:24.466" endtime="20210729 14:19:24.467"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:24.468" level="INFO">${pids} = ['12826']</msg>
<status status="PASS" starttime="20210729 14:19:24.467" endtime="20210729 14:19:24.468"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12826</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:24.471" level="INFO">Running command 'kill 12826 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:24.468" endtime="20210729 14:19:24.471"/>
</kw>
<status status="PASS" starttime="20210729 14:19:24.468" endtime="20210729 14:19:24.471"/>
</iter>
<status status="PASS" starttime="20210729 14:19:24.468" endtime="20210729 14:19:24.471"/>
</for>
<status status="PASS" starttime="20210729 14:19:24.467" endtime="20210729 14:19:24.471"/>
</branch>
<status status="PASS" starttime="20210729 14:19:24.467" endtime="20210729 14:19:24.471"/>
</if>
<status status="PASS" starttime="20210729 14:19:24.451" endtime="20210729 14:19:24.471"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:24.473" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:24.472" endtime="20210729 14:19:24.473"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:24.473" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:24.473" endtime="20210729 14:19:24.473"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:24.474" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:24.473" endtime="20210729 14:19:24.474"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:24.474" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:24.474" endtime="20210729 14:19:24.474"/>
</kw>
<msg timestamp="20210729 14:19:24.474" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:24.473" endtime="20210729 14:19:24.474"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:24.478" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:24.474" endtime="20210729 14:19:24.480"/>
</kw>
<status status="PASS" starttime="20210729 14:19:24.472" endtime="20210729 14:19:24.480"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:24.481" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:24.481" endtime="20210729 14:19:24.489"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:25.991" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:24.490" endtime="20210729 14:19:25.991"/>
</kw>
<status status="PASS" starttime="20210729 14:19:24.480" endtime="20210729 14:19:25.992"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:25.993" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:25.992" endtime="20210729 14:19:25.993"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:25.993" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:25.993" endtime="20210729 14:19:25.993"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:25.993" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:25.993" endtime="20210729 14:19:25.993"/>
</kw>
<msg timestamp="20210729 14:19:25.994" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:25.992" endtime="20210729 14:19:25.994"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:25.994" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:25.994" endtime="20210729 14:19:25.994"/>
</kw>
<status status="PASS" starttime="20210729 14:19:25.992" endtime="20210729 14:19:25.995"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:25.995" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:25.995" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:25.995" endtime="20210729 14:19:25.995"/>
</kw>
<status status="PASS" starttime="20210729 14:19:25.995" endtime="20210729 14:19:25.996"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:25.996" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:25.997" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:25.996" endtime="20210729 14:19:25.997"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:25.997" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:25.997" endtime="20210729 14:19:25.997"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:25.997" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:25.997" endtime="20210729 14:19:25.997"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:25.997" endtime="20210729 14:19:25.998"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:25.999" endtime="20210729 14:19:26.002"/>
</kw>
<status status="PASS" starttime="20210729 14:19:25.997" endtime="20210729 14:19:26.002"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:26.003" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:26.002" endtime="20210729 14:19:26.003"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:26.003" endtime="20210729 14:19:26.003"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:26.003" endtime="20210729 14:19:26.004"/>
</kw>
<status status="PASS" starttime="20210729 14:19:26.002" endtime="20210729 14:19:26.004"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:26.004" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:26.004" endtime="20210729 14:19:26.004"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:26.004" endtime="20210729 14:19:26.005"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:26.005" endtime="20210729 14:19:26.005"/>
</kw>
<status status="PASS" starttime="20210729 14:19:26.004" endtime="20210729 14:19:26.005"/>
</iter>
<status status="PASS" starttime="20210729 14:19:25.997" endtime="20210729 14:19:26.005"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:26.006" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:26.005" endtime="20210729 14:19:26.006"/>
</kw>
<status status="PASS" starttime="20210729 14:19:25.996" endtime="20210729 14:19:26.006"/>
</kw>
<status status="PASS" starttime="20210729 14:19:24.451" endtime="20210729 14:19:26.006"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤ =</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:26.007" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:26.007" endtime="20210729 14:19:26.007"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:26.008" level="INFO">${payload} = {'username': '!#%&amp;/¤ ='}</msg>
<status status="PASS" starttime="20210729 14:19:26.007" endtime="20210729 14:19:26.008"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:26.018" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:26.018" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:26.008" endtime="20210729 14:19:26.018"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:26.018" endtime="20210729 14:19:26.018"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:26.018" endtime="20210729 14:19:26.018"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:26.008" endtime="20210729 14:19:26.018"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:26.008" endtime="20210729 14:19:26.018"/>
</for>
<status status="FAIL" starttime="20210729 14:19:26.006" endtime="20210729 14:19:26.019"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:26.006" endtime="20210729 14:19:26.019"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤ =</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:26.020" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:26.020" endtime="20210729 14:19:26.020"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:26.020" level="INFO">${payload} = {'username': '!#%&amp;/¤ ='}</msg>
<status status="PASS" starttime="20210729 14:19:26.020" endtime="20210729 14:19:26.020"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:26.025" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:26.025" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:26.021" endtime="20210729 14:19:26.025"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:26.025" endtime="20210729 14:19:26.026"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:26.026" endtime="20210729 14:19:26.026"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:26.020" endtime="20210729 14:19:26.026"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:26.020" endtime="20210729 14:19:26.026"/>
</for>
<status status="FAIL" starttime="20210729 14:19:26.019" endtime="20210729 14:19:26.026"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:26.019" endtime="20210729 14:19:26.026"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤ =</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:26.027" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:26.027" endtime="20210729 14:19:26.027"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:26.028" level="INFO">${payload} = {'username': '!#%&amp;/¤ ='}</msg>
<status status="PASS" starttime="20210729 14:19:26.027" endtime="20210729 14:19:26.028"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:26.033" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:26.033" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:26.028" endtime="20210729 14:19:26.033"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:26.033" endtime="20210729 14:19:26.034"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:26.034" endtime="20210729 14:19:26.034"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:26.028" endtime="20210729 14:19:26.034"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:26.028" endtime="20210729 14:19:26.034"/>
</for>
<status status="FAIL" starttime="20210729 14:19:26.026" endtime="20210729 14:19:26.034"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:26.026" endtime="20210729 14:19:26.034"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:26.006" endtime="20210729 14:19:26.034"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:26.040" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:26.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:26.051" level="INFO">${pids} = 12849
12856
12860</msg>
<status status="PASS" starttime="20210729 14:19:26.037" endtime="20210729 14:19:26.051"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:26.052" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:26.051" endtime="20210729 14:19:26.052"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:26.053" level="INFO">${pids} = ['12849', '12856', '12860']</msg>
<status status="PASS" starttime="20210729 14:19:26.052" endtime="20210729 14:19:26.053"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12849</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:26.056" level="INFO">Running command 'kill 12849 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:26.053" endtime="20210729 14:19:26.056"/>
</kw>
<status status="PASS" starttime="20210729 14:19:26.053" endtime="20210729 14:19:26.056"/>
</iter>
<iter>
<var name="${pid}">12856</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:26.059" level="INFO">Running command 'kill 12856 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:26.057" endtime="20210729 14:19:26.059"/>
</kw>
<status status="PASS" starttime="20210729 14:19:26.056" endtime="20210729 14:19:26.059"/>
</iter>
<iter>
<var name="${pid}">12860</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:26.064" level="INFO">Running command 'kill 12860 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:26.060" endtime="20210729 14:19:26.065"/>
</kw>
<status status="PASS" starttime="20210729 14:19:26.060" endtime="20210729 14:19:26.065"/>
</iter>
<status status="PASS" starttime="20210729 14:19:26.053" endtime="20210729 14:19:26.065"/>
</for>
<status status="PASS" starttime="20210729 14:19:26.052" endtime="20210729 14:19:26.065"/>
</branch>
<status status="PASS" starttime="20210729 14:19:26.052" endtime="20210729 14:19:26.065"/>
</if>
<status status="PASS" starttime="20210729 14:19:26.036" endtime="20210729 14:19:26.065"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '!#%&amp;/¤ ='
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:24.450" endtime="20210729 14:19:26.066">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t25" name="With Any Valid Token, Updating Username Of Each System User With !#%&amp;/¤%= ()=? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:26.071" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:26.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:26.079" level="INFO">${pids} = 12889</msg>
<status status="PASS" starttime="20210729 14:19:26.068" endtime="20210729 14:19:26.079"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:26.080" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:26.079" endtime="20210729 14:19:26.080"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:26.081" level="INFO">${pids} = ['12889']</msg>
<status status="PASS" starttime="20210729 14:19:26.080" endtime="20210729 14:19:26.081"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12889</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:26.084" level="INFO">Running command 'kill 12889 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:26.081" endtime="20210729 14:19:26.084"/>
</kw>
<status status="PASS" starttime="20210729 14:19:26.081" endtime="20210729 14:19:26.084"/>
</iter>
<status status="PASS" starttime="20210729 14:19:26.081" endtime="20210729 14:19:26.084"/>
</for>
<status status="PASS" starttime="20210729 14:19:26.080" endtime="20210729 14:19:26.084"/>
</branch>
<status status="PASS" starttime="20210729 14:19:26.080" endtime="20210729 14:19:26.084"/>
</if>
<status status="PASS" starttime="20210729 14:19:26.067" endtime="20210729 14:19:26.085"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:26.086" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:26.085" endtime="20210729 14:19:26.086"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:26.086" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:26.086" endtime="20210729 14:19:26.086"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:26.087" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:26.086" endtime="20210729 14:19:26.087"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:26.087" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:26.087" endtime="20210729 14:19:26.087"/>
</kw>
<msg timestamp="20210729 14:19:26.087" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:26.086" endtime="20210729 14:19:26.087"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:26.090" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:26.087" endtime="20210729 14:19:26.092"/>
</kw>
<status status="PASS" starttime="20210729 14:19:26.085" endtime="20210729 14:19:26.092"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:26.093" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:26.093" endtime="20210729 14:19:26.098"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:27.601" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:26.098" endtime="20210729 14:19:27.601"/>
</kw>
<status status="PASS" starttime="20210729 14:19:26.092" endtime="20210729 14:19:27.601"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:27.602" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:27.602" endtime="20210729 14:19:27.602"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:27.603" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:27.602" endtime="20210729 14:19:27.603"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:27.603" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:27.603" endtime="20210729 14:19:27.603"/>
</kw>
<msg timestamp="20210729 14:19:27.603" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:27.602" endtime="20210729 14:19:27.603"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:27.604" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:27.603" endtime="20210729 14:19:27.604"/>
</kw>
<status status="PASS" starttime="20210729 14:19:27.601" endtime="20210729 14:19:27.604"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:27.604" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:27.605" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:27.604" endtime="20210729 14:19:27.605"/>
</kw>
<status status="PASS" starttime="20210729 14:19:27.604" endtime="20210729 14:19:27.605"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:27.606" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:27.606" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:27.605" endtime="20210729 14:19:27.606"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:27.606" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:27.606" endtime="20210729 14:19:27.606"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:27.606" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:27.606" endtime="20210729 14:19:27.606"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:27.607" endtime="20210729 14:19:27.607"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:27.607" endtime="20210729 14:19:27.608"/>
</kw>
<status status="PASS" starttime="20210729 14:19:27.606" endtime="20210729 14:19:27.608"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:27.608" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:27.608" endtime="20210729 14:19:27.608"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:27.608" endtime="20210729 14:19:27.609"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:27.609" endtime="20210729 14:19:27.609"/>
</kw>
<status status="PASS" starttime="20210729 14:19:27.608" endtime="20210729 14:19:27.609"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:27.610" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:27.609" endtime="20210729 14:19:27.610"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:27.610" endtime="20210729 14:19:27.610"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:27.610" endtime="20210729 14:19:27.611"/>
</kw>
<status status="PASS" starttime="20210729 14:19:27.609" endtime="20210729 14:19:27.611"/>
</iter>
<status status="PASS" starttime="20210729 14:19:27.606" endtime="20210729 14:19:27.611"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:27.611" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:27.611" endtime="20210729 14:19:27.611"/>
</kw>
<status status="PASS" starttime="20210729 14:19:27.605" endtime="20210729 14:19:27.611"/>
</kw>
<status status="PASS" starttime="20210729 14:19:26.067" endtime="20210729 14:19:27.611"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤%= ()=?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:27.613" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:27.612" endtime="20210729 14:19:27.613"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:27.613" level="INFO">${payload} = {'username': '!#%&amp;/¤%= ()=?'}</msg>
<status status="PASS" starttime="20210729 14:19:27.613" endtime="20210729 14:19:27.613"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:27.622" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:27.622" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:27.614" endtime="20210729 14:19:27.622"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:27.622" endtime="20210729 14:19:27.623"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:27.623" endtime="20210729 14:19:27.623"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:27.614" endtime="20210729 14:19:27.623"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:27.613" endtime="20210729 14:19:27.623"/>
</for>
<status status="FAIL" starttime="20210729 14:19:27.612" endtime="20210729 14:19:27.623"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:27.612" endtime="20210729 14:19:27.623"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤%= ()=?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:27.624" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:27.624" endtime="20210729 14:19:27.624"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:27.624" level="INFO">${payload} = {'username': '!#%&amp;/¤%= ()=?'}</msg>
<status status="PASS" starttime="20210729 14:19:27.624" endtime="20210729 14:19:27.624"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:27.629" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:27.629" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:27.625" endtime="20210729 14:19:27.629"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:27.629" endtime="20210729 14:19:27.629"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:27.629" endtime="20210729 14:19:27.629"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:27.625" endtime="20210729 14:19:27.629"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:27.624" endtime="20210729 14:19:27.629"/>
</for>
<status status="FAIL" starttime="20210729 14:19:27.623" endtime="20210729 14:19:27.629"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:27.623" endtime="20210729 14:19:27.629"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=!#%&amp;/¤%= ()=?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:27.630" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:27.630" endtime="20210729 14:19:27.630"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:27.631" level="INFO">${payload} = {'username': '!#%&amp;/¤%= ()=?'}</msg>
<status status="PASS" starttime="20210729 14:19:27.631" endtime="20210729 14:19:27.631"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:27.635" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:27.635" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:27.631" endtime="20210729 14:19:27.636"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:27.636" endtime="20210729 14:19:27.636"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:27.636" endtime="20210729 14:19:27.636"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:27.631" endtime="20210729 14:19:27.636"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:27.631" endtime="20210729 14:19:27.636"/>
</for>
<status status="FAIL" starttime="20210729 14:19:27.630" endtime="20210729 14:19:27.636"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:27.629" endtime="20210729 14:19:27.636"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:27.612" endtime="20210729 14:19:27.636"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:27.640" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:27.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:27.649" level="INFO">${pids} = 12912
12919
12924</msg>
<status status="PASS" starttime="20210729 14:19:27.637" endtime="20210729 14:19:27.649"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:27.650" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:27.649" endtime="20210729 14:19:27.650"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:27.651" level="INFO">${pids} = ['12912', '12919', '12924']</msg>
<status status="PASS" starttime="20210729 14:19:27.650" endtime="20210729 14:19:27.651"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12912</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:27.654" level="INFO">Running command 'kill 12912 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:27.651" endtime="20210729 14:19:27.654"/>
</kw>
<status status="PASS" starttime="20210729 14:19:27.651" endtime="20210729 14:19:27.654"/>
</iter>
<iter>
<var name="${pid}">12919</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:27.657" level="INFO">Running command 'kill 12919 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:27.655" endtime="20210729 14:19:27.657"/>
</kw>
<status status="PASS" starttime="20210729 14:19:27.654" endtime="20210729 14:19:27.657"/>
</iter>
<iter>
<var name="${pid}">12924</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:27.662" level="INFO">Running command 'kill 12924 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:27.658" endtime="20210729 14:19:27.662"/>
</kw>
<status status="PASS" starttime="20210729 14:19:27.657" endtime="20210729 14:19:27.663"/>
</iter>
<status status="PASS" starttime="20210729 14:19:27.651" endtime="20210729 14:19:27.663"/>
</for>
<status status="PASS" starttime="20210729 14:19:27.650" endtime="20210729 14:19:27.663"/>
</branch>
<status status="PASS" starttime="20210729 14:19:27.650" endtime="20210729 14:19:27.663"/>
</if>
<status status="PASS" starttime="20210729 14:19:27.637" endtime="20210729 14:19:27.663"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '!#%&amp;/¤%= ()=?'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:26.066" endtime="20210729 14:19:27.663">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t26" name="With Any Valid Token, Updating Username Of Each System User With 1234 67 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:27.668" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:27.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:27.677" level="INFO">${pids} = 12953</msg>
<status status="PASS" starttime="20210729 14:19:27.665" endtime="20210729 14:19:27.677"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:27.678" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:27.677" endtime="20210729 14:19:27.678"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:27.679" level="INFO">${pids} = ['12953']</msg>
<status status="PASS" starttime="20210729 14:19:27.678" endtime="20210729 14:19:27.679"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12953</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:27.682" level="INFO">Running command 'kill 12953 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:27.679" endtime="20210729 14:19:27.682"/>
</kw>
<status status="PASS" starttime="20210729 14:19:27.679" endtime="20210729 14:19:27.682"/>
</iter>
<status status="PASS" starttime="20210729 14:19:27.679" endtime="20210729 14:19:27.682"/>
</for>
<status status="PASS" starttime="20210729 14:19:27.678" endtime="20210729 14:19:27.683"/>
</branch>
<status status="PASS" starttime="20210729 14:19:27.678" endtime="20210729 14:19:27.683"/>
</if>
<status status="PASS" starttime="20210729 14:19:27.665" endtime="20210729 14:19:27.683"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:27.684" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:27.684" endtime="20210729 14:19:27.684"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:27.685" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:27.684" endtime="20210729 14:19:27.685"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:27.685" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:27.685" endtime="20210729 14:19:27.685"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:27.685" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:27.685" endtime="20210729 14:19:27.685"/>
</kw>
<msg timestamp="20210729 14:19:27.686" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:27.684" endtime="20210729 14:19:27.686"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:27.701" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:27.686" endtime="20210729 14:19:27.703"/>
</kw>
<status status="PASS" starttime="20210729 14:19:27.683" endtime="20210729 14:19:27.703"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:27.705" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:27.704" endtime="20210729 14:19:27.709"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:29.210" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:27.709" endtime="20210729 14:19:29.210"/>
</kw>
<status status="PASS" starttime="20210729 14:19:27.704" endtime="20210729 14:19:29.210"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:29.212" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:29.212" endtime="20210729 14:19:29.212"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:29.213" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:29.212" endtime="20210729 14:19:29.213"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:29.213" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:29.213" endtime="20210729 14:19:29.213"/>
</kw>
<msg timestamp="20210729 14:19:29.213" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:29.211" endtime="20210729 14:19:29.213"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:29.214" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:29.213" endtime="20210729 14:19:29.214"/>
</kw>
<status status="PASS" starttime="20210729 14:19:29.211" endtime="20210729 14:19:29.214"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:29.215" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:29.215" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:29.215" endtime="20210729 14:19:29.215"/>
</kw>
<status status="PASS" starttime="20210729 14:19:29.214" endtime="20210729 14:19:29.215"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:29.216" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:29.216" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:29.216" endtime="20210729 14:19:29.216"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:29.216" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:29.216" endtime="20210729 14:19:29.216"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:29.217" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:29.217" endtime="20210729 14:19:29.217"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:29.217" endtime="20210729 14:19:29.218"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:29.218" endtime="20210729 14:19:29.218"/>
</kw>
<status status="PASS" starttime="20210729 14:19:29.217" endtime="20210729 14:19:29.218"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:29.218" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:29.218" endtime="20210729 14:19:29.218"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:29.218" endtime="20210729 14:19:29.219"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:29.219" endtime="20210729 14:19:29.219"/>
</kw>
<status status="PASS" starttime="20210729 14:19:29.218" endtime="20210729 14:19:29.219"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:29.220" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:29.220" endtime="20210729 14:19:29.220"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:29.220" endtime="20210729 14:19:29.221"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:29.221" endtime="20210729 14:19:29.221"/>
</kw>
<status status="PASS" starttime="20210729 14:19:29.220" endtime="20210729 14:19:29.221"/>
</iter>
<status status="PASS" starttime="20210729 14:19:29.216" endtime="20210729 14:19:29.221"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:29.222" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:29.221" endtime="20210729 14:19:29.222"/>
</kw>
<status status="PASS" starttime="20210729 14:19:29.215" endtime="20210729 14:19:29.222"/>
</kw>
<status status="PASS" starttime="20210729 14:19:27.664" endtime="20210729 14:19:29.222"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=1234 67</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:29.223" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:29.223" endtime="20210729 14:19:29.223"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:29.223" level="INFO">${payload} = {'username': '1234 67'}</msg>
<status status="PASS" starttime="20210729 14:19:29.223" endtime="20210729 14:19:29.223"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:29.234" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:29.235" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:29.224" endtime="20210729 14:19:29.235"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:29.235" endtime="20210729 14:19:29.235"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:29.235" endtime="20210729 14:19:29.235"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:29.224" endtime="20210729 14:19:29.235"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:29.223" endtime="20210729 14:19:29.235"/>
</for>
<status status="FAIL" starttime="20210729 14:19:29.222" endtime="20210729 14:19:29.235"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:29.222" endtime="20210729 14:19:29.235"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=1234 67</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:29.236" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:29.236" endtime="20210729 14:19:29.236"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:29.237" level="INFO">${payload} = {'username': '1234 67'}</msg>
<status status="PASS" starttime="20210729 14:19:29.236" endtime="20210729 14:19:29.237"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:29.241" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:29.241" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:29.237" endtime="20210729 14:19:29.241"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:29.241" endtime="20210729 14:19:29.241"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:29.241" endtime="20210729 14:19:29.241"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:29.237" endtime="20210729 14:19:29.241"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:29.237" endtime="20210729 14:19:29.242"/>
</for>
<status status="FAIL" starttime="20210729 14:19:29.236" endtime="20210729 14:19:29.242"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:29.235" endtime="20210729 14:19:29.242"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=1234 67</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:29.243" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:29.242" endtime="20210729 14:19:29.243"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:29.243" level="INFO">${payload} = {'username': '1234 67'}</msg>
<status status="PASS" starttime="20210729 14:19:29.243" endtime="20210729 14:19:29.243"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:29.247" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:29.248" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:29.243" endtime="20210729 14:19:29.248"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:29.248" endtime="20210729 14:19:29.248"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:29.248" endtime="20210729 14:19:29.248"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:29.243" endtime="20210729 14:19:29.248"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:29.243" endtime="20210729 14:19:29.248"/>
</for>
<status status="FAIL" starttime="20210729 14:19:29.242" endtime="20210729 14:19:29.248"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:29.242" endtime="20210729 14:19:29.248"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:29.222" endtime="20210729 14:19:29.248"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:29.255" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:29.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:29.264" level="INFO">${pids} = 12976
12983
12987</msg>
<status status="PASS" starttime="20210729 14:19:29.250" endtime="20210729 14:19:29.264"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:29.265" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:29.264" endtime="20210729 14:19:29.265"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:29.266" level="INFO">${pids} = ['12976', '12983', '12987']</msg>
<status status="PASS" starttime="20210729 14:19:29.265" endtime="20210729 14:19:29.266"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">12976</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:29.269" level="INFO">Running command 'kill 12976 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:29.266" endtime="20210729 14:19:29.270"/>
</kw>
<status status="PASS" starttime="20210729 14:19:29.266" endtime="20210729 14:19:29.270"/>
</iter>
<iter>
<var name="${pid}">12983</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:29.273" level="INFO">Running command 'kill 12983 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:29.270" endtime="20210729 14:19:29.273"/>
</kw>
<status status="PASS" starttime="20210729 14:19:29.270" endtime="20210729 14:19:29.273"/>
</iter>
<iter>
<var name="${pid}">12987</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:29.276" level="INFO">Running command 'kill 12987 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:29.273" endtime="20210729 14:19:29.276"/>
</kw>
<status status="PASS" starttime="20210729 14:19:29.273" endtime="20210729 14:19:29.276"/>
</iter>
<status status="PASS" starttime="20210729 14:19:29.266" endtime="20210729 14:19:29.276"/>
</for>
<status status="PASS" starttime="20210729 14:19:29.265" endtime="20210729 14:19:29.276"/>
</branch>
<status status="PASS" starttime="20210729 14:19:29.265" endtime="20210729 14:19:29.276"/>
</if>
<status status="PASS" starttime="20210729 14:19:29.249" endtime="20210729 14:19:29.277"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '1234 67'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:27.664" endtime="20210729 14:19:29.277">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t27" name="With Any Valid Token, Updating Username Of Each System User With 123456 8 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:29.287" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:29.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:29.296" level="INFO">${pids} = 13016</msg>
<status status="PASS" starttime="20210729 14:19:29.279" endtime="20210729 14:19:29.296"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:29.297" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:29.296" endtime="20210729 14:19:29.297"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:29.297" level="INFO">${pids} = ['13016']</msg>
<status status="PASS" starttime="20210729 14:19:29.297" endtime="20210729 14:19:29.297"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13016</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:29.303" level="INFO">Running command 'kill 13016 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:29.298" endtime="20210729 14:19:29.303"/>
</kw>
<status status="PASS" starttime="20210729 14:19:29.298" endtime="20210729 14:19:29.303"/>
</iter>
<status status="PASS" starttime="20210729 14:19:29.297" endtime="20210729 14:19:29.303"/>
</for>
<status status="PASS" starttime="20210729 14:19:29.297" endtime="20210729 14:19:29.303"/>
</branch>
<status status="PASS" starttime="20210729 14:19:29.297" endtime="20210729 14:19:29.303"/>
</if>
<status status="PASS" starttime="20210729 14:19:29.279" endtime="20210729 14:19:29.304"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:29.305" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:29.304" endtime="20210729 14:19:29.305"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:29.305" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:29.305" endtime="20210729 14:19:29.305"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:29.306" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:29.305" endtime="20210729 14:19:29.306"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:29.306" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:29.306" endtime="20210729 14:19:29.306"/>
</kw>
<msg timestamp="20210729 14:19:29.306" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:29.305" endtime="20210729 14:19:29.306"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:29.324" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:29.306" endtime="20210729 14:19:29.328"/>
</kw>
<status status="PASS" starttime="20210729 14:19:29.304" endtime="20210729 14:19:29.329"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:29.330" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:29.330" endtime="20210729 14:19:29.335"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:30.836" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:29.335" endtime="20210729 14:19:30.836"/>
</kw>
<status status="PASS" starttime="20210729 14:19:29.329" endtime="20210729 14:19:30.836"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:30.837" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:30.837" endtime="20210729 14:19:30.837"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:30.838" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:30.838" endtime="20210729 14:19:30.838"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:30.838" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:30.838" endtime="20210729 14:19:30.838"/>
</kw>
<msg timestamp="20210729 14:19:30.838" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:30.837" endtime="20210729 14:19:30.838"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:30.839" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:30.839" endtime="20210729 14:19:30.839"/>
</kw>
<status status="PASS" starttime="20210729 14:19:30.837" endtime="20210729 14:19:30.839"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:30.840" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:30.840" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:30.840" endtime="20210729 14:19:30.840"/>
</kw>
<status status="PASS" starttime="20210729 14:19:30.840" endtime="20210729 14:19:30.840"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:30.841" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:30.841" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:30.841" endtime="20210729 14:19:30.841"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:30.841" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:30.841" endtime="20210729 14:19:30.841"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:30.842" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:30.842" endtime="20210729 14:19:30.842"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:30.842" endtime="20210729 14:19:30.843"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:30.843" endtime="20210729 14:19:30.843"/>
</kw>
<status status="PASS" starttime="20210729 14:19:30.842" endtime="20210729 14:19:30.843"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:30.843" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:30.843" endtime="20210729 14:19:30.843"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:30.843" endtime="20210729 14:19:30.844"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:30.844" endtime="20210729 14:19:30.844"/>
</kw>
<status status="PASS" starttime="20210729 14:19:30.843" endtime="20210729 14:19:30.844"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:30.845" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:30.845" endtime="20210729 14:19:30.845"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:30.845" endtime="20210729 14:19:30.846"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:30.846" endtime="20210729 14:19:30.846"/>
</kw>
<status status="PASS" starttime="20210729 14:19:30.844" endtime="20210729 14:19:30.846"/>
</iter>
<status status="PASS" starttime="20210729 14:19:30.841" endtime="20210729 14:19:30.846"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:30.847" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:30.846" endtime="20210729 14:19:30.847"/>
</kw>
<status status="PASS" starttime="20210729 14:19:30.840" endtime="20210729 14:19:30.847"/>
</kw>
<status status="PASS" starttime="20210729 14:19:29.278" endtime="20210729 14:19:30.847"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=123456 8</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:30.848" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:30.848" endtime="20210729 14:19:30.848"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:30.848" level="INFO">${payload} = {'username': '123456 8'}</msg>
<status status="PASS" starttime="20210729 14:19:30.848" endtime="20210729 14:19:30.849"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:30.857" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:30.857" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:30.849" endtime="20210729 14:19:30.858"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:30.858" endtime="20210729 14:19:30.858"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:30.858" endtime="20210729 14:19:30.858"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:30.849" endtime="20210729 14:19:30.858"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:30.849" endtime="20210729 14:19:30.858"/>
</for>
<status status="FAIL" starttime="20210729 14:19:30.847" endtime="20210729 14:19:30.858"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:30.847" endtime="20210729 14:19:30.858"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=123456 8</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:30.859" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:30.859" endtime="20210729 14:19:30.859"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:30.860" level="INFO">${payload} = {'username': '123456 8'}</msg>
<status status="PASS" starttime="20210729 14:19:30.860" endtime="20210729 14:19:30.860"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:30.864" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:30.865" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:30.860" endtime="20210729 14:19:30.865"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:30.865" endtime="20210729 14:19:30.865"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:30.865" endtime="20210729 14:19:30.865"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:30.860" endtime="20210729 14:19:30.865"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:30.860" endtime="20210729 14:19:30.865"/>
</for>
<status status="FAIL" starttime="20210729 14:19:30.858" endtime="20210729 14:19:30.865"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:30.858" endtime="20210729 14:19:30.865"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=123456 8</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:30.866" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:30.866" endtime="20210729 14:19:30.866"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:30.867" level="INFO">${payload} = {'username': '123456 8'}</msg>
<status status="PASS" starttime="20210729 14:19:30.867" endtime="20210729 14:19:30.867"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:30.871" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:30.871" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:30.867" endtime="20210729 14:19:30.871"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:30.871" endtime="20210729 14:19:30.872"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:30.872" endtime="20210729 14:19:30.872"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:30.867" endtime="20210729 14:19:30.872"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:30.867" endtime="20210729 14:19:30.872"/>
</for>
<status status="FAIL" starttime="20210729 14:19:30.866" endtime="20210729 14:19:30.872"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:30.865" endtime="20210729 14:19:30.872"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:30.847" endtime="20210729 14:19:30.872"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:30.876" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:30.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:30.889" level="INFO">${pids} = 13039
13046
13057</msg>
<status status="PASS" starttime="20210729 14:19:30.873" endtime="20210729 14:19:30.889"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:30.890" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:30.889" endtime="20210729 14:19:30.890"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:30.891" level="INFO">${pids} = ['13039', '13046', '13057']</msg>
<status status="PASS" starttime="20210729 14:19:30.890" endtime="20210729 14:19:30.891"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13039</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:30.894" level="INFO">Running command 'kill 13039 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:30.891" endtime="20210729 14:19:30.894"/>
</kw>
<status status="PASS" starttime="20210729 14:19:30.891" endtime="20210729 14:19:30.895"/>
</iter>
<iter>
<var name="${pid}">13046</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:30.897" level="INFO">Running command 'kill 13046 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:30.895" endtime="20210729 14:19:30.898"/>
</kw>
<status status="PASS" starttime="20210729 14:19:30.895" endtime="20210729 14:19:30.898"/>
</iter>
<iter>
<var name="${pid}">13057</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:30.902" level="INFO">Running command 'kill 13057 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:30.898" endtime="20210729 14:19:30.902"/>
</kw>
<status status="PASS" starttime="20210729 14:19:30.898" endtime="20210729 14:19:30.903"/>
</iter>
<status status="PASS" starttime="20210729 14:19:30.891" endtime="20210729 14:19:30.903"/>
</for>
<status status="PASS" starttime="20210729 14:19:30.890" endtime="20210729 14:19:30.903"/>
</branch>
<status status="PASS" starttime="20210729 14:19:30.890" endtime="20210729 14:19:30.903"/>
</if>
<status status="PASS" starttime="20210729 14:19:30.872" endtime="20210729 14:19:30.903"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '123456 8'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:29.277" endtime="20210729 14:19:30.903">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t28" name="With Any Valid Token, Updating Username Of Each System User With 12345678 12345 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:30.914" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:30.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:30.922" level="INFO">${pids} = 13086</msg>
<status status="PASS" starttime="20210729 14:19:30.905" endtime="20210729 14:19:30.922"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:30.923" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:30.923" endtime="20210729 14:19:30.923"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:30.924" level="INFO">${pids} = ['13086']</msg>
<status status="PASS" starttime="20210729 14:19:30.924" endtime="20210729 14:19:30.924"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13086</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:30.928" level="INFO">Running command 'kill 13086 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:30.924" endtime="20210729 14:19:30.928"/>
</kw>
<status status="PASS" starttime="20210729 14:19:30.924" endtime="20210729 14:19:30.928"/>
</iter>
<status status="PASS" starttime="20210729 14:19:30.924" endtime="20210729 14:19:30.928"/>
</for>
<status status="PASS" starttime="20210729 14:19:30.924" endtime="20210729 14:19:30.928"/>
</branch>
<status status="PASS" starttime="20210729 14:19:30.924" endtime="20210729 14:19:30.928"/>
</if>
<status status="PASS" starttime="20210729 14:19:30.905" endtime="20210729 14:19:30.928"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:30.930" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:30.929" endtime="20210729 14:19:30.930"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:30.930" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:30.930" endtime="20210729 14:19:30.930"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:30.931" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:30.930" endtime="20210729 14:19:30.931"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:30.931" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:30.931" endtime="20210729 14:19:30.931"/>
</kw>
<msg timestamp="20210729 14:19:30.932" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:30.930" endtime="20210729 14:19:30.932"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:30.939" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:30.932" endtime="20210729 14:19:30.942"/>
</kw>
<status status="PASS" starttime="20210729 14:19:30.929" endtime="20210729 14:19:30.942"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:30.944" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:30.943" endtime="20210729 14:19:30.948"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:32.455" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:30.949" endtime="20210729 14:19:32.455"/>
</kw>
<status status="PASS" starttime="20210729 14:19:30.942" endtime="20210729 14:19:32.455"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:32.456" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:32.456" endtime="20210729 14:19:32.456"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:32.457" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:32.457" endtime="20210729 14:19:32.457"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:32.457" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:32.457" endtime="20210729 14:19:32.457"/>
</kw>
<msg timestamp="20210729 14:19:32.457" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:32.456" endtime="20210729 14:19:32.457"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:32.458" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:32.458" endtime="20210729 14:19:32.458"/>
</kw>
<status status="PASS" starttime="20210729 14:19:32.455" endtime="20210729 14:19:32.458"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:32.459" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:32.459" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:32.459" endtime="20210729 14:19:32.459"/>
</kw>
<status status="PASS" starttime="20210729 14:19:32.458" endtime="20210729 14:19:32.459"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:32.460" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:32.460" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:32.460" endtime="20210729 14:19:32.460"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:32.460" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:32.460" endtime="20210729 14:19:32.460"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:32.461" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:32.461" endtime="20210729 14:19:32.461"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:32.461" endtime="20210729 14:19:32.462"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:32.462" endtime="20210729 14:19:32.462"/>
</kw>
<status status="PASS" starttime="20210729 14:19:32.461" endtime="20210729 14:19:32.462"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:32.463" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:32.462" endtime="20210729 14:19:32.463"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:32.463" endtime="20210729 14:19:32.464"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:32.464" endtime="20210729 14:19:32.464"/>
</kw>
<status status="PASS" starttime="20210729 14:19:32.462" endtime="20210729 14:19:32.464"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:32.464" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:32.464" endtime="20210729 14:19:32.464"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:32.464" endtime="20210729 14:19:32.465"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:32.465" endtime="20210729 14:19:32.465"/>
</kw>
<status status="PASS" starttime="20210729 14:19:32.464" endtime="20210729 14:19:32.465"/>
</iter>
<status status="PASS" starttime="20210729 14:19:32.460" endtime="20210729 14:19:32.465"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:32.466" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:32.466" endtime="20210729 14:19:32.466"/>
</kw>
<status status="PASS" starttime="20210729 14:19:32.459" endtime="20210729 14:19:32.466"/>
</kw>
<status status="PASS" starttime="20210729 14:19:30.905" endtime="20210729 14:19:32.466"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=12345678 12345</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:32.468" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:32.467" endtime="20210729 14:19:32.468"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:32.468" level="INFO">${payload} = {'username': '12345678 12345'}</msg>
<status status="PASS" starttime="20210729 14:19:32.468" endtime="20210729 14:19:32.468"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:32.476" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:32.477" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:32.468" endtime="20210729 14:19:32.477"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:32.477" endtime="20210729 14:19:32.477"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:32.477" endtime="20210729 14:19:32.478"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:32.468" endtime="20210729 14:19:32.478"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:32.468" endtime="20210729 14:19:32.478"/>
</for>
<status status="FAIL" starttime="20210729 14:19:32.467" endtime="20210729 14:19:32.478"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:32.467" endtime="20210729 14:19:32.478"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=12345678 12345</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:32.480" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:32.480" endtime="20210729 14:19:32.480"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:32.481" level="INFO">${payload} = {'username': '12345678 12345'}</msg>
<status status="PASS" starttime="20210729 14:19:32.480" endtime="20210729 14:19:32.481"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:32.485" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:32.485" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:32.481" endtime="20210729 14:19:32.485"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:32.486" endtime="20210729 14:19:32.486"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:32.486" endtime="20210729 14:19:32.486"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:32.481" endtime="20210729 14:19:32.486"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:32.481" endtime="20210729 14:19:32.486"/>
</for>
<status status="FAIL" starttime="20210729 14:19:32.478" endtime="20210729 14:19:32.486"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:32.478" endtime="20210729 14:19:32.486"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=12345678 12345</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:32.487" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:32.487" endtime="20210729 14:19:32.487"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:32.488" level="INFO">${payload} = {'username': '12345678 12345'}</msg>
<status status="PASS" starttime="20210729 14:19:32.487" endtime="20210729 14:19:32.488"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:32.492" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:32.492" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:32.488" endtime="20210729 14:19:32.492"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:32.492" endtime="20210729 14:19:32.492"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:32.493" endtime="20210729 14:19:32.493"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:32.488" endtime="20210729 14:19:32.493"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:32.488" endtime="20210729 14:19:32.493"/>
</for>
<status status="FAIL" starttime="20210729 14:19:32.486" endtime="20210729 14:19:32.493"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:32.486" endtime="20210729 14:19:32.493"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:32.466" endtime="20210729 14:19:32.493"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:32.502" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:32.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:32.510" level="INFO">${pids} = 13109
13116
13121</msg>
<status status="PASS" starttime="20210729 14:19:32.494" endtime="20210729 14:19:32.510"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:32.511" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:32.510" endtime="20210729 14:19:32.511"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:32.512" level="INFO">${pids} = ['13109', '13116', '13121']</msg>
<status status="PASS" starttime="20210729 14:19:32.512" endtime="20210729 14:19:32.512"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13109</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:32.515" level="INFO">Running command 'kill 13109 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:32.512" endtime="20210729 14:19:32.516"/>
</kw>
<status status="PASS" starttime="20210729 14:19:32.512" endtime="20210729 14:19:32.516"/>
</iter>
<iter>
<var name="${pid}">13116</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:32.518" level="INFO">Running command 'kill 13116 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:32.516" endtime="20210729 14:19:32.519"/>
</kw>
<status status="PASS" starttime="20210729 14:19:32.516" endtime="20210729 14:19:32.519"/>
</iter>
<iter>
<var name="${pid}">13121</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:32.524" level="INFO">Running command 'kill 13121 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:32.519" endtime="20210729 14:19:32.525"/>
</kw>
<status status="PASS" starttime="20210729 14:19:32.519" endtime="20210729 14:19:32.525"/>
</iter>
<status status="PASS" starttime="20210729 14:19:32.512" endtime="20210729 14:19:32.525"/>
</for>
<status status="PASS" starttime="20210729 14:19:32.511" endtime="20210729 14:19:32.525"/>
</branch>
<status status="PASS" starttime="20210729 14:19:32.511" endtime="20210729 14:19:32.525"/>
</if>
<status status="PASS" starttime="20210729 14:19:32.494" endtime="20210729 14:19:32.525"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '12345678 12345'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:30.904" endtime="20210729 14:19:32.525">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t29" name="With Any Valid Token, Updating Username Of Each System User With abcd fg Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:32.531" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:32.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:32.540" level="INFO">${pids} = 13150</msg>
<status status="PASS" starttime="20210729 14:19:32.527" endtime="20210729 14:19:32.540"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:32.541" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:32.540" endtime="20210729 14:19:32.541"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:32.542" level="INFO">${pids} = ['13150']</msg>
<status status="PASS" starttime="20210729 14:19:32.541" endtime="20210729 14:19:32.542"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13150</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:32.545" level="INFO">Running command 'kill 13150 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:32.542" endtime="20210729 14:19:32.546"/>
</kw>
<status status="PASS" starttime="20210729 14:19:32.542" endtime="20210729 14:19:32.546"/>
</iter>
<status status="PASS" starttime="20210729 14:19:32.542" endtime="20210729 14:19:32.546"/>
</for>
<status status="PASS" starttime="20210729 14:19:32.541" endtime="20210729 14:19:32.546"/>
</branch>
<status status="PASS" starttime="20210729 14:19:32.541" endtime="20210729 14:19:32.546"/>
</if>
<status status="PASS" starttime="20210729 14:19:32.527" endtime="20210729 14:19:32.546"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:32.548" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:32.547" endtime="20210729 14:19:32.548"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:32.548" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:32.548" endtime="20210729 14:19:32.548"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:32.549" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:32.548" endtime="20210729 14:19:32.549"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:32.549" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:32.549" endtime="20210729 14:19:32.549"/>
</kw>
<msg timestamp="20210729 14:19:32.549" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:32.548" endtime="20210729 14:19:32.549"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:32.553" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:32.549" endtime="20210729 14:19:32.554"/>
</kw>
<status status="PASS" starttime="20210729 14:19:32.547" endtime="20210729 14:19:32.554"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:32.556" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:32.555" endtime="20210729 14:19:32.564"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:34.066" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:32.564" endtime="20210729 14:19:34.066"/>
</kw>
<status status="PASS" starttime="20210729 14:19:32.555" endtime="20210729 14:19:34.067"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:34.069" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:34.068" endtime="20210729 14:19:34.069"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:34.069" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:34.069" endtime="20210729 14:19:34.069"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:34.070" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:34.069" endtime="20210729 14:19:34.070"/>
</kw>
<msg timestamp="20210729 14:19:34.070" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:34.068" endtime="20210729 14:19:34.070"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:34.070" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:34.070" endtime="20210729 14:19:34.071"/>
</kw>
<status status="PASS" starttime="20210729 14:19:34.068" endtime="20210729 14:19:34.071"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:34.071" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:34.071" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:34.071" endtime="20210729 14:19:34.072"/>
</kw>
<status status="PASS" starttime="20210729 14:19:34.071" endtime="20210729 14:19:34.072"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:34.072" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:34.073" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:34.072" endtime="20210729 14:19:34.073"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:34.073" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:34.073" endtime="20210729 14:19:34.073"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:34.073" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:34.073" endtime="20210729 14:19:34.073"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:34.073" endtime="20210729 14:19:34.074"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:34.074" endtime="20210729 14:19:34.074"/>
</kw>
<status status="PASS" starttime="20210729 14:19:34.073" endtime="20210729 14:19:34.074"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:34.075" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:34.075" endtime="20210729 14:19:34.075"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:34.075" endtime="20210729 14:19:34.075"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:34.076" endtime="20210729 14:19:34.076"/>
</kw>
<status status="PASS" starttime="20210729 14:19:34.074" endtime="20210729 14:19:34.076"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:34.076" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:34.076" endtime="20210729 14:19:34.076"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:34.076" endtime="20210729 14:19:34.077"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:34.077" endtime="20210729 14:19:34.077"/>
</kw>
<status status="PASS" starttime="20210729 14:19:34.076" endtime="20210729 14:19:34.077"/>
</iter>
<status status="PASS" starttime="20210729 14:19:34.073" endtime="20210729 14:19:34.077"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:34.078" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:34.077" endtime="20210729 14:19:34.078"/>
</kw>
<status status="PASS" starttime="20210729 14:19:34.072" endtime="20210729 14:19:34.078"/>
</kw>
<status status="PASS" starttime="20210729 14:19:32.527" endtime="20210729 14:19:34.078"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcd fg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:34.080" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:34.079" endtime="20210729 14:19:34.080"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:34.080" level="INFO">${payload} = {'username': 'abcd fg'}</msg>
<status status="PASS" starttime="20210729 14:19:34.080" endtime="20210729 14:19:34.080"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:34.089" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:34.089" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:34.080" endtime="20210729 14:19:34.090"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:34.090" endtime="20210729 14:19:34.090"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:34.090" endtime="20210729 14:19:34.090"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:34.080" endtime="20210729 14:19:34.090"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:34.080" endtime="20210729 14:19:34.090"/>
</for>
<status status="FAIL" starttime="20210729 14:19:34.078" endtime="20210729 14:19:34.090"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:34.078" endtime="20210729 14:19:34.090"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcd fg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:34.091" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:34.091" endtime="20210729 14:19:34.091"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:34.092" level="INFO">${payload} = {'username': 'abcd fg'}</msg>
<status status="PASS" starttime="20210729 14:19:34.092" endtime="20210729 14:19:34.092"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:34.096" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:34.096" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:34.092" endtime="20210729 14:19:34.096"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:34.096" endtime="20210729 14:19:34.096"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:34.097" endtime="20210729 14:19:34.097"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:34.092" endtime="20210729 14:19:34.097"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:34.092" endtime="20210729 14:19:34.097"/>
</for>
<status status="FAIL" starttime="20210729 14:19:34.090" endtime="20210729 14:19:34.097"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:34.090" endtime="20210729 14:19:34.097"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcd fg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:34.098" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:34.098" endtime="20210729 14:19:34.098"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:34.098" level="INFO">${payload} = {'username': 'abcd fg'}</msg>
<status status="PASS" starttime="20210729 14:19:34.098" endtime="20210729 14:19:34.098"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:34.103" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:34.103" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:34.099" endtime="20210729 14:19:34.103"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:34.104" endtime="20210729 14:19:34.104"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:34.104" endtime="20210729 14:19:34.104"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:34.099" endtime="20210729 14:19:34.104"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:34.098" endtime="20210729 14:19:34.104"/>
</for>
<status status="FAIL" starttime="20210729 14:19:34.097" endtime="20210729 14:19:34.104"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:34.097" endtime="20210729 14:19:34.104"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:34.078" endtime="20210729 14:19:34.104"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:34.108" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:34.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:34.117" level="INFO">${pids} = 13173
13180
13184</msg>
<status status="PASS" starttime="20210729 14:19:34.105" endtime="20210729 14:19:34.117"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:34.118" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:34.118" endtime="20210729 14:19:34.118"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:34.119" level="INFO">${pids} = ['13173', '13180', '13184']</msg>
<status status="PASS" starttime="20210729 14:19:34.119" endtime="20210729 14:19:34.119"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13173</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:34.123" level="INFO">Running command 'kill 13173 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:34.120" endtime="20210729 14:19:34.123"/>
</kw>
<status status="PASS" starttime="20210729 14:19:34.119" endtime="20210729 14:19:34.123"/>
</iter>
<iter>
<var name="${pid}">13180</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:34.126" level="INFO">Running command 'kill 13180 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:34.124" endtime="20210729 14:19:34.128"/>
</kw>
<status status="PASS" starttime="20210729 14:19:34.124" endtime="20210729 14:19:34.128"/>
</iter>
<iter>
<var name="${pid}">13184</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:34.132" level="INFO">Running command 'kill 13184 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:34.129" endtime="20210729 14:19:34.133"/>
</kw>
<status status="PASS" starttime="20210729 14:19:34.129" endtime="20210729 14:19:34.133"/>
</iter>
<status status="PASS" starttime="20210729 14:19:34.119" endtime="20210729 14:19:34.133"/>
</for>
<status status="PASS" starttime="20210729 14:19:34.119" endtime="20210729 14:19:34.133"/>
</branch>
<status status="PASS" starttime="20210729 14:19:34.118" endtime="20210729 14:19:34.133"/>
</if>
<status status="PASS" starttime="20210729 14:19:34.104" endtime="20210729 14:19:34.133"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": 'abcd fg'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:32.526" endtime="20210729 14:19:34.133">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t30" name="With Any Valid Token, Updating Username Of Each System User With ab defgh Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:34.139" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:34.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:34.150" level="INFO">${pids} = 13213</msg>
<status status="PASS" starttime="20210729 14:19:34.135" endtime="20210729 14:19:34.150"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:34.151" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:34.150" endtime="20210729 14:19:34.151"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:34.152" level="INFO">${pids} = ['13213']</msg>
<status status="PASS" starttime="20210729 14:19:34.151" endtime="20210729 14:19:34.152"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13213</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:34.163" level="INFO">Running command 'kill 13213 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:34.152" endtime="20210729 14:19:34.164"/>
</kw>
<status status="PASS" starttime="20210729 14:19:34.152" endtime="20210729 14:19:34.164"/>
</iter>
<status status="PASS" starttime="20210729 14:19:34.152" endtime="20210729 14:19:34.164"/>
</for>
<status status="PASS" starttime="20210729 14:19:34.151" endtime="20210729 14:19:34.164"/>
</branch>
<status status="PASS" starttime="20210729 14:19:34.151" endtime="20210729 14:19:34.164"/>
</if>
<status status="PASS" starttime="20210729 14:19:34.135" endtime="20210729 14:19:34.164"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:34.166" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:34.165" endtime="20210729 14:19:34.166"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:34.167" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:34.166" endtime="20210729 14:19:34.167"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:34.167" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:34.167" endtime="20210729 14:19:34.167"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:34.168" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:34.167" endtime="20210729 14:19:34.168"/>
</kw>
<msg timestamp="20210729 14:19:34.168" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:34.166" endtime="20210729 14:19:34.168"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:34.171" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:34.168" endtime="20210729 14:19:34.172"/>
</kw>
<status status="PASS" starttime="20210729 14:19:34.165" endtime="20210729 14:19:34.173"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:34.174" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:34.173" endtime="20210729 14:19:34.177"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:35.688" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:34.178" endtime="20210729 14:19:35.688"/>
</kw>
<status status="PASS" starttime="20210729 14:19:34.173" endtime="20210729 14:19:35.688"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:35.689" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:35.689" endtime="20210729 14:19:35.689"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:35.690" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:35.689" endtime="20210729 14:19:35.690"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:35.690" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:35.690" endtime="20210729 14:19:35.690"/>
</kw>
<msg timestamp="20210729 14:19:35.690" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:35.689" endtime="20210729 14:19:35.690"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:35.691" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:35.690" endtime="20210729 14:19:35.691"/>
</kw>
<status status="PASS" starttime="20210729 14:19:35.688" endtime="20210729 14:19:35.691"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:35.692" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:35.692" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:35.692" endtime="20210729 14:19:35.692"/>
</kw>
<status status="PASS" starttime="20210729 14:19:35.691" endtime="20210729 14:19:35.692"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:35.693" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:35.693" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:35.692" endtime="20210729 14:19:35.693"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:35.693" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:35.693" endtime="20210729 14:19:35.693"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:35.694" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:35.693" endtime="20210729 14:19:35.694"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:35.694" endtime="20210729 14:19:35.695"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:35.695" endtime="20210729 14:19:35.695"/>
</kw>
<status status="PASS" starttime="20210729 14:19:35.693" endtime="20210729 14:19:35.695"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:35.696" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:35.695" endtime="20210729 14:19:35.696"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:35.696" endtime="20210729 14:19:35.696"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:35.696" endtime="20210729 14:19:35.697"/>
</kw>
<status status="PASS" starttime="20210729 14:19:35.695" endtime="20210729 14:19:35.697"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:35.697" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:35.697" endtime="20210729 14:19:35.697"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:35.697" endtime="20210729 14:19:35.698"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:35.698" endtime="20210729 14:19:35.698"/>
</kw>
<status status="PASS" starttime="20210729 14:19:35.697" endtime="20210729 14:19:35.698"/>
</iter>
<status status="PASS" starttime="20210729 14:19:35.693" endtime="20210729 14:19:35.698"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:35.699" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:35.698" endtime="20210729 14:19:35.699"/>
</kw>
<status status="PASS" starttime="20210729 14:19:35.692" endtime="20210729 14:19:35.699"/>
</kw>
<status status="PASS" starttime="20210729 14:19:34.134" endtime="20210729 14:19:35.699"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=ab defgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:35.700" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:35.700" endtime="20210729 14:19:35.700"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:35.701" level="INFO">${payload} = {'username': 'ab defgh'}</msg>
<status status="PASS" starttime="20210729 14:19:35.701" endtime="20210729 14:19:35.701"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:35.710" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:35.710" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:35.701" endtime="20210729 14:19:35.710"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:35.710" endtime="20210729 14:19:35.710"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:35.710" endtime="20210729 14:19:35.710"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:35.701" endtime="20210729 14:19:35.711"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:35.701" endtime="20210729 14:19:35.711"/>
</for>
<status status="FAIL" starttime="20210729 14:19:35.700" endtime="20210729 14:19:35.711"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:35.699" endtime="20210729 14:19:35.711"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=ab defgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:35.712" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:35.712" endtime="20210729 14:19:35.712"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:35.713" level="INFO">${payload} = {'username': 'ab defgh'}</msg>
<status status="PASS" starttime="20210729 14:19:35.712" endtime="20210729 14:19:35.713"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:35.717" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:35.717" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:35.713" endtime="20210729 14:19:35.717"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:35.718" endtime="20210729 14:19:35.718"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:35.718" endtime="20210729 14:19:35.718"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:35.713" endtime="20210729 14:19:35.718"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:35.713" endtime="20210729 14:19:35.718"/>
</for>
<status status="FAIL" starttime="20210729 14:19:35.711" endtime="20210729 14:19:35.718"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:35.711" endtime="20210729 14:19:35.718"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=ab defgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:35.719" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:35.719" endtime="20210729 14:19:35.719"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:35.720" level="INFO">${payload} = {'username': 'ab defgh'}</msg>
<status status="PASS" starttime="20210729 14:19:35.719" endtime="20210729 14:19:35.720"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:35.724" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:35.724" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:35.720" endtime="20210729 14:19:35.724"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:35.724" endtime="20210729 14:19:35.724"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:35.724" endtime="20210729 14:19:35.724"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:35.720" endtime="20210729 14:19:35.724"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:35.720" endtime="20210729 14:19:35.725"/>
</for>
<status status="FAIL" starttime="20210729 14:19:35.718" endtime="20210729 14:19:35.725"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:35.718" endtime="20210729 14:19:35.725"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:35.699" endtime="20210729 14:19:35.725"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:35.729" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:35.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:35.738" level="INFO">${pids} = 13236
13243
13254</msg>
<status status="PASS" starttime="20210729 14:19:35.726" endtime="20210729 14:19:35.738"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:35.739" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:35.739" endtime="20210729 14:19:35.739"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:35.740" level="INFO">${pids} = ['13236', '13243', '13254']</msg>
<status status="PASS" starttime="20210729 14:19:35.740" endtime="20210729 14:19:35.740"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13236</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:35.743" level="INFO">Running command 'kill 13236 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:35.740" endtime="20210729 14:19:35.744"/>
</kw>
<status status="PASS" starttime="20210729 14:19:35.740" endtime="20210729 14:19:35.744"/>
</iter>
<iter>
<var name="${pid}">13243</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:35.748" level="INFO">Running command 'kill 13243 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:35.744" endtime="20210729 14:19:35.748"/>
</kw>
<status status="PASS" starttime="20210729 14:19:35.744" endtime="20210729 14:19:35.748"/>
</iter>
<iter>
<var name="${pid}">13254</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:35.752" level="INFO">Running command 'kill 13254 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:35.749" endtime="20210729 14:19:35.752"/>
</kw>
<status status="PASS" starttime="20210729 14:19:35.748" endtime="20210729 14:19:35.752"/>
</iter>
<status status="PASS" starttime="20210729 14:19:35.740" endtime="20210729 14:19:35.752"/>
</for>
<status status="PASS" starttime="20210729 14:19:35.739" endtime="20210729 14:19:35.752"/>
</branch>
<status status="PASS" starttime="20210729 14:19:35.739" endtime="20210729 14:19:35.752"/>
</if>
<status status="PASS" starttime="20210729 14:19:35.725" endtime="20210729 14:19:35.752"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": 'ab defgh'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:34.134" endtime="20210729 14:19:35.753">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t31" name="With Any Valid Token, Updating Username Of Each System User With abcdefghijklmnp stop Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:35.764" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:35.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:35.772" level="INFO">${pids} = 13283</msg>
<status status="PASS" starttime="20210729 14:19:35.754" endtime="20210729 14:19:35.772"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:35.773" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:35.772" endtime="20210729 14:19:35.773"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:35.774" level="INFO">${pids} = ['13283']</msg>
<status status="PASS" starttime="20210729 14:19:35.773" endtime="20210729 14:19:35.774"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13283</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:35.785" level="INFO">Running command 'kill 13283 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:35.774" endtime="20210729 14:19:35.785"/>
</kw>
<status status="PASS" starttime="20210729 14:19:35.774" endtime="20210729 14:19:35.785"/>
</iter>
<status status="PASS" starttime="20210729 14:19:35.774" endtime="20210729 14:19:35.785"/>
</for>
<status status="PASS" starttime="20210729 14:19:35.773" endtime="20210729 14:19:35.785"/>
</branch>
<status status="PASS" starttime="20210729 14:19:35.773" endtime="20210729 14:19:35.785"/>
</if>
<status status="PASS" starttime="20210729 14:19:35.754" endtime="20210729 14:19:35.786"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:35.787" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:35.787" endtime="20210729 14:19:35.787"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:35.788" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:35.787" endtime="20210729 14:19:35.788"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:35.788" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:35.788" endtime="20210729 14:19:35.788"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:35.788" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:35.788" endtime="20210729 14:19:35.788"/>
</kw>
<msg timestamp="20210729 14:19:35.789" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:35.787" endtime="20210729 14:19:35.789"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:35.792" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:35.789" endtime="20210729 14:19:35.793"/>
</kw>
<status status="PASS" starttime="20210729 14:19:35.786" endtime="20210729 14:19:35.794"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:35.795" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:35.794" endtime="20210729 14:19:35.800"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:37.301" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:35.800" endtime="20210729 14:19:37.301"/>
</kw>
<status status="PASS" starttime="20210729 14:19:35.794" endtime="20210729 14:19:37.301"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:37.302" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:37.302" endtime="20210729 14:19:37.302"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:37.303" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:37.303" endtime="20210729 14:19:37.303"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:37.303" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:37.303" endtime="20210729 14:19:37.303"/>
</kw>
<msg timestamp="20210729 14:19:37.303" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:37.302" endtime="20210729 14:19:37.304"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:37.304" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:37.304" endtime="20210729 14:19:37.304"/>
</kw>
<status status="PASS" starttime="20210729 14:19:37.302" endtime="20210729 14:19:37.304"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:37.305" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:37.305" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:37.305" endtime="20210729 14:19:37.305"/>
</kw>
<status status="PASS" starttime="20210729 14:19:37.304" endtime="20210729 14:19:37.305"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:37.306" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:37.306" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:37.305" endtime="20210729 14:19:37.306"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:37.306" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:37.306" endtime="20210729 14:19:37.306"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:37.307" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:37.307" endtime="20210729 14:19:37.307"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:37.307" endtime="20210729 14:19:37.308"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:37.308" endtime="20210729 14:19:37.308"/>
</kw>
<status status="PASS" starttime="20210729 14:19:37.307" endtime="20210729 14:19:37.308"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:37.308" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:37.308" endtime="20210729 14:19:37.308"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:37.308" endtime="20210729 14:19:37.309"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:37.309" endtime="20210729 14:19:37.309"/>
</kw>
<status status="PASS" starttime="20210729 14:19:37.308" endtime="20210729 14:19:37.309"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:37.310" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:37.309" endtime="20210729 14:19:37.310"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:37.310" endtime="20210729 14:19:37.310"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:37.310" endtime="20210729 14:19:37.311"/>
</kw>
<status status="PASS" starttime="20210729 14:19:37.309" endtime="20210729 14:19:37.311"/>
</iter>
<status status="PASS" starttime="20210729 14:19:37.306" endtime="20210729 14:19:37.311"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:37.311" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:37.311" endtime="20210729 14:19:37.311"/>
</kw>
<status status="PASS" starttime="20210729 14:19:37.305" endtime="20210729 14:19:37.311"/>
</kw>
<status status="PASS" starttime="20210729 14:19:35.754" endtime="20210729 14:19:37.311"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcdefghijklmnp stop</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:37.313" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:37.312" endtime="20210729 14:19:37.313"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:37.313" level="INFO">${payload} = {'username': 'abcdefghijklmnp stop'}</msg>
<status status="PASS" starttime="20210729 14:19:37.313" endtime="20210729 14:19:37.313"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:37.322" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:37.322" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:37.314" endtime="20210729 14:19:37.322"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:37.323" endtime="20210729 14:19:37.323"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:37.323" endtime="20210729 14:19:37.323"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:37.313" endtime="20210729 14:19:37.323"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:37.313" endtime="20210729 14:19:37.323"/>
</for>
<status status="FAIL" starttime="20210729 14:19:37.312" endtime="20210729 14:19:37.323"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:37.312" endtime="20210729 14:19:37.323"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcdefghijklmnp stop</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:37.324" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:37.324" endtime="20210729 14:19:37.324"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:37.325" level="INFO">${payload} = {'username': 'abcdefghijklmnp stop'}</msg>
<status status="PASS" starttime="20210729 14:19:37.324" endtime="20210729 14:19:37.325"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:37.329" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:37.329" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:37.325" endtime="20210729 14:19:37.329"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:37.330" endtime="20210729 14:19:37.330"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:37.330" endtime="20210729 14:19:37.330"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:37.325" endtime="20210729 14:19:37.330"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:37.325" endtime="20210729 14:19:37.330"/>
</for>
<status status="FAIL" starttime="20210729 14:19:37.323" endtime="20210729 14:19:37.330"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:37.323" endtime="20210729 14:19:37.330"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=abcdefghijklmnp stop</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:37.331" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:37.331" endtime="20210729 14:19:37.331"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:37.332" level="INFO">${payload} = {'username': 'abcdefghijklmnp stop'}</msg>
<status status="PASS" starttime="20210729 14:19:37.331" endtime="20210729 14:19:37.332"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:37.336" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:37.336" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:37.332" endtime="20210729 14:19:37.336"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:37.336" endtime="20210729 14:19:37.336"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:37.336" endtime="20210729 14:19:37.336"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:37.332" endtime="20210729 14:19:37.336"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:37.332" endtime="20210729 14:19:37.337"/>
</for>
<status status="FAIL" starttime="20210729 14:19:37.330" endtime="20210729 14:19:37.337"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:37.330" endtime="20210729 14:19:37.337"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:37.312" endtime="20210729 14:19:37.337"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:37.341" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:37.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:37.351" level="INFO">${pids} = 13306
13313
13318</msg>
<status status="PASS" starttime="20210729 14:19:37.338" endtime="20210729 14:19:37.351"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:37.352" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:37.351" endtime="20210729 14:19:37.352"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:37.353" level="INFO">${pids} = ['13306', '13313', '13318']</msg>
<status status="PASS" starttime="20210729 14:19:37.352" endtime="20210729 14:19:37.353"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13306</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:37.359" level="INFO">Running command 'kill 13306 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:37.353" endtime="20210729 14:19:37.359"/>
</kw>
<status status="PASS" starttime="20210729 14:19:37.353" endtime="20210729 14:19:37.359"/>
</iter>
<iter>
<var name="${pid}">13313</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:37.365" level="INFO">Running command 'kill 13313 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:37.360" endtime="20210729 14:19:37.365"/>
</kw>
<status status="PASS" starttime="20210729 14:19:37.359" endtime="20210729 14:19:37.365"/>
</iter>
<iter>
<var name="${pid}">13318</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:37.370" level="INFO">Running command 'kill 13318 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:37.366" endtime="20210729 14:19:37.371"/>
</kw>
<status status="PASS" starttime="20210729 14:19:37.366" endtime="20210729 14:19:37.371"/>
</iter>
<status status="PASS" starttime="20210729 14:19:37.353" endtime="20210729 14:19:37.371"/>
</for>
<status status="PASS" starttime="20210729 14:19:37.352" endtime="20210729 14:19:37.371"/>
</branch>
<status status="PASS" starttime="20210729 14:19:37.352" endtime="20210729 14:19:37.371"/>
</if>
<status status="PASS" starttime="20210729 14:19:37.337" endtime="20210729 14:19:37.371"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": 'abcdefghijklmnp stop'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:35.753" endtime="20210729 14:19:37.371">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t32" name="With Any Valid Token, Updating Username Of Each System User With haka 12 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:37.376" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:37.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:37.385" level="INFO">${pids} = 13347</msg>
<status status="PASS" starttime="20210729 14:19:37.373" endtime="20210729 14:19:37.385"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:37.386" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:37.385" endtime="20210729 14:19:37.386"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:37.386" level="INFO">${pids} = ['13347']</msg>
<status status="PASS" starttime="20210729 14:19:37.386" endtime="20210729 14:19:37.386"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13347</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:37.391" level="INFO">Running command 'kill 13347 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:37.387" endtime="20210729 14:19:37.392"/>
</kw>
<status status="PASS" starttime="20210729 14:19:37.386" endtime="20210729 14:19:37.392"/>
</iter>
<status status="PASS" starttime="20210729 14:19:37.386" endtime="20210729 14:19:37.392"/>
</for>
<status status="PASS" starttime="20210729 14:19:37.386" endtime="20210729 14:19:37.392"/>
</branch>
<status status="PASS" starttime="20210729 14:19:37.386" endtime="20210729 14:19:37.392"/>
</if>
<status status="PASS" starttime="20210729 14:19:37.373" endtime="20210729 14:19:37.392"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:37.393" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:37.393" endtime="20210729 14:19:37.393"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:37.394" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:37.394" endtime="20210729 14:19:37.394"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:37.394" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:37.394" endtime="20210729 14:19:37.394"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:37.395" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:37.394" endtime="20210729 14:19:37.395"/>
</kw>
<msg timestamp="20210729 14:19:37.395" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:37.393" endtime="20210729 14:19:37.395"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:37.398" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:37.395" endtime="20210729 14:19:37.401"/>
</kw>
<status status="PASS" starttime="20210729 14:19:37.392" endtime="20210729 14:19:37.401"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:37.403" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:37.402" endtime="20210729 14:19:37.407"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:38.910" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:37.408" endtime="20210729 14:19:38.911"/>
</kw>
<status status="PASS" starttime="20210729 14:19:37.401" endtime="20210729 14:19:38.911"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:38.913" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:38.912" endtime="20210729 14:19:38.913"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:38.913" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:38.913" endtime="20210729 14:19:38.913"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:38.913" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:38.913" endtime="20210729 14:19:38.914"/>
</kw>
<msg timestamp="20210729 14:19:38.914" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:38.912" endtime="20210729 14:19:38.914"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:38.914" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:38.914" endtime="20210729 14:19:38.914"/>
</kw>
<status status="PASS" starttime="20210729 14:19:38.912" endtime="20210729 14:19:38.915"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:38.915" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:38.915" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:38.915" endtime="20210729 14:19:38.915"/>
</kw>
<status status="PASS" starttime="20210729 14:19:38.915" endtime="20210729 14:19:38.915"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:38.916" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:38.916" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:38.916" endtime="20210729 14:19:38.916"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:38.916" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:38.916" endtime="20210729 14:19:38.916"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:38.917" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:38.917" endtime="20210729 14:19:38.917"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:38.917" endtime="20210729 14:19:38.918"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:38.918" endtime="20210729 14:19:38.918"/>
</kw>
<status status="PASS" starttime="20210729 14:19:38.917" endtime="20210729 14:19:38.918"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:38.918" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:38.918" endtime="20210729 14:19:38.918"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:38.918" endtime="20210729 14:19:38.919"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:38.919" endtime="20210729 14:19:38.919"/>
</kw>
<status status="PASS" starttime="20210729 14:19:38.918" endtime="20210729 14:19:38.919"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:38.920" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:38.920" endtime="20210729 14:19:38.920"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:38.920" endtime="20210729 14:19:38.921"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:38.921" endtime="20210729 14:19:38.921"/>
</kw>
<status status="PASS" starttime="20210729 14:19:38.920" endtime="20210729 14:19:38.921"/>
</iter>
<status status="PASS" starttime="20210729 14:19:38.917" endtime="20210729 14:19:38.921"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:38.921" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:38.921" endtime="20210729 14:19:38.921"/>
</kw>
<status status="PASS" starttime="20210729 14:19:38.915" endtime="20210729 14:19:38.922"/>
</kw>
<status status="PASS" starttime="20210729 14:19:37.372" endtime="20210729 14:19:38.922"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=haka 12</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:38.923" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:38.923" endtime="20210729 14:19:38.923"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:38.923" level="INFO">${payload} = {'username': 'haka 12'}</msg>
<status status="PASS" starttime="20210729 14:19:38.923" endtime="20210729 14:19:38.923"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:38.933" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:38.933" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:38.924" endtime="20210729 14:19:38.933"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:38.934" endtime="20210729 14:19:38.934"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:38.934" endtime="20210729 14:19:38.934"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:38.924" endtime="20210729 14:19:38.934"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:38.923" endtime="20210729 14:19:38.934"/>
</for>
<status status="FAIL" starttime="20210729 14:19:38.922" endtime="20210729 14:19:38.934"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:38.922" endtime="20210729 14:19:38.934"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=haka 12</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:38.935" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:38.935" endtime="20210729 14:19:38.935"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:38.936" level="INFO">${payload} = {'username': 'haka 12'}</msg>
<status status="PASS" starttime="20210729 14:19:38.935" endtime="20210729 14:19:38.936"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:38.940" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:38.940" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:38.936" endtime="20210729 14:19:38.940"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:38.940" endtime="20210729 14:19:38.940"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:38.940" endtime="20210729 14:19:38.940"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:38.936" endtime="20210729 14:19:38.940"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:38.936" endtime="20210729 14:19:38.940"/>
</for>
<status status="FAIL" starttime="20210729 14:19:38.934" endtime="20210729 14:19:38.940"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:38.934" endtime="20210729 14:19:38.941"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=haka 12</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:38.941" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:38.941" endtime="20210729 14:19:38.942"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:38.942" level="INFO">${payload} = {'username': 'haka 12'}</msg>
<status status="PASS" starttime="20210729 14:19:38.942" endtime="20210729 14:19:38.942"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:38.946" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:38.946" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:38.942" endtime="20210729 14:19:38.946"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:38.946" endtime="20210729 14:19:38.946"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:38.946" endtime="20210729 14:19:38.947"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:38.942" endtime="20210729 14:19:38.947"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:38.942" endtime="20210729 14:19:38.947"/>
</for>
<status status="FAIL" starttime="20210729 14:19:38.941" endtime="20210729 14:19:38.947"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:38.941" endtime="20210729 14:19:38.947"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:38.922" endtime="20210729 14:19:38.947"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:38.952" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:38.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:38.963" level="INFO">${pids} = 13370
13377
13381</msg>
<status status="PASS" starttime="20210729 14:19:38.949" endtime="20210729 14:19:38.963"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:38.964" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:38.963" endtime="20210729 14:19:38.964"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:38.964" level="INFO">${pids} = ['13370', '13377', '13381']</msg>
<status status="PASS" starttime="20210729 14:19:38.964" endtime="20210729 14:19:38.964"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13370</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:38.968" level="INFO">Running command 'kill 13370 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:38.965" endtime="20210729 14:19:38.968"/>
</kw>
<status status="PASS" starttime="20210729 14:19:38.965" endtime="20210729 14:19:38.968"/>
</iter>
<iter>
<var name="${pid}">13377</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:38.971" level="INFO">Running command 'kill 13377 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:38.968" endtime="20210729 14:19:38.973"/>
</kw>
<status status="PASS" starttime="20210729 14:19:38.968" endtime="20210729 14:19:38.973"/>
</iter>
<iter>
<var name="${pid}">13381</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:38.976" level="INFO">Running command 'kill 13381 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:38.973" endtime="20210729 14:19:38.976"/>
</kw>
<status status="PASS" starttime="20210729 14:19:38.973" endtime="20210729 14:19:38.976"/>
</iter>
<status status="PASS" starttime="20210729 14:19:38.964" endtime="20210729 14:19:38.976"/>
</for>
<status status="PASS" starttime="20210729 14:19:38.964" endtime="20210729 14:19:38.976"/>
</branch>
<status status="PASS" starttime="20210729 14:19:38.964" endtime="20210729 14:19:38.976"/>
</if>
<status status="PASS" starttime="20210729 14:19:38.948" endtime="20210729 14:19:38.977"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": 'haka 12'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:37.372" endtime="20210729 14:19:38.977">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t33" name="With Any Valid Token, Updating Username Of Each System User With haka 123 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:38.986" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:38.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:38.994" level="INFO">${pids} = 13410</msg>
<status status="PASS" starttime="20210729 14:19:38.979" endtime="20210729 14:19:38.994"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:38.995" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:38.994" endtime="20210729 14:19:38.995"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:38.996" level="INFO">${pids} = ['13410']</msg>
<status status="PASS" starttime="20210729 14:19:38.995" endtime="20210729 14:19:38.996"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13410</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:39.002" level="INFO">Running command 'kill 13410 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:38.996" endtime="20210729 14:19:39.003"/>
</kw>
<status status="PASS" starttime="20210729 14:19:38.996" endtime="20210729 14:19:39.003"/>
</iter>
<status status="PASS" starttime="20210729 14:19:38.996" endtime="20210729 14:19:39.003"/>
</for>
<status status="PASS" starttime="20210729 14:19:38.995" endtime="20210729 14:19:39.003"/>
</branch>
<status status="PASS" starttime="20210729 14:19:38.995" endtime="20210729 14:19:39.003"/>
</if>
<status status="PASS" starttime="20210729 14:19:38.978" endtime="20210729 14:19:39.003"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:39.005" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:39.004" endtime="20210729 14:19:39.005"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:39.005" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:39.005" endtime="20210729 14:19:39.005"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:39.006" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:39.006" endtime="20210729 14:19:39.006"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:39.006" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:39.006" endtime="20210729 14:19:39.006"/>
</kw>
<msg timestamp="20210729 14:19:39.007" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:39.005" endtime="20210729 14:19:39.007"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:39.016" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:39.007" endtime="20210729 14:19:39.018"/>
</kw>
<status status="PASS" starttime="20210729 14:19:39.004" endtime="20210729 14:19:39.019"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:39.021" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:39.020" endtime="20210729 14:19:39.024"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:40.528" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:39.025" endtime="20210729 14:19:40.528"/>
</kw>
<status status="PASS" starttime="20210729 14:19:39.019" endtime="20210729 14:19:40.529"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:40.530" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:40.530" endtime="20210729 14:19:40.530"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:40.530" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:40.530" endtime="20210729 14:19:40.530"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:40.531" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:40.531" endtime="20210729 14:19:40.531"/>
</kw>
<msg timestamp="20210729 14:19:40.531" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:40.529" endtime="20210729 14:19:40.531"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:40.532" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:40.531" endtime="20210729 14:19:40.532"/>
</kw>
<status status="PASS" starttime="20210729 14:19:40.529" endtime="20210729 14:19:40.532"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:40.533" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:40.533" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:40.533" endtime="20210729 14:19:40.534"/>
</kw>
<status status="PASS" starttime="20210729 14:19:40.533" endtime="20210729 14:19:40.534"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:40.535" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:40.535" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:40.534" endtime="20210729 14:19:40.535"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:40.535" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:40.535" endtime="20210729 14:19:40.535"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:40.536" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:40.535" endtime="20210729 14:19:40.536"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:40.536" endtime="20210729 14:19:40.536"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:40.537" endtime="20210729 14:19:40.537"/>
</kw>
<status status="PASS" starttime="20210729 14:19:40.535" endtime="20210729 14:19:40.537"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:40.537" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:40.537" endtime="20210729 14:19:40.537"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:40.537" endtime="20210729 14:19:40.538"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:40.538" endtime="20210729 14:19:40.538"/>
</kw>
<status status="PASS" starttime="20210729 14:19:40.537" endtime="20210729 14:19:40.538"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:40.539" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:40.538" endtime="20210729 14:19:40.539"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:40.539" endtime="20210729 14:19:40.539"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:40.539" endtime="20210729 14:19:40.540"/>
</kw>
<status status="PASS" starttime="20210729 14:19:40.538" endtime="20210729 14:19:40.540"/>
</iter>
<status status="PASS" starttime="20210729 14:19:40.535" endtime="20210729 14:19:40.540"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:40.540" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:40.540" endtime="20210729 14:19:40.540"/>
</kw>
<status status="PASS" starttime="20210729 14:19:40.534" endtime="20210729 14:19:40.540"/>
</kw>
<status status="PASS" starttime="20210729 14:19:38.978" endtime="20210729 14:19:40.540"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=haka 123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:40.542" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:40.541" endtime="20210729 14:19:40.542"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:40.542" level="INFO">${payload} = {'username': 'haka 123'}</msg>
<status status="PASS" starttime="20210729 14:19:40.542" endtime="20210729 14:19:40.542"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:40.552" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:40.552" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:40.542" endtime="20210729 14:19:40.552"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:40.552" endtime="20210729 14:19:40.552"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:40.552" endtime="20210729 14:19:40.552"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:40.542" endtime="20210729 14:19:40.553"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:40.542" endtime="20210729 14:19:40.553"/>
</for>
<status status="FAIL" starttime="20210729 14:19:40.541" endtime="20210729 14:19:40.553"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:40.541" endtime="20210729 14:19:40.553"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=haka 123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:40.554" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:40.553" endtime="20210729 14:19:40.554"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:40.554" level="INFO">${payload} = {'username': 'haka 123'}</msg>
<status status="PASS" starttime="20210729 14:19:40.554" endtime="20210729 14:19:40.554"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:40.558" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:40.559" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:40.555" endtime="20210729 14:19:40.559"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:40.559" endtime="20210729 14:19:40.559"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:40.559" endtime="20210729 14:19:40.559"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:40.554" endtime="20210729 14:19:40.559"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:40.554" endtime="20210729 14:19:40.559"/>
</for>
<status status="FAIL" starttime="20210729 14:19:40.553" endtime="20210729 14:19:40.559"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:40.553" endtime="20210729 14:19:40.559"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=haka 123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:40.560" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:40.560" endtime="20210729 14:19:40.560"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:40.561" level="INFO">${payload} = {'username': 'haka 123'}</msg>
<status status="PASS" starttime="20210729 14:19:40.561" endtime="20210729 14:19:40.561"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:40.566" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:40.566" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:40.561" endtime="20210729 14:19:40.566"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:40.566" endtime="20210729 14:19:40.566"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:40.566" endtime="20210729 14:19:40.566"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:40.561" endtime="20210729 14:19:40.566"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:40.561" endtime="20210729 14:19:40.566"/>
</for>
<status status="FAIL" starttime="20210729 14:19:40.560" endtime="20210729 14:19:40.567"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:40.559" endtime="20210729 14:19:40.567"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:40.541" endtime="20210729 14:19:40.567"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:40.572" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:40.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:40.580" level="INFO">${pids} = 13433
13440
13450</msg>
<status status="PASS" starttime="20210729 14:19:40.568" endtime="20210729 14:19:40.580"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:40.581" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:40.581" endtime="20210729 14:19:40.581"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:40.582" level="INFO">${pids} = ['13433', '13440', '13450']</msg>
<status status="PASS" starttime="20210729 14:19:40.582" endtime="20210729 14:19:40.582"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13433</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:40.585" level="INFO">Running command 'kill 13433 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:40.582" endtime="20210729 14:19:40.586"/>
</kw>
<status status="PASS" starttime="20210729 14:19:40.582" endtime="20210729 14:19:40.586"/>
</iter>
<iter>
<var name="${pid}">13440</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:40.589" level="INFO">Running command 'kill 13440 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:40.586" endtime="20210729 14:19:40.589"/>
</kw>
<status status="PASS" starttime="20210729 14:19:40.586" endtime="20210729 14:19:40.589"/>
</iter>
<iter>
<var name="${pid}">13450</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:40.593" level="INFO">Running command 'kill 13450 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:40.590" endtime="20210729 14:19:40.593"/>
</kw>
<status status="PASS" starttime="20210729 14:19:40.590" endtime="20210729 14:19:40.593"/>
</iter>
<status status="PASS" starttime="20210729 14:19:40.582" endtime="20210729 14:19:40.593"/>
</for>
<status status="PASS" starttime="20210729 14:19:40.582" endtime="20210729 14:19:40.593"/>
</branch>
<status status="PASS" starttime="20210729 14:19:40.581" endtime="20210729 14:19:40.593"/>
</if>
<status status="PASS" starttime="20210729 14:19:40.567" endtime="20210729 14:19:40.594"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": 'haka 123'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:38.977" endtime="20210729 14:19:40.594">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t34" name="With Any Valid Token, Updating Username Of Each System User With haka 123456789123456789 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:40.602" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:40.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:40.611" level="INFO">${pids} = 13479</msg>
<status status="PASS" starttime="20210729 14:19:40.596" endtime="20210729 14:19:40.611"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:40.612" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:40.612" endtime="20210729 14:19:40.612"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:40.613" level="INFO">${pids} = ['13479']</msg>
<status status="PASS" starttime="20210729 14:19:40.613" endtime="20210729 14:19:40.613"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13479</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:40.619" level="INFO">Running command 'kill 13479 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:40.614" endtime="20210729 14:19:40.619"/>
</kw>
<status status="PASS" starttime="20210729 14:19:40.613" endtime="20210729 14:19:40.619"/>
</iter>
<status status="PASS" starttime="20210729 14:19:40.613" endtime="20210729 14:19:40.619"/>
</for>
<status status="PASS" starttime="20210729 14:19:40.613" endtime="20210729 14:19:40.619"/>
</branch>
<status status="PASS" starttime="20210729 14:19:40.612" endtime="20210729 14:19:40.619"/>
</if>
<status status="PASS" starttime="20210729 14:19:40.596" endtime="20210729 14:19:40.620"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:40.621" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:40.621" endtime="20210729 14:19:40.621"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:40.622" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:40.622" endtime="20210729 14:19:40.622"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:40.622" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:40.622" endtime="20210729 14:19:40.622"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:40.623" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:40.622" endtime="20210729 14:19:40.623"/>
</kw>
<msg timestamp="20210729 14:19:40.623" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:40.621" endtime="20210729 14:19:40.623"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:40.632" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:40.623" endtime="20210729 14:19:40.634"/>
</kw>
<status status="PASS" starttime="20210729 14:19:40.620" endtime="20210729 14:19:40.634"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:40.636" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:40.635" endtime="20210729 14:19:40.639"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:42.157" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:40.639" endtime="20210729 14:19:42.158"/>
</kw>
<status status="PASS" starttime="20210729 14:19:40.635" endtime="20210729 14:19:42.158"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:42.159" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:42.159" endtime="20210729 14:19:42.159"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:42.159" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:42.159" endtime="20210729 14:19:42.159"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:42.160" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:42.160" endtime="20210729 14:19:42.160"/>
</kw>
<msg timestamp="20210729 14:19:42.160" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:42.158" endtime="20210729 14:19:42.160"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:42.160" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:42.160" endtime="20210729 14:19:42.161"/>
</kw>
<status status="PASS" starttime="20210729 14:19:42.158" endtime="20210729 14:19:42.161"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:42.162" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:42.162" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:42.161" endtime="20210729 14:19:42.162"/>
</kw>
<status status="PASS" starttime="20210729 14:19:42.161" endtime="20210729 14:19:42.162"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:42.163" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:42.163" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:42.162" endtime="20210729 14:19:42.163"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:42.163" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:42.163" endtime="20210729 14:19:42.163"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:42.164" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:42.163" endtime="20210729 14:19:42.164"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:42.164" endtime="20210729 14:19:42.164"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:42.165" endtime="20210729 14:19:42.165"/>
</kw>
<status status="PASS" starttime="20210729 14:19:42.163" endtime="20210729 14:19:42.165"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:42.165" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:42.165" endtime="20210729 14:19:42.165"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:42.165" endtime="20210729 14:19:42.166"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:42.166" endtime="20210729 14:19:42.166"/>
</kw>
<status status="PASS" starttime="20210729 14:19:42.165" endtime="20210729 14:19:42.166"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:42.166" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:42.166" endtime="20210729 14:19:42.166"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:42.167" endtime="20210729 14:19:42.168"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:42.168" endtime="20210729 14:19:42.168"/>
</kw>
<status status="PASS" starttime="20210729 14:19:42.166" endtime="20210729 14:19:42.168"/>
</iter>
<status status="PASS" starttime="20210729 14:19:42.163" endtime="20210729 14:19:42.168"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:42.169" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:42.168" endtime="20210729 14:19:42.169"/>
</kw>
<status status="PASS" starttime="20210729 14:19:42.162" endtime="20210729 14:19:42.169"/>
</kw>
<status status="PASS" starttime="20210729 14:19:40.595" endtime="20210729 14:19:42.169"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=haka 123456789123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:42.170" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:42.170" endtime="20210729 14:19:42.170"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:42.170" level="INFO">${payload} = {'username': 'haka 123456789123456789'}</msg>
<status status="PASS" starttime="20210729 14:19:42.170" endtime="20210729 14:19:42.170"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:42.179" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:42.179" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:42.171" endtime="20210729 14:19:42.179"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:42.180" endtime="20210729 14:19:42.180"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:42.180" endtime="20210729 14:19:42.180"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:42.171" endtime="20210729 14:19:42.180"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:42.170" endtime="20210729 14:19:42.180"/>
</for>
<status status="FAIL" starttime="20210729 14:19:42.169" endtime="20210729 14:19:42.182"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:42.169" endtime="20210729 14:19:42.182"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=haka 123456789123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:42.183" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:42.182" endtime="20210729 14:19:42.183"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:42.183" level="INFO">${payload} = {'username': 'haka 123456789123456789'}</msg>
<status status="PASS" starttime="20210729 14:19:42.183" endtime="20210729 14:19:42.183"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:42.187" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:42.188" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:42.184" endtime="20210729 14:19:42.188"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:42.188" endtime="20210729 14:19:42.188"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:42.188" endtime="20210729 14:19:42.188"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:42.183" endtime="20210729 14:19:42.188"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:42.183" endtime="20210729 14:19:42.188"/>
</for>
<status status="FAIL" starttime="20210729 14:19:42.182" endtime="20210729 14:19:42.188"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:42.182" endtime="20210729 14:19:42.188"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=haka 123456789123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:42.189" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:42.189" endtime="20210729 14:19:42.189"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:42.189" level="INFO">${payload} = {'username': 'haka 123456789123456789'}</msg>
<status status="PASS" starttime="20210729 14:19:42.189" endtime="20210729 14:19:42.190"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:42.194" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:42.194" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:42.190" endtime="20210729 14:19:42.194"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:42.194" endtime="20210729 14:19:42.194"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:42.194" endtime="20210729 14:19:42.194"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:42.190" endtime="20210729 14:19:42.194"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:42.190" endtime="20210729 14:19:42.194"/>
</for>
<status status="FAIL" starttime="20210729 14:19:42.188" endtime="20210729 14:19:42.194"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:42.188" endtime="20210729 14:19:42.194"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:42.169" endtime="20210729 14:19:42.194"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:42.202" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:42.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:42.211" level="INFO">${pids} = 13502
13509
13515</msg>
<status status="PASS" starttime="20210729 14:19:42.196" endtime="20210729 14:19:42.211"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:42.212" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:42.211" endtime="20210729 14:19:42.212"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:42.213" level="INFO">${pids} = ['13502', '13509', '13515']</msg>
<status status="PASS" starttime="20210729 14:19:42.212" endtime="20210729 14:19:42.213"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13502</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:42.216" level="INFO">Running command 'kill 13502 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:42.213" endtime="20210729 14:19:42.216"/>
</kw>
<status status="PASS" starttime="20210729 14:19:42.213" endtime="20210729 14:19:42.217"/>
</iter>
<iter>
<var name="${pid}">13509</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:42.219" level="INFO">Running command 'kill 13509 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:42.217" endtime="20210729 14:19:42.220"/>
</kw>
<status status="PASS" starttime="20210729 14:19:42.217" endtime="20210729 14:19:42.220"/>
</iter>
<iter>
<var name="${pid}">13515</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:42.223" level="INFO">Running command 'kill 13515 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:42.220" endtime="20210729 14:19:42.223"/>
</kw>
<status status="PASS" starttime="20210729 14:19:42.220" endtime="20210729 14:19:42.224"/>
</iter>
<status status="PASS" starttime="20210729 14:19:42.213" endtime="20210729 14:19:42.224"/>
</for>
<status status="PASS" starttime="20210729 14:19:42.212" endtime="20210729 14:19:42.224"/>
</branch>
<status status="PASS" starttime="20210729 14:19:42.212" endtime="20210729 14:19:42.224"/>
</if>
<status status="PASS" starttime="20210729 14:19:42.195" endtime="20210729 14:19:42.224"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": 'haka 123456789123456789'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:40.594" endtime="20210729 14:19:42.224">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t35" name="With Any Valid Token, Updating Username Of Each System User With #¤% 23! Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:42.230" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:42.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:42.240" level="INFO">${pids} = 13544</msg>
<status status="PASS" starttime="20210729 14:19:42.226" endtime="20210729 14:19:42.240"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:42.241" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:42.241" endtime="20210729 14:19:42.241"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:42.242" level="INFO">${pids} = ['13544']</msg>
<status status="PASS" starttime="20210729 14:19:42.242" endtime="20210729 14:19:42.242"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13544</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:42.254" level="INFO">Running command 'kill 13544 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:42.242" endtime="20210729 14:19:42.254"/>
</kw>
<status status="PASS" starttime="20210729 14:19:42.242" endtime="20210729 14:19:42.254"/>
</iter>
<status status="PASS" starttime="20210729 14:19:42.242" endtime="20210729 14:19:42.254"/>
</for>
<status status="PASS" starttime="20210729 14:19:42.242" endtime="20210729 14:19:42.254"/>
</branch>
<status status="PASS" starttime="20210729 14:19:42.241" endtime="20210729 14:19:42.254"/>
</if>
<status status="PASS" starttime="20210729 14:19:42.226" endtime="20210729 14:19:42.255"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:42.256" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:42.256" endtime="20210729 14:19:42.256"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:42.257" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:42.257" endtime="20210729 14:19:42.257"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:42.257" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:42.257" endtime="20210729 14:19:42.257"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:42.258" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:42.257" endtime="20210729 14:19:42.258"/>
</kw>
<msg timestamp="20210729 14:19:42.258" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:42.256" endtime="20210729 14:19:42.258"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:42.262" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:42.258" endtime="20210729 14:19:42.264"/>
</kw>
<status status="PASS" starttime="20210729 14:19:42.255" endtime="20210729 14:19:42.264"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:42.265" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:42.265" endtime="20210729 14:19:42.270"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:43.779" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:42.270" endtime="20210729 14:19:43.780"/>
</kw>
<status status="PASS" starttime="20210729 14:19:42.264" endtime="20210729 14:19:43.781"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:43.787" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:43.787" endtime="20210729 14:19:43.787"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:43.788" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:43.787" endtime="20210729 14:19:43.788"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:43.788" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:43.788" endtime="20210729 14:19:43.788"/>
</kw>
<msg timestamp="20210729 14:19:43.788" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:43.786" endtime="20210729 14:19:43.788"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:43.789" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:43.789" endtime="20210729 14:19:43.790"/>
</kw>
<status status="PASS" starttime="20210729 14:19:43.786" endtime="20210729 14:19:43.791"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:43.792" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:43.792" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:43.792" endtime="20210729 14:19:43.792"/>
</kw>
<status status="PASS" starttime="20210729 14:19:43.791" endtime="20210729 14:19:43.792"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:43.793" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:43.793" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:43.793" endtime="20210729 14:19:43.793"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:43.794" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:43.794" endtime="20210729 14:19:43.794"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:43.794" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:43.794" endtime="20210729 14:19:43.794"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:43.794" endtime="20210729 14:19:43.795"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:43.795" endtime="20210729 14:19:43.796"/>
</kw>
<status status="PASS" starttime="20210729 14:19:43.794" endtime="20210729 14:19:43.796"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:43.796" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:43.796" endtime="20210729 14:19:43.796"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:43.796" endtime="20210729 14:19:43.797"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:43.797" endtime="20210729 14:19:43.798"/>
</kw>
<status status="PASS" starttime="20210729 14:19:43.796" endtime="20210729 14:19:43.798"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:43.799" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:43.798" endtime="20210729 14:19:43.799"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:43.799" endtime="20210729 14:19:43.800"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:43.800" endtime="20210729 14:19:43.800"/>
</kw>
<status status="PASS" starttime="20210729 14:19:43.798" endtime="20210729 14:19:43.800"/>
</iter>
<status status="PASS" starttime="20210729 14:19:43.794" endtime="20210729 14:19:43.800"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:43.801" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:43.800" endtime="20210729 14:19:43.801"/>
</kw>
<status status="PASS" starttime="20210729 14:19:43.792" endtime="20210729 14:19:43.801"/>
</kw>
<status status="PASS" starttime="20210729 14:19:42.225" endtime="20210729 14:19:43.801"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤% 23!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:43.802" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:43.802" endtime="20210729 14:19:43.802"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:43.803" level="INFO">${payload} = {'username': '#¤% 23!'}</msg>
<status status="PASS" starttime="20210729 14:19:43.803" endtime="20210729 14:19:43.803"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:43.813" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:43.813" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:43.804" endtime="20210729 14:19:43.813"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:43.813" endtime="20210729 14:19:43.814"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:43.814" endtime="20210729 14:19:43.814"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:43.803" endtime="20210729 14:19:43.814"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:43.803" endtime="20210729 14:19:43.814"/>
</for>
<status status="FAIL" starttime="20210729 14:19:43.801" endtime="20210729 14:19:43.814"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:43.801" endtime="20210729 14:19:43.814"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤% 23!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:43.815" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:43.815" endtime="20210729 14:19:43.815"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:43.815" level="INFO">${payload} = {'username': '#¤% 23!'}</msg>
<status status="PASS" starttime="20210729 14:19:43.815" endtime="20210729 14:19:43.815"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:43.820" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:43.820" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:43.816" endtime="20210729 14:19:43.820"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:43.820" endtime="20210729 14:19:43.820"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:43.820" endtime="20210729 14:19:43.820"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:43.816" endtime="20210729 14:19:43.820"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:43.816" endtime="20210729 14:19:43.821"/>
</for>
<status status="FAIL" starttime="20210729 14:19:43.814" endtime="20210729 14:19:43.821"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:43.814" endtime="20210729 14:19:43.821"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤% 23!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:43.822" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:43.822" endtime="20210729 14:19:43.822"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:43.822" level="INFO">${payload} = {'username': '#¤% 23!'}</msg>
<status status="PASS" starttime="20210729 14:19:43.822" endtime="20210729 14:19:43.822"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:43.826" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:43.827" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:43.823" endtime="20210729 14:19:43.827"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:43.827" endtime="20210729 14:19:43.827"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:43.827" endtime="20210729 14:19:43.827"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:43.823" endtime="20210729 14:19:43.827"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:43.822" endtime="20210729 14:19:43.827"/>
</for>
<status status="FAIL" starttime="20210729 14:19:43.821" endtime="20210729 14:19:43.827"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:43.821" endtime="20210729 14:19:43.827"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:43.801" endtime="20210729 14:19:43.827"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:43.832" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:43.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:43.843" level="INFO">${pids} = 13567
13574
13589</msg>
<status status="PASS" starttime="20210729 14:19:43.829" endtime="20210729 14:19:43.843"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:43.844" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:43.843" endtime="20210729 14:19:43.844"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:43.845" level="INFO">${pids} = ['13567', '13574', '13589']</msg>
<status status="PASS" starttime="20210729 14:19:43.844" endtime="20210729 14:19:43.845"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13567</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:43.848" level="INFO">Running command 'kill 13567 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:43.845" endtime="20210729 14:19:43.849"/>
</kw>
<status status="PASS" starttime="20210729 14:19:43.845" endtime="20210729 14:19:43.849"/>
</iter>
<iter>
<var name="${pid}">13574</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:43.852" level="INFO">Running command 'kill 13574 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:43.849" endtime="20210729 14:19:43.852"/>
</kw>
<status status="PASS" starttime="20210729 14:19:43.849" endtime="20210729 14:19:43.852"/>
</iter>
<iter>
<var name="${pid}">13589</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:43.855" level="INFO">Running command 'kill 13589 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:43.852" endtime="20210729 14:19:43.855"/>
</kw>
<status status="PASS" starttime="20210729 14:19:43.852" endtime="20210729 14:19:43.856"/>
</iter>
<status status="PASS" starttime="20210729 14:19:43.845" endtime="20210729 14:19:43.856"/>
</for>
<status status="PASS" starttime="20210729 14:19:43.844" endtime="20210729 14:19:43.856"/>
</branch>
<status status="PASS" starttime="20210729 14:19:43.844" endtime="20210729 14:19:43.856"/>
</if>
<status status="PASS" starttime="20210729 14:19:43.828" endtime="20210729 14:19:43.856"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤% 23!'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:42.225" endtime="20210729 14:19:43.856">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t36" name="With Any Valid Token, Updating Username Of Each System User With # %123!&amp; Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:43.862" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:43.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:43.871" level="INFO">${pids} = 13618</msg>
<status status="PASS" starttime="20210729 14:19:43.858" endtime="20210729 14:19:43.871"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:43.872" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:43.872" endtime="20210729 14:19:43.872"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:43.873" level="INFO">${pids} = ['13618']</msg>
<status status="PASS" starttime="20210729 14:19:43.873" endtime="20210729 14:19:43.873"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13618</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:43.880" level="INFO">Running command 'kill 13618 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:43.874" endtime="20210729 14:19:43.880"/>
</kw>
<status status="PASS" starttime="20210729 14:19:43.873" endtime="20210729 14:19:43.881"/>
</iter>
<status status="PASS" starttime="20210729 14:19:43.873" endtime="20210729 14:19:43.881"/>
</for>
<status status="PASS" starttime="20210729 14:19:43.873" endtime="20210729 14:19:43.881"/>
</branch>
<status status="PASS" starttime="20210729 14:19:43.872" endtime="20210729 14:19:43.881"/>
</if>
<status status="PASS" starttime="20210729 14:19:43.858" endtime="20210729 14:19:43.881"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:43.882" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:43.882" endtime="20210729 14:19:43.882"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:43.883" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:43.883" endtime="20210729 14:19:43.883"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:43.884" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:43.883" endtime="20210729 14:19:43.884"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:43.884" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:43.884" endtime="20210729 14:19:43.884"/>
</kw>
<msg timestamp="20210729 14:19:43.884" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:43.882" endtime="20210729 14:19:43.884"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:43.890" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:43.885" endtime="20210729 14:19:43.891"/>
</kw>
<status status="PASS" starttime="20210729 14:19:43.881" endtime="20210729 14:19:43.892"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:43.893" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:43.893" endtime="20210729 14:19:43.898"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:45.401" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:43.898" endtime="20210729 14:19:45.401"/>
</kw>
<status status="PASS" starttime="20210729 14:19:43.892" endtime="20210729 14:19:45.402"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:45.403" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:45.403" endtime="20210729 14:19:45.403"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:45.404" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:45.403" endtime="20210729 14:19:45.404"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:45.404" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:45.404" endtime="20210729 14:19:45.404"/>
</kw>
<msg timestamp="20210729 14:19:45.404" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:45.402" endtime="20210729 14:19:45.404"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:45.405" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:45.405" endtime="20210729 14:19:45.405"/>
</kw>
<status status="PASS" starttime="20210729 14:19:45.402" endtime="20210729 14:19:45.406"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:45.407" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:45.407" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:45.406" endtime="20210729 14:19:45.408"/>
</kw>
<status status="PASS" starttime="20210729 14:19:45.406" endtime="20210729 14:19:45.409"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:45.410" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:45.410" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:45.410" endtime="20210729 14:19:45.410"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:45.411" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:45.411" endtime="20210729 14:19:45.411"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:45.412" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:45.412" endtime="20210729 14:19:45.413"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:45.413" endtime="20210729 14:19:45.414"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:45.415" endtime="20210729 14:19:45.415"/>
</kw>
<status status="PASS" starttime="20210729 14:19:45.412" endtime="20210729 14:19:45.415"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:45.415" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:45.415" endtime="20210729 14:19:45.415"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:45.415" endtime="20210729 14:19:45.416"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:45.416" endtime="20210729 14:19:45.416"/>
</kw>
<status status="PASS" starttime="20210729 14:19:45.415" endtime="20210729 14:19:45.416"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:45.417" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:45.416" endtime="20210729 14:19:45.417"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:45.417" endtime="20210729 14:19:45.417"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:45.417" endtime="20210729 14:19:45.418"/>
</kw>
<status status="PASS" starttime="20210729 14:19:45.416" endtime="20210729 14:19:45.418"/>
</iter>
<status status="PASS" starttime="20210729 14:19:45.411" endtime="20210729 14:19:45.418"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:45.418" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:45.418" endtime="20210729 14:19:45.418"/>
</kw>
<status status="PASS" starttime="20210729 14:19:45.409" endtime="20210729 14:19:45.418"/>
</kw>
<status status="PASS" starttime="20210729 14:19:43.857" endtime="20210729 14:19:45.418"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=# %123!&amp;</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:45.420" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:45.419" endtime="20210729 14:19:45.420"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:45.420" level="INFO">${payload} = {'username': '# %123!&amp;'}</msg>
<status status="PASS" starttime="20210729 14:19:45.420" endtime="20210729 14:19:45.420"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:45.430" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:45.430" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:45.420" endtime="20210729 14:19:45.430"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:45.431" endtime="20210729 14:19:45.431"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:45.431" endtime="20210729 14:19:45.431"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:45.420" endtime="20210729 14:19:45.431"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:45.420" endtime="20210729 14:19:45.431"/>
</for>
<status status="FAIL" starttime="20210729 14:19:45.419" endtime="20210729 14:19:45.432"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:45.419" endtime="20210729 14:19:45.432"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=# %123!&amp;</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:45.433" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:45.432" endtime="20210729 14:19:45.433"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:45.433" level="INFO">${payload} = {'username': '# %123!&amp;'}</msg>
<status status="PASS" starttime="20210729 14:19:45.433" endtime="20210729 14:19:45.433"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:45.437" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:45.438" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:45.434" endtime="20210729 14:19:45.438"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:45.438" endtime="20210729 14:19:45.438"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:45.438" endtime="20210729 14:19:45.438"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:45.433" endtime="20210729 14:19:45.438"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:45.433" endtime="20210729 14:19:45.438"/>
</for>
<status status="FAIL" starttime="20210729 14:19:45.432" endtime="20210729 14:19:45.438"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:45.432" endtime="20210729 14:19:45.438"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=# %123!&amp;</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:45.439" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:45.439" endtime="20210729 14:19:45.440"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:45.440" level="INFO">${payload} = {'username': '# %123!&amp;'}</msg>
<status status="PASS" starttime="20210729 14:19:45.440" endtime="20210729 14:19:45.440"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:45.444" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:45.445" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:45.440" endtime="20210729 14:19:45.445"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:45.445" endtime="20210729 14:19:45.445"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:45.446" endtime="20210729 14:19:45.446"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:45.440" endtime="20210729 14:19:45.446"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:45.440" endtime="20210729 14:19:45.446"/>
</for>
<status status="FAIL" starttime="20210729 14:19:45.439" endtime="20210729 14:19:45.446"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:45.438" endtime="20210729 14:19:45.446"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:45.419" endtime="20210729 14:19:45.446"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:45.452" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:45.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:45.461" level="INFO">${pids} = 13641
13648
13659</msg>
<status status="PASS" starttime="20210729 14:19:45.448" endtime="20210729 14:19:45.461"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:45.462" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:45.461" endtime="20210729 14:19:45.462"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:45.463" level="INFO">${pids} = ['13641', '13648', '13659']</msg>
<status status="PASS" starttime="20210729 14:19:45.462" endtime="20210729 14:19:45.463"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13641</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:45.466" level="INFO">Running command 'kill 13641 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:45.463" endtime="20210729 14:19:45.467"/>
</kw>
<status status="PASS" starttime="20210729 14:19:45.463" endtime="20210729 14:19:45.467"/>
</iter>
<iter>
<var name="${pid}">13648</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:45.471" level="INFO">Running command 'kill 13648 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:45.468" endtime="20210729 14:19:45.471"/>
</kw>
<status status="PASS" starttime="20210729 14:19:45.467" endtime="20210729 14:19:45.471"/>
</iter>
<iter>
<var name="${pid}">13659</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:45.475" level="INFO">Running command 'kill 13659 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:45.472" endtime="20210729 14:19:45.475"/>
</kw>
<status status="PASS" starttime="20210729 14:19:45.472" endtime="20210729 14:19:45.475"/>
</iter>
<status status="PASS" starttime="20210729 14:19:45.463" endtime="20210729 14:19:45.476"/>
</for>
<status status="PASS" starttime="20210729 14:19:45.462" endtime="20210729 14:19:45.476"/>
</branch>
<status status="PASS" starttime="20210729 14:19:45.462" endtime="20210729 14:19:45.476"/>
</if>
<status status="PASS" starttime="20210729 14:19:45.447" endtime="20210729 14:19:45.476"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '# %123!&amp;'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:43.857" endtime="20210729 14:19:45.476">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t37" name="With Any Valid Token, Updating Username Of Each System User With #¤%123!&amp;7683##() ?@#¤%&amp;34567 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:45.482" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:45.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:45.491" level="INFO">${pids} = 13688</msg>
<status status="PASS" starttime="20210729 14:19:45.479" endtime="20210729 14:19:45.491"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:45.492" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:45.491" endtime="20210729 14:19:45.492"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:45.492" level="INFO">${pids} = ['13688']</msg>
<status status="PASS" starttime="20210729 14:19:45.492" endtime="20210729 14:19:45.492"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13688</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:45.497" level="INFO">Running command 'kill 13688 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:45.493" endtime="20210729 14:19:45.497"/>
</kw>
<status status="PASS" starttime="20210729 14:19:45.493" endtime="20210729 14:19:45.498"/>
</iter>
<status status="PASS" starttime="20210729 14:19:45.493" endtime="20210729 14:19:45.498"/>
</for>
<status status="PASS" starttime="20210729 14:19:45.492" endtime="20210729 14:19:45.498"/>
</branch>
<status status="PASS" starttime="20210729 14:19:45.492" endtime="20210729 14:19:45.498"/>
</if>
<status status="PASS" starttime="20210729 14:19:45.479" endtime="20210729 14:19:45.498"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:45.499" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:45.499" endtime="20210729 14:19:45.500"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:45.500" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:45.500" endtime="20210729 14:19:45.500"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:45.500" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:45.500" endtime="20210729 14:19:45.500"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:45.501" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:45.501" endtime="20210729 14:19:45.501"/>
</kw>
<msg timestamp="20210729 14:19:45.501" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:45.500" endtime="20210729 14:19:45.501"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:45.504" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:45.501" endtime="20210729 14:19:45.506"/>
</kw>
<status status="PASS" starttime="20210729 14:19:45.499" endtime="20210729 14:19:45.506"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:45.507" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:45.507" endtime="20210729 14:19:45.514"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:47.022" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:45.515" endtime="20210729 14:19:47.022"/>
</kw>
<status status="PASS" starttime="20210729 14:19:45.506" endtime="20210729 14:19:47.022"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:47.024" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:47.023" endtime="20210729 14:19:47.024"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:47.024" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:47.024" endtime="20210729 14:19:47.024"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:47.024" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:47.024" endtime="20210729 14:19:47.024"/>
</kw>
<msg timestamp="20210729 14:19:47.025" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:47.023" endtime="20210729 14:19:47.025"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:47.025" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:47.025" endtime="20210729 14:19:47.025"/>
</kw>
<status status="PASS" starttime="20210729 14:19:47.023" endtime="20210729 14:19:47.025"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:47.026" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:47.026" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:47.026" endtime="20210729 14:19:47.026"/>
</kw>
<status status="PASS" starttime="20210729 14:19:47.026" endtime="20210729 14:19:47.026"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:47.027" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:47.027" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:47.027" endtime="20210729 14:19:47.027"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:47.027" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:47.027" endtime="20210729 14:19:47.027"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:47.028" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:47.028" endtime="20210729 14:19:47.028"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:47.028" endtime="20210729 14:19:47.029"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:47.029" endtime="20210729 14:19:47.029"/>
</kw>
<status status="PASS" starttime="20210729 14:19:47.028" endtime="20210729 14:19:47.029"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:47.030" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:47.030" endtime="20210729 14:19:47.030"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:47.030" endtime="20210729 14:19:47.031"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:47.031" endtime="20210729 14:19:47.031"/>
</kw>
<status status="PASS" starttime="20210729 14:19:47.029" endtime="20210729 14:19:47.031"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:47.032" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:47.031" endtime="20210729 14:19:47.032"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:47.032" endtime="20210729 14:19:47.032"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:47.033" endtime="20210729 14:19:47.033"/>
</kw>
<status status="PASS" starttime="20210729 14:19:47.031" endtime="20210729 14:19:47.033"/>
</iter>
<status status="PASS" starttime="20210729 14:19:47.027" endtime="20210729 14:19:47.033"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:47.033" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:47.033" endtime="20210729 14:19:47.033"/>
</kw>
<status status="PASS" starttime="20210729 14:19:47.026" endtime="20210729 14:19:47.034"/>
</kw>
<status status="PASS" starttime="20210729 14:19:45.478" endtime="20210729 14:19:47.034"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤%123!&amp;7683##() ?@#¤%&amp;34567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:47.035" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:47.035" endtime="20210729 14:19:47.035"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:47.035" level="INFO">${payload} = {'username': '#¤%123!&amp;7683##() ?@#¤%&amp;34567'}</msg>
<status status="PASS" starttime="20210729 14:19:47.035" endtime="20210729 14:19:47.035"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:47.045" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:47.045" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:47.036" endtime="20210729 14:19:47.045"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:47.046" endtime="20210729 14:19:47.046"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:47.046" endtime="20210729 14:19:47.046"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:47.036" endtime="20210729 14:19:47.046"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:47.035" endtime="20210729 14:19:47.046"/>
</for>
<status status="FAIL" starttime="20210729 14:19:47.034" endtime="20210729 14:19:47.046"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:47.034" endtime="20210729 14:19:47.046"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤%123!&amp;7683##() ?@#¤%&amp;34567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:47.048" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:47.048" endtime="20210729 14:19:47.048"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:47.048" level="INFO">${payload} = {'username': '#¤%123!&amp;7683##() ?@#¤%&amp;34567'}</msg>
<status status="PASS" starttime="20210729 14:19:47.048" endtime="20210729 14:19:47.048"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:47.053" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:47.053" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:47.049" endtime="20210729 14:19:47.053"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:47.053" endtime="20210729 14:19:47.053"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:47.053" endtime="20210729 14:19:47.053"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:47.049" endtime="20210729 14:19:47.053"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:47.048" endtime="20210729 14:19:47.053"/>
</for>
<status status="FAIL" starttime="20210729 14:19:47.047" endtime="20210729 14:19:47.054"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:47.047" endtime="20210729 14:19:47.054"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤%123!&amp;7683##() ?@#¤%&amp;34567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:47.055" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:47.054" endtime="20210729 14:19:47.055"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:47.055" level="INFO">${payload} = {'username': '#¤%123!&amp;7683##() ?@#¤%&amp;34567'}</msg>
<status status="PASS" starttime="20210729 14:19:47.055" endtime="20210729 14:19:47.055"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:47.060" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:47.060" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:47.056" endtime="20210729 14:19:47.060"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:47.060" endtime="20210729 14:19:47.060"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:47.060" endtime="20210729 14:19:47.060"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:47.055" endtime="20210729 14:19:47.060"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:47.055" endtime="20210729 14:19:47.060"/>
</for>
<status status="FAIL" starttime="20210729 14:19:47.054" endtime="20210729 14:19:47.060"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:47.054" endtime="20210729 14:19:47.061"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:47.034" endtime="20210729 14:19:47.061"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:47.065" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:47.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:47.074" level="INFO">${pids} = 13711
13718
13722</msg>
<status status="PASS" starttime="20210729 14:19:47.062" endtime="20210729 14:19:47.074"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:47.075" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:47.074" endtime="20210729 14:19:47.075"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:47.076" level="INFO">${pids} = ['13711', '13718', '13722']</msg>
<status status="PASS" starttime="20210729 14:19:47.075" endtime="20210729 14:19:47.076"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13711</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:47.079" level="INFO">Running command 'kill 13711 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:47.076" endtime="20210729 14:19:47.079"/>
</kw>
<status status="PASS" starttime="20210729 14:19:47.076" endtime="20210729 14:19:47.080"/>
</iter>
<iter>
<var name="${pid}">13718</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:47.083" level="INFO">Running command 'kill 13718 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:47.080" endtime="20210729 14:19:47.084"/>
</kw>
<status status="PASS" starttime="20210729 14:19:47.080" endtime="20210729 14:19:47.084"/>
</iter>
<iter>
<var name="${pid}">13722</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:47.088" level="INFO">Running command 'kill 13722 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:47.084" endtime="20210729 14:19:47.089"/>
</kw>
<status status="PASS" starttime="20210729 14:19:47.084" endtime="20210729 14:19:47.089"/>
</iter>
<status status="PASS" starttime="20210729 14:19:47.076" endtime="20210729 14:19:47.089"/>
</for>
<status status="PASS" starttime="20210729 14:19:47.075" endtime="20210729 14:19:47.089"/>
</branch>
<status status="PASS" starttime="20210729 14:19:47.075" endtime="20210729 14:19:47.089"/>
</if>
<status status="PASS" starttime="20210729 14:19:47.061" endtime="20210729 14:19:47.089"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤%123!&amp;7683##() ?@#¤%&amp;34567'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:45.477" endtime="20210729 14:19:47.089">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t38" name="With Any Valid Token, Updating Username Of Each System User With #¤12 ab Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:47.097" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:47.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:47.106" level="INFO">${pids} = 13751</msg>
<status status="PASS" starttime="20210729 14:19:47.091" endtime="20210729 14:19:47.106"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:47.107" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:47.106" endtime="20210729 14:19:47.107"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:47.107" level="INFO">${pids} = ['13751']</msg>
<status status="PASS" starttime="20210729 14:19:47.107" endtime="20210729 14:19:47.107"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13751</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:47.112" level="INFO">Running command 'kill 13751 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:47.108" endtime="20210729 14:19:47.113"/>
</kw>
<status status="PASS" starttime="20210729 14:19:47.108" endtime="20210729 14:19:47.113"/>
</iter>
<status status="PASS" starttime="20210729 14:19:47.107" endtime="20210729 14:19:47.113"/>
</for>
<status status="PASS" starttime="20210729 14:19:47.107" endtime="20210729 14:19:47.113"/>
</branch>
<status status="PASS" starttime="20210729 14:19:47.107" endtime="20210729 14:19:47.113"/>
</if>
<status status="PASS" starttime="20210729 14:19:47.091" endtime="20210729 14:19:47.113"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:47.115" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:47.114" endtime="20210729 14:19:47.115"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:47.115" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:47.115" endtime="20210729 14:19:47.115"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:47.116" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:47.116" endtime="20210729 14:19:47.116"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:47.116" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:47.116" endtime="20210729 14:19:47.116"/>
</kw>
<msg timestamp="20210729 14:19:47.116" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:47.115" endtime="20210729 14:19:47.117"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:47.122" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:47.117" endtime="20210729 14:19:47.124"/>
</kw>
<status status="PASS" starttime="20210729 14:19:47.114" endtime="20210729 14:19:47.124"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:47.125" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:47.125" endtime="20210729 14:19:47.130"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:48.640" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:47.131" endtime="20210729 14:19:48.640"/>
</kw>
<status status="PASS" starttime="20210729 14:19:47.124" endtime="20210729 14:19:48.640"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:48.641" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:48.641" endtime="20210729 14:19:48.641"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:48.642" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:48.641" endtime="20210729 14:19:48.642"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:48.642" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:48.642" endtime="20210729 14:19:48.642"/>
</kw>
<msg timestamp="20210729 14:19:48.643" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:48.641" endtime="20210729 14:19:48.643"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:48.644" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:48.644" endtime="20210729 14:19:48.644"/>
</kw>
<status status="PASS" starttime="20210729 14:19:48.640" endtime="20210729 14:19:48.644"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:48.645" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:48.646" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:48.645" endtime="20210729 14:19:48.646"/>
</kw>
<status status="PASS" starttime="20210729 14:19:48.645" endtime="20210729 14:19:48.646"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:48.647" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:48.647" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:48.646" endtime="20210729 14:19:48.647"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:48.648" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:48.648" endtime="20210729 14:19:48.648"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:48.648" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:48.648" endtime="20210729 14:19:48.648"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:48.648" endtime="20210729 14:19:48.649"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:48.649" endtime="20210729 14:19:48.650"/>
</kw>
<status status="PASS" starttime="20210729 14:19:48.648" endtime="20210729 14:19:48.650"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:48.650" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:48.650" endtime="20210729 14:19:48.650"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:48.650" endtime="20210729 14:19:48.651"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:48.651" endtime="20210729 14:19:48.651"/>
</kw>
<status status="PASS" starttime="20210729 14:19:48.650" endtime="20210729 14:19:48.651"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:48.652" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:48.652" endtime="20210729 14:19:48.652"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:48.652" endtime="20210729 14:19:48.652"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:48.653" endtime="20210729 14:19:48.653"/>
</kw>
<status status="PASS" starttime="20210729 14:19:48.651" endtime="20210729 14:19:48.653"/>
</iter>
<status status="PASS" starttime="20210729 14:19:48.648" endtime="20210729 14:19:48.653"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:48.653" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:48.653" endtime="20210729 14:19:48.653"/>
</kw>
<status status="PASS" starttime="20210729 14:19:48.646" endtime="20210729 14:19:48.654"/>
</kw>
<status status="PASS" starttime="20210729 14:19:47.090" endtime="20210729 14:19:48.654"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤12 ab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:48.655" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:48.654" endtime="20210729 14:19:48.655"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:48.655" level="INFO">${payload} = {'username': '#¤12 ab'}</msg>
<status status="PASS" starttime="20210729 14:19:48.655" endtime="20210729 14:19:48.655"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:48.666" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:48.666" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:48.656" endtime="20210729 14:19:48.666"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:48.666" endtime="20210729 14:19:48.667"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:48.667" endtime="20210729 14:19:48.667"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:48.656" endtime="20210729 14:19:48.667"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:48.655" endtime="20210729 14:19:48.667"/>
</for>
<status status="FAIL" starttime="20210729 14:19:48.654" endtime="20210729 14:19:48.667"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:48.654" endtime="20210729 14:19:48.667"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤12 ab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:48.668" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:48.668" endtime="20210729 14:19:48.668"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:48.669" level="INFO">${payload} = {'username': '#¤12 ab'}</msg>
<status status="PASS" starttime="20210729 14:19:48.669" endtime="20210729 14:19:48.669"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:48.674" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:48.674" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:48.669" endtime="20210729 14:19:48.674"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:48.674" endtime="20210729 14:19:48.674"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:48.674" endtime="20210729 14:19:48.674"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:48.669" endtime="20210729 14:19:48.674"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:48.669" endtime="20210729 14:19:48.675"/>
</for>
<status status="FAIL" starttime="20210729 14:19:48.667" endtime="20210729 14:19:48.675"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:48.667" endtime="20210729 14:19:48.675"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤12 ab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:48.676" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:48.676" endtime="20210729 14:19:48.676"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:48.676" level="INFO">${payload} = {'username': '#¤12 ab'}</msg>
<status status="PASS" starttime="20210729 14:19:48.676" endtime="20210729 14:19:48.676"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:48.681" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:48.683" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:48.677" endtime="20210729 14:19:48.683"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:48.683" endtime="20210729 14:19:48.683"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:48.683" endtime="20210729 14:19:48.683"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:48.677" endtime="20210729 14:19:48.683"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:48.676" endtime="20210729 14:19:48.683"/>
</for>
<status status="FAIL" starttime="20210729 14:19:48.675" endtime="20210729 14:19:48.683"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:48.675" endtime="20210729 14:19:48.683"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:48.654" endtime="20210729 14:19:48.684"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:48.688" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:48.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:48.697" level="INFO">${pids} = 13774
13781
13786</msg>
<status status="PASS" starttime="20210729 14:19:48.685" endtime="20210729 14:19:48.697"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:48.698" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:48.697" endtime="20210729 14:19:48.698"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:48.698" level="INFO">${pids} = ['13774', '13781', '13786']</msg>
<status status="PASS" starttime="20210729 14:19:48.698" endtime="20210729 14:19:48.698"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13774</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:48.702" level="INFO">Running command 'kill 13774 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:48.699" endtime="20210729 14:19:48.702"/>
</kw>
<status status="PASS" starttime="20210729 14:19:48.699" endtime="20210729 14:19:48.702"/>
</iter>
<iter>
<var name="${pid}">13781</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:48.705" level="INFO">Running command 'kill 13781 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:48.703" endtime="20210729 14:19:48.707"/>
</kw>
<status status="PASS" starttime="20210729 14:19:48.702" endtime="20210729 14:19:48.707"/>
</iter>
<iter>
<var name="${pid}">13786</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:48.710" level="INFO">Running command 'kill 13786 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:48.707" endtime="20210729 14:19:48.710"/>
</kw>
<status status="PASS" starttime="20210729 14:19:48.707" endtime="20210729 14:19:48.710"/>
</iter>
<status status="PASS" starttime="20210729 14:19:48.699" endtime="20210729 14:19:48.710"/>
</for>
<status status="PASS" starttime="20210729 14:19:48.698" endtime="20210729 14:19:48.710"/>
</branch>
<status status="PASS" starttime="20210729 14:19:48.698" endtime="20210729 14:19:48.710"/>
</if>
<status status="PASS" starttime="20210729 14:19:48.684" endtime="20210729 14:19:48.711"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤12 ab'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:47.090" endtime="20210729 14:19:48.711">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t39" name="With Any Valid Token, Updating Username Of Each System User With # 123abc Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:48.717" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:48.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:48.725" level="INFO">${pids} = 13815</msg>
<status status="PASS" starttime="20210729 14:19:48.713" endtime="20210729 14:19:48.725"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:48.726" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:48.726" endtime="20210729 14:19:48.726"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:48.727" level="INFO">${pids} = ['13815']</msg>
<status status="PASS" starttime="20210729 14:19:48.727" endtime="20210729 14:19:48.727"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13815</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:48.731" level="INFO">Running command 'kill 13815 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:48.727" endtime="20210729 14:19:48.731"/>
</kw>
<status status="PASS" starttime="20210729 14:19:48.727" endtime="20210729 14:19:48.731"/>
</iter>
<status status="PASS" starttime="20210729 14:19:48.727" endtime="20210729 14:19:48.731"/>
</for>
<status status="PASS" starttime="20210729 14:19:48.727" endtime="20210729 14:19:48.731"/>
</branch>
<status status="PASS" starttime="20210729 14:19:48.726" endtime="20210729 14:19:48.731"/>
</if>
<status status="PASS" starttime="20210729 14:19:48.712" endtime="20210729 14:19:48.732"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:48.733" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:48.733" endtime="20210729 14:19:48.733"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:48.733" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:48.733" endtime="20210729 14:19:48.734"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:48.734" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:48.734" endtime="20210729 14:19:48.734"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:48.734" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:48.734" endtime="20210729 14:19:48.734"/>
</kw>
<msg timestamp="20210729 14:19:48.735" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:48.733" endtime="20210729 14:19:48.735"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:48.738" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:48.735" endtime="20210729 14:19:48.739"/>
</kw>
<status status="PASS" starttime="20210729 14:19:48.732" endtime="20210729 14:19:48.739"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:48.741" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:48.740" endtime="20210729 14:19:48.745"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:50.246" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:48.745" endtime="20210729 14:19:50.246"/>
</kw>
<status status="PASS" starttime="20210729 14:19:48.740" endtime="20210729 14:19:50.247"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:50.248" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:50.248" endtime="20210729 14:19:50.248"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:50.248" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:50.248" endtime="20210729 14:19:50.248"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:50.249" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:50.249" endtime="20210729 14:19:50.249"/>
</kw>
<msg timestamp="20210729 14:19:50.249" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:50.247" endtime="20210729 14:19:50.249"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:50.250" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:50.249" endtime="20210729 14:19:50.250"/>
</kw>
<status status="PASS" starttime="20210729 14:19:50.247" endtime="20210729 14:19:50.250"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:50.251" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:50.251" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:50.251" endtime="20210729 14:19:50.251"/>
</kw>
<status status="PASS" starttime="20210729 14:19:50.250" endtime="20210729 14:19:50.251"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:50.252" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:50.252" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:50.252" endtime="20210729 14:19:50.252"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:50.252" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:50.252" endtime="20210729 14:19:50.252"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:50.253" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:50.253" endtime="20210729 14:19:50.253"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:50.253" endtime="20210729 14:19:50.254"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:50.254" endtime="20210729 14:19:50.254"/>
</kw>
<status status="PASS" starttime="20210729 14:19:50.253" endtime="20210729 14:19:50.254"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:50.254" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:50.254" endtime="20210729 14:19:50.254"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:50.254" endtime="20210729 14:19:50.255"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:50.255" endtime="20210729 14:19:50.255"/>
</kw>
<status status="PASS" starttime="20210729 14:19:50.254" endtime="20210729 14:19:50.255"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:50.256" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:50.256" endtime="20210729 14:19:50.256"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:50.256" endtime="20210729 14:19:50.257"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:50.257" endtime="20210729 14:19:50.257"/>
</kw>
<status status="PASS" starttime="20210729 14:19:50.255" endtime="20210729 14:19:50.257"/>
</iter>
<status status="PASS" starttime="20210729 14:19:50.252" endtime="20210729 14:19:50.257"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:50.257" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:50.257" endtime="20210729 14:19:50.257"/>
</kw>
<status status="PASS" starttime="20210729 14:19:50.251" endtime="20210729 14:19:50.258"/>
</kw>
<status status="PASS" starttime="20210729 14:19:48.712" endtime="20210729 14:19:50.258"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=# 123abc</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:50.259" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:50.259" endtime="20210729 14:19:50.259"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:50.259" level="INFO">${payload} = {'username': '# 123abc'}</msg>
<status status="PASS" starttime="20210729 14:19:50.259" endtime="20210729 14:19:50.259"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:50.269" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:50.270" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:50.260" endtime="20210729 14:19:50.270"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:50.270" endtime="20210729 14:19:50.270"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:50.270" endtime="20210729 14:19:50.270"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:50.260" endtime="20210729 14:19:50.270"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:50.259" endtime="20210729 14:19:50.270"/>
</for>
<status status="FAIL" starttime="20210729 14:19:50.258" endtime="20210729 14:19:50.270"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:50.258" endtime="20210729 14:19:50.270"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=# 123abc</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:50.272" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:50.271" endtime="20210729 14:19:50.272"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:50.272" level="INFO">${payload} = {'username': '# 123abc'}</msg>
<status status="PASS" starttime="20210729 14:19:50.272" endtime="20210729 14:19:50.272"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:50.276" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:50.276" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:50.272" endtime="20210729 14:19:50.276"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:50.276" endtime="20210729 14:19:50.276"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:50.276" endtime="20210729 14:19:50.276"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:50.272" endtime="20210729 14:19:50.277"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:50.272" endtime="20210729 14:19:50.277"/>
</for>
<status status="FAIL" starttime="20210729 14:19:50.271" endtime="20210729 14:19:50.277"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:50.270" endtime="20210729 14:19:50.277"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=# 123abc</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:50.278" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:50.277" endtime="20210729 14:19:50.278"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:50.278" level="INFO">${payload} = {'username': '# 123abc'}</msg>
<status status="PASS" starttime="20210729 14:19:50.278" endtime="20210729 14:19:50.278"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:50.283" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:50.283" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:50.278" endtime="20210729 14:19:50.283"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:50.283" endtime="20210729 14:19:50.283"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:50.283" endtime="20210729 14:19:50.283"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:50.278" endtime="20210729 14:19:50.283"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:50.278" endtime="20210729 14:19:50.283"/>
</for>
<status status="FAIL" starttime="20210729 14:19:50.277" endtime="20210729 14:19:50.284"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:50.277" endtime="20210729 14:19:50.284"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:50.258" endtime="20210729 14:19:50.284"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:50.289" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:50.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:50.298" level="INFO">${pids} = 13838
13845
13855</msg>
<status status="PASS" starttime="20210729 14:19:50.285" endtime="20210729 14:19:50.298"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:50.299" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:50.298" endtime="20210729 14:19:50.299"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:50.299" level="INFO">${pids} = ['13838', '13845', '13855']</msg>
<status status="PASS" starttime="20210729 14:19:50.299" endtime="20210729 14:19:50.299"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13838</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:50.305" level="INFO">Running command 'kill 13838 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:50.300" endtime="20210729 14:19:50.305"/>
</kw>
<status status="PASS" starttime="20210729 14:19:50.300" endtime="20210729 14:19:50.305"/>
</iter>
<iter>
<var name="${pid}">13845</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:50.308" level="INFO">Running command 'kill 13845 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:50.306" endtime="20210729 14:19:50.309"/>
</kw>
<status status="PASS" starttime="20210729 14:19:50.305" endtime="20210729 14:19:50.309"/>
</iter>
<iter>
<var name="${pid}">13855</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:50.315" level="INFO">Running command 'kill 13855 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:50.309" endtime="20210729 14:19:50.315"/>
</kw>
<status status="PASS" starttime="20210729 14:19:50.309" endtime="20210729 14:19:50.315"/>
</iter>
<status status="PASS" starttime="20210729 14:19:50.300" endtime="20210729 14:19:50.315"/>
</for>
<status status="PASS" starttime="20210729 14:19:50.299" endtime="20210729 14:19:50.315"/>
</branch>
<status status="PASS" starttime="20210729 14:19:50.299" endtime="20210729 14:19:50.315"/>
</if>
<status status="PASS" starttime="20210729 14:19:50.284" endtime="20210729 14:19:50.316"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '# 123abc'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:48.711" endtime="20210729 14:19:50.316">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t40" name="With Any Valid Token, Updating Username Of Each System User With #¤/&amp;  !123abc456hjk Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:50.321" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:50.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:50.330" level="INFO">${pids} = 13884</msg>
<status status="PASS" starttime="20210729 14:19:50.318" endtime="20210729 14:19:50.330"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:50.331" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:50.330" endtime="20210729 14:19:50.331"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:50.332" level="INFO">${pids} = ['13884']</msg>
<status status="PASS" starttime="20210729 14:19:50.331" endtime="20210729 14:19:50.332"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13884</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:50.335" level="INFO">Running command 'kill 13884 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:50.332" endtime="20210729 14:19:50.336"/>
</kw>
<status status="PASS" starttime="20210729 14:19:50.332" endtime="20210729 14:19:50.336"/>
</iter>
<status status="PASS" starttime="20210729 14:19:50.332" endtime="20210729 14:19:50.336"/>
</for>
<status status="PASS" starttime="20210729 14:19:50.331" endtime="20210729 14:19:50.336"/>
</branch>
<status status="PASS" starttime="20210729 14:19:50.331" endtime="20210729 14:19:50.336"/>
</if>
<status status="PASS" starttime="20210729 14:19:50.318" endtime="20210729 14:19:50.336"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:50.337" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:50.337" endtime="20210729 14:19:50.337"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:50.338" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:50.338" endtime="20210729 14:19:50.338"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:50.338" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:50.338" endtime="20210729 14:19:50.339"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:50.339" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:50.339" endtime="20210729 14:19:50.339"/>
</kw>
<msg timestamp="20210729 14:19:50.340" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:50.337" endtime="20210729 14:19:50.340"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:50.343" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:50.340" endtime="20210729 14:19:50.344"/>
</kw>
<status status="PASS" starttime="20210729 14:19:50.336" endtime="20210729 14:19:50.345"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:50.346" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:50.346" endtime="20210729 14:19:50.351"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:51.852" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:50.352" endtime="20210729 14:19:51.852"/>
</kw>
<status status="PASS" starttime="20210729 14:19:50.345" endtime="20210729 14:19:51.853"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:51.854" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:51.853" endtime="20210729 14:19:51.854"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:51.854" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:51.854" endtime="20210729 14:19:51.854"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:51.854" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:51.854" endtime="20210729 14:19:51.854"/>
</kw>
<msg timestamp="20210729 14:19:51.855" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:51.853" endtime="20210729 14:19:51.855"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:51.855" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:51.855" endtime="20210729 14:19:51.855"/>
</kw>
<status status="PASS" starttime="20210729 14:19:51.853" endtime="20210729 14:19:51.855"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:51.856" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:51.856" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:51.856" endtime="20210729 14:19:51.856"/>
</kw>
<status status="PASS" starttime="20210729 14:19:51.855" endtime="20210729 14:19:51.856"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:51.857" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:51.857" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:51.856" endtime="20210729 14:19:51.857"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:51.857" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:51.857" endtime="20210729 14:19:51.857"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:51.858" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:51.857" endtime="20210729 14:19:51.858"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:51.858" endtime="20210729 14:19:51.858"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:51.858" endtime="20210729 14:19:51.859"/>
</kw>
<status status="PASS" starttime="20210729 14:19:51.857" endtime="20210729 14:19:51.859"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:51.859" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:51.859" endtime="20210729 14:19:51.859"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:51.859" endtime="20210729 14:19:51.861"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:51.861" endtime="20210729 14:19:51.861"/>
</kw>
<status status="PASS" starttime="20210729 14:19:51.859" endtime="20210729 14:19:51.861"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:51.862" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:51.862" endtime="20210729 14:19:51.862"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:51.862" endtime="20210729 14:19:51.862"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:51.863" endtime="20210729 14:19:51.863"/>
</kw>
<status status="PASS" starttime="20210729 14:19:51.861" endtime="20210729 14:19:51.863"/>
</iter>
<status status="PASS" starttime="20210729 14:19:51.857" endtime="20210729 14:19:51.863"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:51.863" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:51.863" endtime="20210729 14:19:51.863"/>
</kw>
<status status="PASS" starttime="20210729 14:19:51.856" endtime="20210729 14:19:51.863"/>
</kw>
<status status="PASS" starttime="20210729 14:19:50.317" endtime="20210729 14:19:51.863"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/&amp;\ \ !123abc456hjk</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:51.865" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:51.864" endtime="20210729 14:19:51.865"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:51.865" level="INFO">${payload} = {'username': '#¤/&amp;  !123abc456hjk'}</msg>
<status status="PASS" starttime="20210729 14:19:51.865" endtime="20210729 14:19:51.865"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:51.874" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:51.874" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:51.865" endtime="20210729 14:19:51.874"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:51.874" endtime="20210729 14:19:51.874"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:51.875" endtime="20210729 14:19:51.875"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:51.865" endtime="20210729 14:19:51.875"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:51.865" endtime="20210729 14:19:51.875"/>
</for>
<status status="FAIL" starttime="20210729 14:19:51.864" endtime="20210729 14:19:51.875"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:51.864" endtime="20210729 14:19:51.875"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/&amp;\ \ !123abc456hjk</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:51.876" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:51.876" endtime="20210729 14:19:51.876"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:51.876" level="INFO">${payload} = {'username': '#¤/&amp;  !123abc456hjk'}</msg>
<status status="PASS" starttime="20210729 14:19:51.876" endtime="20210729 14:19:51.876"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:51.881" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:51.881" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:51.877" endtime="20210729 14:19:51.881"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:51.881" endtime="20210729 14:19:51.881"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:51.881" endtime="20210729 14:19:51.881"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:51.877" endtime="20210729 14:19:51.881"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:51.876" endtime="20210729 14:19:51.882"/>
</for>
<status status="FAIL" starttime="20210729 14:19:51.875" endtime="20210729 14:19:51.882"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:51.875" endtime="20210729 14:19:51.882"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/&amp;\ \ !123abc456hjk</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:51.883" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:51.882" endtime="20210729 14:19:51.883"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:51.883" level="INFO">${payload} = {'username': '#¤/&amp;  !123abc456hjk'}</msg>
<status status="PASS" starttime="20210729 14:19:51.883" endtime="20210729 14:19:51.883"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:51.887" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:51.887" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:51.884" endtime="20210729 14:19:51.887"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:51.888" endtime="20210729 14:19:51.888"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:51.888" endtime="20210729 14:19:51.888"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:51.883" endtime="20210729 14:19:51.888"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:51.883" endtime="20210729 14:19:51.888"/>
</for>
<status status="FAIL" starttime="20210729 14:19:51.882" endtime="20210729 14:19:51.888"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:51.882" endtime="20210729 14:19:51.888"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:51.864" endtime="20210729 14:19:51.888"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:51.892" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:51.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:51.901" level="INFO">${pids} = 13907
13914
13918</msg>
<status status="PASS" starttime="20210729 14:19:51.889" endtime="20210729 14:19:51.901"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:51.902" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:51.901" endtime="20210729 14:19:51.902"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:51.903" level="INFO">${pids} = ['13907', '13914', '13918']</msg>
<status status="PASS" starttime="20210729 14:19:51.902" endtime="20210729 14:19:51.903"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13907</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:51.906" level="INFO">Running command 'kill 13907 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:51.903" endtime="20210729 14:19:51.906"/>
</kw>
<status status="PASS" starttime="20210729 14:19:51.903" endtime="20210729 14:19:51.906"/>
</iter>
<iter>
<var name="${pid}">13914</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:51.909" level="INFO">Running command 'kill 13914 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:51.907" endtime="20210729 14:19:51.909"/>
</kw>
<status status="PASS" starttime="20210729 14:19:51.906" endtime="20210729 14:19:51.909"/>
</iter>
<iter>
<var name="${pid}">13918</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:51.913" level="INFO">Running command 'kill 13918 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:51.910" endtime="20210729 14:19:51.913"/>
</kw>
<status status="PASS" starttime="20210729 14:19:51.909" endtime="20210729 14:19:51.913"/>
</iter>
<status status="PASS" starttime="20210729 14:19:51.903" endtime="20210729 14:19:51.913"/>
</for>
<status status="PASS" starttime="20210729 14:19:51.902" endtime="20210729 14:19:51.913"/>
</branch>
<status status="PASS" starttime="20210729 14:19:51.902" endtime="20210729 14:19:51.913"/>
</if>
<status status="PASS" starttime="20210729 14:19:51.888" endtime="20210729 14:19:51.914"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤/&amp; !123abc456hjk'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:50.317" endtime="20210729 14:19:51.914">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t41" name="With Any Valid Token, Updating Username Of Each System User With #¤ abc! Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:51.918" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:51.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:51.927" level="INFO">${pids} = 13947</msg>
<status status="PASS" starttime="20210729 14:19:51.916" endtime="20210729 14:19:51.928"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:51.928" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:51.928" endtime="20210729 14:19:51.929"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:51.929" level="INFO">${pids} = ['13947']</msg>
<status status="PASS" starttime="20210729 14:19:51.929" endtime="20210729 14:19:51.929"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13947</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:51.933" level="INFO">Running command 'kill 13947 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:51.930" endtime="20210729 14:19:51.934"/>
</kw>
<status status="PASS" starttime="20210729 14:19:51.929" endtime="20210729 14:19:51.934"/>
</iter>
<status status="PASS" starttime="20210729 14:19:51.929" endtime="20210729 14:19:51.934"/>
</for>
<status status="PASS" starttime="20210729 14:19:51.929" endtime="20210729 14:19:51.934"/>
</branch>
<status status="PASS" starttime="20210729 14:19:51.929" endtime="20210729 14:19:51.934"/>
</if>
<status status="PASS" starttime="20210729 14:19:51.915" endtime="20210729 14:19:51.934"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:51.935" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:51.935" endtime="20210729 14:19:51.935"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:51.936" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:51.936" endtime="20210729 14:19:51.936"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:51.936" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:51.936" endtime="20210729 14:19:51.936"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:51.937" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:51.936" endtime="20210729 14:19:51.937"/>
</kw>
<msg timestamp="20210729 14:19:51.937" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:51.935" endtime="20210729 14:19:51.937"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:51.942" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:51.937" endtime="20210729 14:19:51.950"/>
</kw>
<status status="PASS" starttime="20210729 14:19:51.934" endtime="20210729 14:19:51.950"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:51.952" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:51.951" endtime="20210729 14:19:51.956"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:53.458" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:51.957" endtime="20210729 14:19:53.458"/>
</kw>
<status status="PASS" starttime="20210729 14:19:51.950" endtime="20210729 14:19:53.459"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:53.460" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:53.460" endtime="20210729 14:19:53.460"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:53.461" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:53.460" endtime="20210729 14:19:53.461"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:53.461" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:53.461" endtime="20210729 14:19:53.461"/>
</kw>
<msg timestamp="20210729 14:19:53.462" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:53.459" endtime="20210729 14:19:53.462"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:53.462" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:53.462" endtime="20210729 14:19:53.463"/>
</kw>
<status status="PASS" starttime="20210729 14:19:53.459" endtime="20210729 14:19:53.463"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:53.464" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:53.464" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:53.464" endtime="20210729 14:19:53.464"/>
</kw>
<status status="PASS" starttime="20210729 14:19:53.463" endtime="20210729 14:19:53.464"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:53.465" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:53.465" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:53.464" endtime="20210729 14:19:53.465"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:53.465" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:53.465" endtime="20210729 14:19:53.465"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:53.466" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:53.466" endtime="20210729 14:19:53.466"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:53.467" endtime="20210729 14:19:53.468"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:53.468" endtime="20210729 14:19:53.468"/>
</kw>
<status status="PASS" starttime="20210729 14:19:53.465" endtime="20210729 14:19:53.468"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:53.469" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:53.468" endtime="20210729 14:19:53.469"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:53.469" endtime="20210729 14:19:53.470"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:53.470" endtime="20210729 14:19:53.470"/>
</kw>
<status status="PASS" starttime="20210729 14:19:53.468" endtime="20210729 14:19:53.470"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:53.470" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:53.470" endtime="20210729 14:19:53.470"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:53.470" endtime="20210729 14:19:53.471"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:53.471" endtime="20210729 14:19:53.471"/>
</kw>
<status status="PASS" starttime="20210729 14:19:53.470" endtime="20210729 14:19:53.471"/>
</iter>
<status status="PASS" starttime="20210729 14:19:53.465" endtime="20210729 14:19:53.471"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:53.472" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:53.472" endtime="20210729 14:19:53.472"/>
</kw>
<status status="PASS" starttime="20210729 14:19:53.464" endtime="20210729 14:19:53.472"/>
</kw>
<status status="PASS" starttime="20210729 14:19:51.915" endtime="20210729 14:19:53.472"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤ abc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:53.473" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:53.473" endtime="20210729 14:19:53.473"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:53.474" level="INFO">${payload} = {'username': '#¤ abc!'}</msg>
<status status="PASS" starttime="20210729 14:19:53.473" endtime="20210729 14:19:53.474"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:53.483" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:53.484" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:53.474" endtime="20210729 14:19:53.484"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:53.484" endtime="20210729 14:19:53.484"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:53.484" endtime="20210729 14:19:53.484"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:53.474" endtime="20210729 14:19:53.484"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:53.474" endtime="20210729 14:19:53.484"/>
</for>
<status status="FAIL" starttime="20210729 14:19:53.472" endtime="20210729 14:19:53.484"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:53.472" endtime="20210729 14:19:53.484"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤ abc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:53.485" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:53.485" endtime="20210729 14:19:53.486"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:53.486" level="INFO">${payload} = {'username': '#¤ abc!'}</msg>
<status status="PASS" starttime="20210729 14:19:53.486" endtime="20210729 14:19:53.486"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:53.491" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:53.491" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:53.486" endtime="20210729 14:19:53.491"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:53.491" endtime="20210729 14:19:53.491"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:53.491" endtime="20210729 14:19:53.491"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:53.486" endtime="20210729 14:19:53.491"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:53.486" endtime="20210729 14:19:53.492"/>
</for>
<status status="FAIL" starttime="20210729 14:19:53.485" endtime="20210729 14:19:53.492"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:53.485" endtime="20210729 14:19:53.492"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤ abc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:53.493" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:53.493" endtime="20210729 14:19:53.493"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:53.493" level="INFO">${payload} = {'username': '#¤ abc!'}</msg>
<status status="PASS" starttime="20210729 14:19:53.493" endtime="20210729 14:19:53.493"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:53.499" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:53.499" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:53.494" endtime="20210729 14:19:53.499"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:53.499" endtime="20210729 14:19:53.499"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:53.500" endtime="20210729 14:19:53.500"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:53.494" endtime="20210729 14:19:53.502"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:53.493" endtime="20210729 14:19:53.502"/>
</for>
<status status="FAIL" starttime="20210729 14:19:53.492" endtime="20210729 14:19:53.503"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:53.492" endtime="20210729 14:19:53.503"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:53.472" endtime="20210729 14:19:53.503"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:53.507" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:53.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:53.516" level="INFO">${pids} = 13970
13977
13982</msg>
<status status="PASS" starttime="20210729 14:19:53.504" endtime="20210729 14:19:53.516"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:53.517" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:53.516" endtime="20210729 14:19:53.517"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:53.518" level="INFO">${pids} = ['13970', '13977', '13982']</msg>
<status status="PASS" starttime="20210729 14:19:53.517" endtime="20210729 14:19:53.518"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">13970</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:53.521" level="INFO">Running command 'kill 13970 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:53.518" endtime="20210729 14:19:53.521"/>
</kw>
<status status="PASS" starttime="20210729 14:19:53.518" endtime="20210729 14:19:53.521"/>
</iter>
<iter>
<var name="${pid}">13977</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:53.524" level="INFO">Running command 'kill 13977 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:53.522" endtime="20210729 14:19:53.526"/>
</kw>
<status status="PASS" starttime="20210729 14:19:53.521" endtime="20210729 14:19:53.526"/>
</iter>
<iter>
<var name="${pid}">13982</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:53.530" level="INFO">Running command 'kill 13982 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:53.526" endtime="20210729 14:19:53.530"/>
</kw>
<status status="PASS" starttime="20210729 14:19:53.526" endtime="20210729 14:19:53.530"/>
</iter>
<status status="PASS" starttime="20210729 14:19:53.518" endtime="20210729 14:19:53.530"/>
</for>
<status status="PASS" starttime="20210729 14:19:53.517" endtime="20210729 14:19:53.530"/>
</branch>
<status status="PASS" starttime="20210729 14:19:53.517" endtime="20210729 14:19:53.530"/>
</if>
<status status="PASS" starttime="20210729 14:19:53.503" endtime="20210729 14:19:53.531"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤ abc!'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:51.914" endtime="20210729 14:19:53.531">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t42" name="With Any Valid Token, Updating Username Of Each System User With #¤ abc!g Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:53.536" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:53.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:53.545" level="INFO">${pids} = 14011</msg>
<status status="PASS" starttime="20210729 14:19:53.533" endtime="20210729 14:19:53.545"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:53.546" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:53.545" endtime="20210729 14:19:53.546"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:53.547" level="INFO">${pids} = ['14011']</msg>
<status status="PASS" starttime="20210729 14:19:53.547" endtime="20210729 14:19:53.547"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14011</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:53.551" level="INFO">Running command 'kill 14011 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:53.548" endtime="20210729 14:19:53.552"/>
</kw>
<status status="PASS" starttime="20210729 14:19:53.548" endtime="20210729 14:19:53.552"/>
</iter>
<status status="PASS" starttime="20210729 14:19:53.547" endtime="20210729 14:19:53.552"/>
</for>
<status status="PASS" starttime="20210729 14:19:53.546" endtime="20210729 14:19:53.552"/>
</branch>
<status status="PASS" starttime="20210729 14:19:53.546" endtime="20210729 14:19:53.552"/>
</if>
<status status="PASS" starttime="20210729 14:19:53.532" endtime="20210729 14:19:53.552"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:53.553" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:53.553" endtime="20210729 14:19:53.553"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:53.554" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:53.554" endtime="20210729 14:19:53.554"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:53.554" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:53.554" endtime="20210729 14:19:53.554"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:53.555" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:53.554" endtime="20210729 14:19:53.555"/>
</kw>
<msg timestamp="20210729 14:19:53.555" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:53.553" endtime="20210729 14:19:53.555"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:53.558" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:53.555" endtime="20210729 14:19:53.560"/>
</kw>
<status status="PASS" starttime="20210729 14:19:53.552" endtime="20210729 14:19:53.560"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:53.561" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:53.561" endtime="20210729 14:19:53.568"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:55.070" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:53.568" endtime="20210729 14:19:55.071"/>
</kw>
<status status="PASS" starttime="20210729 14:19:53.560" endtime="20210729 14:19:55.071"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:55.072" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:55.072" endtime="20210729 14:19:55.072"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:55.073" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:55.072" endtime="20210729 14:19:55.073"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:55.073" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:55.073" endtime="20210729 14:19:55.073"/>
</kw>
<msg timestamp="20210729 14:19:55.073" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:55.072" endtime="20210729 14:19:55.073"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:55.074" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:55.073" endtime="20210729 14:19:55.074"/>
</kw>
<status status="PASS" starttime="20210729 14:19:55.071" endtime="20210729 14:19:55.074"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:55.075" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:55.075" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:55.075" endtime="20210729 14:19:55.075"/>
</kw>
<status status="PASS" starttime="20210729 14:19:55.074" endtime="20210729 14:19:55.075"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:55.076" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:55.076" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:55.076" endtime="20210729 14:19:55.076"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:55.076" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:55.076" endtime="20210729 14:19:55.076"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:55.077" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:55.077" endtime="20210729 14:19:55.077"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:55.077" endtime="20210729 14:19:55.078"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:55.078" endtime="20210729 14:19:55.078"/>
</kw>
<status status="PASS" starttime="20210729 14:19:55.077" endtime="20210729 14:19:55.078"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:55.079" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:55.078" endtime="20210729 14:19:55.079"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:55.079" endtime="20210729 14:19:55.080"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:55.080" endtime="20210729 14:19:55.080"/>
</kw>
<status status="PASS" starttime="20210729 14:19:55.078" endtime="20210729 14:19:55.081"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:55.081" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:55.081" endtime="20210729 14:19:55.081"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:55.081" endtime="20210729 14:19:55.082"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:55.082" endtime="20210729 14:19:55.082"/>
</kw>
<status status="PASS" starttime="20210729 14:19:55.081" endtime="20210729 14:19:55.082"/>
</iter>
<status status="PASS" starttime="20210729 14:19:55.076" endtime="20210729 14:19:55.082"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:55.082" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:55.082" endtime="20210729 14:19:55.083"/>
</kw>
<status status="PASS" starttime="20210729 14:19:55.075" endtime="20210729 14:19:55.083"/>
</kw>
<status status="PASS" starttime="20210729 14:19:53.532" endtime="20210729 14:19:55.083"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤ abc!g</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:55.084" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:55.084" endtime="20210729 14:19:55.084"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:55.084" level="INFO">${payload} = {'username': '#¤ abc!g'}</msg>
<status status="PASS" starttime="20210729 14:19:55.084" endtime="20210729 14:19:55.084"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:55.093" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:55.093" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:55.085" endtime="20210729 14:19:55.093"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:55.093" endtime="20210729 14:19:55.093"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:55.094" endtime="20210729 14:19:55.094"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:55.084" endtime="20210729 14:19:55.094"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:55.084" endtime="20210729 14:19:55.094"/>
</for>
<status status="FAIL" starttime="20210729 14:19:55.083" endtime="20210729 14:19:55.094"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:55.083" endtime="20210729 14:19:55.094"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤ abc!g</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:55.095" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:55.095" endtime="20210729 14:19:55.095"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:55.096" level="INFO">${payload} = {'username': '#¤ abc!g'}</msg>
<status status="PASS" starttime="20210729 14:19:55.095" endtime="20210729 14:19:55.096"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:55.100" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:55.100" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:55.096" endtime="20210729 14:19:55.100"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:55.100" endtime="20210729 14:19:55.100"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:55.101" endtime="20210729 14:19:55.101"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:55.096" endtime="20210729 14:19:55.101"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:55.096" endtime="20210729 14:19:55.101"/>
</for>
<status status="FAIL" starttime="20210729 14:19:55.094" endtime="20210729 14:19:55.101"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:55.094" endtime="20210729 14:19:55.101"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤ abc!g</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:55.102" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:55.102" endtime="20210729 14:19:55.102"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:55.103" level="INFO">${payload} = {'username': '#¤ abc!g'}</msg>
<status status="PASS" starttime="20210729 14:19:55.102" endtime="20210729 14:19:55.103"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:55.107" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:55.107" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:55.103" endtime="20210729 14:19:55.107"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:55.107" endtime="20210729 14:19:55.108"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:55.108" endtime="20210729 14:19:55.108"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:55.103" endtime="20210729 14:19:55.108"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:55.103" endtime="20210729 14:19:55.108"/>
</for>
<status status="FAIL" starttime="20210729 14:19:55.101" endtime="20210729 14:19:55.108"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:55.101" endtime="20210729 14:19:55.108"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:55.083" endtime="20210729 14:19:55.108"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:55.113" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:55.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:55.122" level="INFO">${pids} = 14034
14041
14051</msg>
<status status="PASS" starttime="20210729 14:19:55.109" endtime="20210729 14:19:55.122"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:55.122" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:55.122" endtime="20210729 14:19:55.123"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:55.123" level="INFO">${pids} = ['14034', '14041', '14051']</msg>
<status status="PASS" starttime="20210729 14:19:55.123" endtime="20210729 14:19:55.123"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14034</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:55.126" level="INFO">Running command 'kill 14034 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:55.124" endtime="20210729 14:19:55.127"/>
</kw>
<status status="PASS" starttime="20210729 14:19:55.123" endtime="20210729 14:19:55.127"/>
</iter>
<iter>
<var name="${pid}">14041</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:55.130" level="INFO">Running command 'kill 14041 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:55.127" endtime="20210729 14:19:55.131"/>
</kw>
<status status="PASS" starttime="20210729 14:19:55.127" endtime="20210729 14:19:55.131"/>
</iter>
<iter>
<var name="${pid}">14051</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:55.136" level="INFO">Running command 'kill 14051 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:55.131" endtime="20210729 14:19:55.136"/>
</kw>
<status status="PASS" starttime="20210729 14:19:55.131" endtime="20210729 14:19:55.136"/>
</iter>
<status status="PASS" starttime="20210729 14:19:55.123" endtime="20210729 14:19:55.136"/>
</for>
<status status="PASS" starttime="20210729 14:19:55.123" endtime="20210729 14:19:55.136"/>
</branch>
<status status="PASS" starttime="20210729 14:19:55.123" endtime="20210729 14:19:55.136"/>
</if>
<status status="PASS" starttime="20210729 14:19:55.108" endtime="20210729 14:19:55.137"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤ abc!g'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:53.531" endtime="20210729 14:19:55.137">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t43" name="With Any Valid Token, Updating Username Of Each System User With #¤/abc!g() &amp;%¤fghjklQWERTY Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:55.141" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:55.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:55.153" level="INFO">${pids} = 14080</msg>
<status status="PASS" starttime="20210729 14:19:55.139" endtime="20210729 14:19:55.153"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:55.154" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:55.153" endtime="20210729 14:19:55.154"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:55.154" level="INFO">${pids} = ['14080']</msg>
<status status="PASS" starttime="20210729 14:19:55.154" endtime="20210729 14:19:55.154"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14080</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:55.157" level="INFO">Running command 'kill 14080 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:55.155" endtime="20210729 14:19:55.158"/>
</kw>
<status status="PASS" starttime="20210729 14:19:55.155" endtime="20210729 14:19:55.158"/>
</iter>
<status status="PASS" starttime="20210729 14:19:55.154" endtime="20210729 14:19:55.158"/>
</for>
<status status="PASS" starttime="20210729 14:19:55.154" endtime="20210729 14:19:55.158"/>
</branch>
<status status="PASS" starttime="20210729 14:19:55.154" endtime="20210729 14:19:55.158"/>
</if>
<status status="PASS" starttime="20210729 14:19:55.138" endtime="20210729 14:19:55.158"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:55.159" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:55.159" endtime="20210729 14:19:55.159"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:55.160" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:55.160" endtime="20210729 14:19:55.160"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:55.160" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:55.160" endtime="20210729 14:19:55.160"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:55.161" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:55.160" endtime="20210729 14:19:55.161"/>
</kw>
<msg timestamp="20210729 14:19:55.161" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:55.159" endtime="20210729 14:19:55.161"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:55.169" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:55.161" endtime="20210729 14:19:55.172"/>
</kw>
<status status="PASS" starttime="20210729 14:19:55.158" endtime="20210729 14:19:55.173"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:55.174" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:55.174" endtime="20210729 14:19:55.178"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:56.682" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:55.178" endtime="20210729 14:19:56.683"/>
</kw>
<status status="PASS" starttime="20210729 14:19:55.173" endtime="20210729 14:19:56.684"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:56.686" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:56.685" endtime="20210729 14:19:56.686"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:56.686" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:56.686" endtime="20210729 14:19:56.686"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:56.686" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:56.686" endtime="20210729 14:19:56.686"/>
</kw>
<msg timestamp="20210729 14:19:56.687" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:56.685" endtime="20210729 14:19:56.687"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:56.687" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:56.687" endtime="20210729 14:19:56.687"/>
</kw>
<status status="PASS" starttime="20210729 14:19:56.685" endtime="20210729 14:19:56.688"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:56.688" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:56.688" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:56.688" endtime="20210729 14:19:56.688"/>
</kw>
<status status="PASS" starttime="20210729 14:19:56.688" endtime="20210729 14:19:56.688"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:56.689" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:56.689" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:56.689" endtime="20210729 14:19:56.689"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:56.690" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:56.689" endtime="20210729 14:19:56.690"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:56.690" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:56.690" endtime="20210729 14:19:56.690"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:56.690" endtime="20210729 14:19:56.691"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:56.691" endtime="20210729 14:19:56.691"/>
</kw>
<status status="PASS" starttime="20210729 14:19:56.690" endtime="20210729 14:19:56.692"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:56.692" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:56.692" endtime="20210729 14:19:56.692"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:56.692" endtime="20210729 14:19:56.693"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:56.693" endtime="20210729 14:19:56.693"/>
</kw>
<status status="PASS" starttime="20210729 14:19:56.692" endtime="20210729 14:19:56.693"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:56.694" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:56.693" endtime="20210729 14:19:56.694"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:56.694" endtime="20210729 14:19:56.694"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:56.694" endtime="20210729 14:19:56.695"/>
</kw>
<status status="PASS" starttime="20210729 14:19:56.693" endtime="20210729 14:19:56.695"/>
</iter>
<status status="PASS" starttime="20210729 14:19:56.690" endtime="20210729 14:19:56.695"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:56.695" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:56.695" endtime="20210729 14:19:56.695"/>
</kw>
<status status="PASS" starttime="20210729 14:19:56.689" endtime="20210729 14:19:56.695"/>
</kw>
<status status="PASS" starttime="20210729 14:19:55.138" endtime="20210729 14:19:56.696"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/abc!g() &amp;%¤fghjklQWERTY</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:56.697" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:56.696" endtime="20210729 14:19:56.697"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:56.697" level="INFO">${payload} = {'username': '#¤/abc!g() &amp;%¤fghjklQWERTY'}</msg>
<status status="PASS" starttime="20210729 14:19:56.697" endtime="20210729 14:19:56.697"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:56.706" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:56.707" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:56.697" endtime="20210729 14:19:56.707"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:56.707" endtime="20210729 14:19:56.707"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:56.707" endtime="20210729 14:19:56.707"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:56.697" endtime="20210729 14:19:56.707"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:56.697" endtime="20210729 14:19:56.707"/>
</for>
<status status="FAIL" starttime="20210729 14:19:56.696" endtime="20210729 14:19:56.708"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:56.696" endtime="20210729 14:19:56.708"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/abc!g() &amp;%¤fghjklQWERTY</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:56.709" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:56.708" endtime="20210729 14:19:56.709"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:56.709" level="INFO">${payload} = {'username': '#¤/abc!g() &amp;%¤fghjklQWERTY'}</msg>
<status status="PASS" starttime="20210729 14:19:56.709" endtime="20210729 14:19:56.709"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:56.714" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:56.714" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:56.709" endtime="20210729 14:19:56.714"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:56.714" endtime="20210729 14:19:56.714"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:56.714" endtime="20210729 14:19:56.714"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:56.709" endtime="20210729 14:19:56.714"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:56.709" endtime="20210729 14:19:56.714"/>
</for>
<status status="FAIL" starttime="20210729 14:19:56.708" endtime="20210729 14:19:56.714"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:56.708" endtime="20210729 14:19:56.715"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Username To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>username_value=#¤/abc!g() &amp;%¤fghjklQWERTY</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:56.716" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:56.715" endtime="20210729 14:19:56.716"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>username=${username_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:56.716" level="INFO">${payload} = {'username': '#¤/abc!g() &amp;%¤fghjklQWERTY'}</msg>
<status status="PASS" starttime="20210729 14:19:56.716" endtime="20210729 14:19:56.716"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:56.720" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:56.721" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:56.716" endtime="20210729 14:19:56.721"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:56.721" endtime="20210729 14:19:56.721"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:56.721" endtime="20210729 14:19:56.721"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:56.716" endtime="20210729 14:19:56.721"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:56.716" endtime="20210729 14:19:56.721"/>
</for>
<status status="FAIL" starttime="20210729 14:19:56.715" endtime="20210729 14:19:56.721"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:56.715" endtime="20210729 14:19:56.721"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:56.696" endtime="20210729 14:19:56.721"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:56.725" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:56.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:56.735" level="INFO">${pids} = 14103
14110
14114</msg>
<status status="PASS" starttime="20210729 14:19:56.722" endtime="20210729 14:19:56.735"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:56.736" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:56.736" endtime="20210729 14:19:56.736"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:56.737" level="INFO">${pids} = ['14103', '14110', '14114']</msg>
<status status="PASS" starttime="20210729 14:19:56.736" endtime="20210729 14:19:56.737"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14103</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:56.740" level="INFO">Running command 'kill 14103 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:56.737" endtime="20210729 14:19:56.740"/>
</kw>
<status status="PASS" starttime="20210729 14:19:56.737" endtime="20210729 14:19:56.740"/>
</iter>
<iter>
<var name="${pid}">14110</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:56.743" level="INFO">Running command 'kill 14110 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:56.741" endtime="20210729 14:19:56.744"/>
</kw>
<status status="PASS" starttime="20210729 14:19:56.741" endtime="20210729 14:19:56.744"/>
</iter>
<iter>
<var name="${pid}">14114</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:56.748" level="INFO">Running command 'kill 14114 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:56.744" endtime="20210729 14:19:56.749"/>
</kw>
<status status="PASS" starttime="20210729 14:19:56.744" endtime="20210729 14:19:56.749"/>
</iter>
<status status="PASS" starttime="20210729 14:19:56.737" endtime="20210729 14:19:56.749"/>
</for>
<status status="PASS" starttime="20210729 14:19:56.736" endtime="20210729 14:19:56.749"/>
</branch>
<status status="PASS" starttime="20210729 14:19:56.736" endtime="20210729 14:19:56.749"/>
</if>
<status status="PASS" starttime="20210729 14:19:56.721" endtime="20210729 14:19:56.749"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set a
username as such:
{
"username": '#¤/abc!g() &amp;%¤fghjklQWERTY'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:55.137" endtime="20210729 14:19:56.750">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t44" name="With Any Valid Token, Updating Password Of Each System User With '' Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:56.756" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:56.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:56.767" level="INFO">${pids} = 14143</msg>
<status status="PASS" starttime="20210729 14:19:56.751" endtime="20210729 14:19:56.767"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:56.768" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:56.768" endtime="20210729 14:19:56.768"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:56.769" level="INFO">${pids} = ['14143']</msg>
<status status="PASS" starttime="20210729 14:19:56.769" endtime="20210729 14:19:56.769"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14143</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:56.779" level="INFO">Running command 'kill 14143 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:56.769" endtime="20210729 14:19:56.780"/>
</kw>
<status status="PASS" starttime="20210729 14:19:56.769" endtime="20210729 14:19:56.780"/>
</iter>
<status status="PASS" starttime="20210729 14:19:56.769" endtime="20210729 14:19:56.780"/>
</for>
<status status="PASS" starttime="20210729 14:19:56.768" endtime="20210729 14:19:56.781"/>
</branch>
<status status="PASS" starttime="20210729 14:19:56.768" endtime="20210729 14:19:56.781"/>
</if>
<status status="PASS" starttime="20210729 14:19:56.751" endtime="20210729 14:19:56.781"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:56.782" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:56.782" endtime="20210729 14:19:56.782"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:56.783" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:56.783" endtime="20210729 14:19:56.783"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:56.784" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:56.783" endtime="20210729 14:19:56.784"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:56.784" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:56.784" endtime="20210729 14:19:56.784"/>
</kw>
<msg timestamp="20210729 14:19:56.784" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:56.782" endtime="20210729 14:19:56.784"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:56.787" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:56.784" endtime="20210729 14:19:56.789"/>
</kw>
<status status="PASS" starttime="20210729 14:19:56.781" endtime="20210729 14:19:56.789"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:56.791" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:56.790" endtime="20210729 14:19:56.795"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:58.298" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:56.795" endtime="20210729 14:19:58.298"/>
</kw>
<status status="PASS" starttime="20210729 14:19:56.790" endtime="20210729 14:19:58.299"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:58.300" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:58.300" endtime="20210729 14:19:58.300"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:58.300" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:58.300" endtime="20210729 14:19:58.300"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:58.301" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:58.301" endtime="20210729 14:19:58.301"/>
</kw>
<msg timestamp="20210729 14:19:58.301" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:58.299" endtime="20210729 14:19:58.301"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:58.302" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:58.301" endtime="20210729 14:19:58.302"/>
</kw>
<status status="PASS" starttime="20210729 14:19:58.299" endtime="20210729 14:19:58.302"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:58.303" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:58.303" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:58.303" endtime="20210729 14:19:58.303"/>
</kw>
<status status="PASS" starttime="20210729 14:19:58.302" endtime="20210729 14:19:58.303"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:58.305" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:58.305" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:58.304" endtime="20210729 14:19:58.305"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:58.305" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:58.305" endtime="20210729 14:19:58.305"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:58.306" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:58.305" endtime="20210729 14:19:58.306"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:58.306" endtime="20210729 14:19:58.306"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:58.307" endtime="20210729 14:19:58.307"/>
</kw>
<status status="PASS" starttime="20210729 14:19:58.305" endtime="20210729 14:19:58.307"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:58.307" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:58.307" endtime="20210729 14:19:58.307"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:58.307" endtime="20210729 14:19:58.308"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:58.308" endtime="20210729 14:19:58.308"/>
</kw>
<status status="PASS" starttime="20210729 14:19:58.307" endtime="20210729 14:19:58.308"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:58.309" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:58.309" endtime="20210729 14:19:58.309"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:58.309" endtime="20210729 14:19:58.310"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:58.310" endtime="20210729 14:19:58.310"/>
</kw>
<status status="PASS" starttime="20210729 14:19:58.309" endtime="20210729 14:19:58.310"/>
</iter>
<status status="PASS" starttime="20210729 14:19:58.305" endtime="20210729 14:19:58.310"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:58.311" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:58.310" endtime="20210729 14:19:58.311"/>
</kw>
<status status="PASS" starttime="20210729 14:19:58.304" endtime="20210729 14:19:58.311"/>
</kw>
<status status="PASS" starttime="20210729 14:19:56.751" endtime="20210729 14:19:58.311"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=${EMPTY}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:58.313" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:58.313" endtime="20210729 14:19:58.313"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:58.313" level="INFO">${payload} = {'password': ''}</msg>
<status status="PASS" starttime="20210729 14:19:58.313" endtime="20210729 14:19:58.313"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:58.324" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:58.324" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:58.314" endtime="20210729 14:19:58.324"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:58.324" endtime="20210729 14:19:58.324"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:58.324" endtime="20210729 14:19:58.324"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:58.314" endtime="20210729 14:19:58.324"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:58.314" endtime="20210729 14:19:58.324"/>
</for>
<status status="FAIL" starttime="20210729 14:19:58.311" endtime="20210729 14:19:58.325"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:58.311" endtime="20210729 14:19:58.325"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=${EMPTY}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:58.326" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:58.326" endtime="20210729 14:19:58.326"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:58.327" level="INFO">${payload} = {'password': ''}</msg>
<status status="PASS" starttime="20210729 14:19:58.326" endtime="20210729 14:19:58.327"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:58.331" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:58.331" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:58.327" endtime="20210729 14:19:58.332"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:58.332" endtime="20210729 14:19:58.332"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:58.332" endtime="20210729 14:19:58.332"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:58.327" endtime="20210729 14:19:58.332"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:58.327" endtime="20210729 14:19:58.332"/>
</for>
<status status="FAIL" starttime="20210729 14:19:58.325" endtime="20210729 14:19:58.332"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:58.325" endtime="20210729 14:19:58.332"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=${EMPTY}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:58.334" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:58.334" endtime="20210729 14:19:58.334"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:58.334" level="INFO">${payload} = {'password': ''}</msg>
<status status="PASS" starttime="20210729 14:19:58.334" endtime="20210729 14:19:58.334"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:58.339" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:58.339" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:58.335" endtime="20210729 14:19:58.339"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:58.340" endtime="20210729 14:19:58.340"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:58.340" endtime="20210729 14:19:58.340"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:58.335" endtime="20210729 14:19:58.340"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:58.335" endtime="20210729 14:19:58.340"/>
</for>
<status status="FAIL" starttime="20210729 14:19:58.332" endtime="20210729 14:19:58.340"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:58.332" endtime="20210729 14:19:58.340"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:58.311" endtime="20210729 14:19:58.340"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:58.345" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:58.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:58.355" level="INFO">${pids} = 14166
14173
14178</msg>
<status status="PASS" starttime="20210729 14:19:58.342" endtime="20210729 14:19:58.355"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:58.356" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:58.355" endtime="20210729 14:19:58.356"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:58.357" level="INFO">${pids} = ['14166', '14173', '14178']</msg>
<status status="PASS" starttime="20210729 14:19:58.356" endtime="20210729 14:19:58.357"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14166</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:58.360" level="INFO">Running command 'kill 14166 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:58.357" endtime="20210729 14:19:58.361"/>
</kw>
<status status="PASS" starttime="20210729 14:19:58.357" endtime="20210729 14:19:58.361"/>
</iter>
<iter>
<var name="${pid}">14173</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:58.364" level="INFO">Running command 'kill 14173 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:58.361" endtime="20210729 14:19:58.365"/>
</kw>
<status status="PASS" starttime="20210729 14:19:58.361" endtime="20210729 14:19:58.365"/>
</iter>
<iter>
<var name="${pid}">14178</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:58.370" level="INFO">Running command 'kill 14178 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:58.366" endtime="20210729 14:19:58.371"/>
</kw>
<status status="PASS" starttime="20210729 14:19:58.365" endtime="20210729 14:19:58.371"/>
</iter>
<status status="PASS" starttime="20210729 14:19:58.357" endtime="20210729 14:19:58.371"/>
</for>
<status status="PASS" starttime="20210729 14:19:58.356" endtime="20210729 14:19:58.371"/>
</branch>
<status status="PASS" starttime="20210729 14:19:58.356" endtime="20210729 14:19:58.371"/>
</if>
<status status="PASS" starttime="20210729 14:19:58.341" endtime="20210729 14:19:58.372"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": ''
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:56.750" endtime="20210729 14:19:58.372">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t45" name="With Any Valid Token, Updating Password Of Each System User With abcdefg Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:58.376" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:58.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:58.385" level="INFO">${pids} = 14210</msg>
<status status="PASS" starttime="20210729 14:19:58.374" endtime="20210729 14:19:58.385"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:58.386" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:58.386" endtime="20210729 14:19:58.386"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:58.387" level="INFO">${pids} = ['14210']</msg>
<status status="PASS" starttime="20210729 14:19:58.386" endtime="20210729 14:19:58.387"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14210</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:58.390" level="INFO">Running command 'kill 14210 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:58.387" endtime="20210729 14:19:58.391"/>
</kw>
<status status="PASS" starttime="20210729 14:19:58.387" endtime="20210729 14:19:58.391"/>
</iter>
<status status="PASS" starttime="20210729 14:19:58.387" endtime="20210729 14:19:58.391"/>
</for>
<status status="PASS" starttime="20210729 14:19:58.386" endtime="20210729 14:19:58.391"/>
</branch>
<status status="PASS" starttime="20210729 14:19:58.386" endtime="20210729 14:19:58.391"/>
</if>
<status status="PASS" starttime="20210729 14:19:58.373" endtime="20210729 14:19:58.391"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:58.392" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:58.392" endtime="20210729 14:19:58.392"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:58.393" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:58.393" endtime="20210729 14:19:58.393"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:58.393" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:58.393" endtime="20210729 14:19:58.393"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:58.394" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:58.393" endtime="20210729 14:19:58.394"/>
</kw>
<msg timestamp="20210729 14:19:58.394" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:58.392" endtime="20210729 14:19:58.394"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:58.397" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:58.394" endtime="20210729 14:19:58.399"/>
</kw>
<status status="PASS" starttime="20210729 14:19:58.392" endtime="20210729 14:19:58.400"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:19:58.401" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:19:58.400" endtime="20210729 14:19:58.407"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:19:59.909" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:19:58.407" endtime="20210729 14:19:59.909"/>
</kw>
<status status="PASS" starttime="20210729 14:19:58.400" endtime="20210729 14:19:59.910"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:59.911" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:19:59.911" endtime="20210729 14:19:59.911"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:19:59.912" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:19:59.911" endtime="20210729 14:19:59.912"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:19:59.913" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:59.912" endtime="20210729 14:19:59.913"/>
</kw>
<msg timestamp="20210729 14:19:59.913" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:19:59.910" endtime="20210729 14:19:59.913"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:19:59.914" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:19:59.913" endtime="20210729 14:19:59.914"/>
</kw>
<status status="PASS" starttime="20210729 14:19:59.910" endtime="20210729 14:19:59.914"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:19:59.915" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:19:59.915" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:19:59.915" endtime="20210729 14:19:59.915"/>
</kw>
<status status="PASS" starttime="20210729 14:19:59.914" endtime="20210729 14:19:59.915"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:19:59.916" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:19:59.916" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:19:59.916" endtime="20210729 14:19:59.916"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:19:59.916" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:19:59.916" endtime="20210729 14:19:59.917"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:59.917" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:59.917" endtime="20210729 14:19:59.917"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:59.917" endtime="20210729 14:19:59.918"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:59.918" endtime="20210729 14:19:59.918"/>
</kw>
<status status="PASS" starttime="20210729 14:19:59.917" endtime="20210729 14:19:59.918"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:59.919" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:59.918" endtime="20210729 14:19:59.919"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:59.919" endtime="20210729 14:19:59.920"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:59.920" endtime="20210729 14:19:59.920"/>
</kw>
<status status="PASS" starttime="20210729 14:19:59.918" endtime="20210729 14:19:59.920"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:59.921" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:19:59.920" endtime="20210729 14:19:59.921"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:19:59.921" endtime="20210729 14:19:59.921"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:19:59.921" endtime="20210729 14:19:59.922"/>
</kw>
<status status="PASS" starttime="20210729 14:19:59.920" endtime="20210729 14:19:59.922"/>
</iter>
<status status="PASS" starttime="20210729 14:19:59.917" endtime="20210729 14:19:59.922"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:19:59.922" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:19:59.922" endtime="20210729 14:19:59.922"/>
</kw>
<status status="PASS" starttime="20210729 14:19:59.915" endtime="20210729 14:19:59.922"/>
</kw>
<status status="PASS" starttime="20210729 14:19:58.373" endtime="20210729 14:19:59.922"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdefg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:59.924" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:19:59.923" endtime="20210729 14:19:59.924"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:59.924" level="INFO">${payload} = {'password': 'abcdefg'}</msg>
<status status="PASS" starttime="20210729 14:19:59.924" endtime="20210729 14:19:59.924"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:59.934" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:59.934" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:59.925" endtime="20210729 14:19:59.934"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:59.934" endtime="20210729 14:19:59.934"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:59.935" endtime="20210729 14:19:59.935"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:59.924" endtime="20210729 14:19:59.935"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:59.924" endtime="20210729 14:19:59.935"/>
</for>
<status status="FAIL" starttime="20210729 14:19:59.923" endtime="20210729 14:19:59.935"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:59.923" endtime="20210729 14:19:59.935"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdefg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:59.936" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:19:59.936" endtime="20210729 14:19:59.936"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:59.937" level="INFO">${payload} = {'password': 'abcdefg'}</msg>
<status status="PASS" starttime="20210729 14:19:59.936" endtime="20210729 14:19:59.937"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:59.941" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:59.942" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:59.937" endtime="20210729 14:19:59.942"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:59.942" endtime="20210729 14:19:59.942"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:59.942" endtime="20210729 14:19:59.942"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:59.937" endtime="20210729 14:19:59.942"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:59.937" endtime="20210729 14:19:59.942"/>
</for>
<status status="FAIL" starttime="20210729 14:19:59.935" endtime="20210729 14:19:59.942"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:59.935" endtime="20210729 14:19:59.942"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdefg</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:59.944" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:19:59.943" endtime="20210729 14:19:59.944"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:19:59.944" level="INFO">${payload} = {'password': 'abcdefg'}</msg>
<status status="PASS" starttime="20210729 14:19:59.944" endtime="20210729 14:19:59.944"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:19:59.949" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:19:59.949" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:19:59.945" endtime="20210729 14:19:59.949"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:19:59.949" endtime="20210729 14:19:59.949"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:19:59.950" endtime="20210729 14:19:59.950"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:59.944" endtime="20210729 14:19:59.950"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:59.944" endtime="20210729 14:19:59.950"/>
</for>
<status status="FAIL" starttime="20210729 14:19:59.943" endtime="20210729 14:19:59.950"/>
</kw>
<status status="FAIL" starttime="20210729 14:19:59.942" endtime="20210729 14:19:59.950"/>
</iter>
<status status="FAIL" starttime="20210729 14:19:59.923" endtime="20210729 14:19:59.950"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:59.954" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:59.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:59.965" level="INFO">${pids} = 14233
14240
14250</msg>
<status status="PASS" starttime="20210729 14:19:59.951" endtime="20210729 14:19:59.965"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:59.966" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:59.965" endtime="20210729 14:19:59.966"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:59.967" level="INFO">${pids} = ['14233', '14240', '14250']</msg>
<status status="PASS" starttime="20210729 14:19:59.966" endtime="20210729 14:19:59.967"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14233</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:59.971" level="INFO">Running command 'kill 14233 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:59.967" endtime="20210729 14:19:59.971"/>
</kw>
<status status="PASS" starttime="20210729 14:19:59.967" endtime="20210729 14:19:59.971"/>
</iter>
<iter>
<var name="${pid}">14240</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:59.975" level="INFO">Running command 'kill 14240 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:59.972" endtime="20210729 14:19:59.976"/>
</kw>
<status status="PASS" starttime="20210729 14:19:59.972" endtime="20210729 14:19:59.976"/>
</iter>
<iter>
<var name="${pid}">14250</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:19:59.982" level="INFO">Running command 'kill 14250 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:59.977" endtime="20210729 14:19:59.983"/>
</kw>
<status status="PASS" starttime="20210729 14:19:59.976" endtime="20210729 14:19:59.983"/>
</iter>
<status status="PASS" starttime="20210729 14:19:59.967" endtime="20210729 14:19:59.983"/>
</for>
<status status="PASS" starttime="20210729 14:19:59.966" endtime="20210729 14:19:59.983"/>
</branch>
<status status="PASS" starttime="20210729 14:19:59.966" endtime="20210729 14:19:59.983"/>
</if>
<status status="PASS" starttime="20210729 14:19:59.950" endtime="20210729 14:19:59.983"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdefg'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:58.372" endtime="20210729 14:19:59.983">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t46" name="With Any Valid Token, Updating Password Of Each System User With abcdefgh Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:19:59.988" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:19:59.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:19:59.997" level="INFO">${pids} = 14279</msg>
<status status="PASS" starttime="20210729 14:19:59.985" endtime="20210729 14:19:59.997"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:59.998" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:19:59.997" endtime="20210729 14:19:59.998"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:19:59.999" level="INFO">${pids} = ['14279']</msg>
<status status="PASS" starttime="20210729 14:19:59.999" endtime="20210729 14:19:59.999"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14279</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:00.005" level="INFO">Running command 'kill 14279 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:19:59.999" endtime="20210729 14:20:00.005"/>
</kw>
<status status="PASS" starttime="20210729 14:19:59.999" endtime="20210729 14:20:00.005"/>
</iter>
<status status="PASS" starttime="20210729 14:19:59.999" endtime="20210729 14:20:00.005"/>
</for>
<status status="PASS" starttime="20210729 14:19:59.998" endtime="20210729 14:20:00.005"/>
</branch>
<status status="PASS" starttime="20210729 14:19:59.998" endtime="20210729 14:20:00.005"/>
</if>
<status status="PASS" starttime="20210729 14:19:59.985" endtime="20210729 14:20:00.006"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:00.007" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:00.006" endtime="20210729 14:20:00.007"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:00.008" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:00.008" endtime="20210729 14:20:00.008"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:00.009" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:00.009" endtime="20210729 14:20:00.009"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:00.009" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:00.009" endtime="20210729 14:20:00.009"/>
</kw>
<msg timestamp="20210729 14:20:00.010" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:00.007" endtime="20210729 14:20:00.010"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:00.014" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:00.010" endtime="20210729 14:20:00.015"/>
</kw>
<status status="PASS" starttime="20210729 14:20:00.006" endtime="20210729 14:20:00.016"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:00.017" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:00.017" endtime="20210729 14:20:00.034"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:01.544" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:00.036" endtime="20210729 14:20:01.544"/>
</kw>
<status status="PASS" starttime="20210729 14:20:00.016" endtime="20210729 14:20:01.544"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:01.546" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:01.546" endtime="20210729 14:20:01.546"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:01.547" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:01.547" endtime="20210729 14:20:01.547"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:01.548" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:01.548" endtime="20210729 14:20:01.548"/>
</kw>
<msg timestamp="20210729 14:20:01.548" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:01.545" endtime="20210729 14:20:01.548"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:01.549" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:01.548" endtime="20210729 14:20:01.549"/>
</kw>
<status status="PASS" starttime="20210729 14:20:01.545" endtime="20210729 14:20:01.549"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:01.550" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:01.550" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:01.550" endtime="20210729 14:20:01.550"/>
</kw>
<status status="PASS" starttime="20210729 14:20:01.549" endtime="20210729 14:20:01.550"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:01.551" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:01.551" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:01.551" endtime="20210729 14:20:01.551"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:01.551" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:01.551" endtime="20210729 14:20:01.551"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:01.552" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:01.552" endtime="20210729 14:20:01.552"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:01.552" endtime="20210729 14:20:01.553"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:01.553" endtime="20210729 14:20:01.553"/>
</kw>
<status status="PASS" starttime="20210729 14:20:01.552" endtime="20210729 14:20:01.553"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:01.553" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:01.553" endtime="20210729 14:20:01.553"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:01.553" endtime="20210729 14:20:01.554"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:01.554" endtime="20210729 14:20:01.554"/>
</kw>
<status status="PASS" starttime="20210729 14:20:01.553" endtime="20210729 14:20:01.554"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:01.555" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:01.554" endtime="20210729 14:20:01.555"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:01.555" endtime="20210729 14:20:01.555"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:01.556" endtime="20210729 14:20:01.556"/>
</kw>
<status status="PASS" starttime="20210729 14:20:01.554" endtime="20210729 14:20:01.556"/>
</iter>
<status status="PASS" starttime="20210729 14:20:01.551" endtime="20210729 14:20:01.556"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:01.556" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:01.556" endtime="20210729 14:20:01.556"/>
</kw>
<status status="PASS" starttime="20210729 14:20:01.550" endtime="20210729 14:20:01.556"/>
</kw>
<status status="PASS" starttime="20210729 14:19:59.985" endtime="20210729 14:20:01.556"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdefgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:01.558" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:01.557" endtime="20210729 14:20:01.558"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:01.558" level="INFO">${payload} = {'password': 'abcdefgh'}</msg>
<status status="PASS" starttime="20210729 14:20:01.558" endtime="20210729 14:20:01.558"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:01.568" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:01.569" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:01.558" endtime="20210729 14:20:01.569"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:01.569" endtime="20210729 14:20:01.569"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:01.569" endtime="20210729 14:20:01.569"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:01.558" endtime="20210729 14:20:01.569"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:01.558" endtime="20210729 14:20:01.569"/>
</for>
<status status="FAIL" starttime="20210729 14:20:01.557" endtime="20210729 14:20:01.569"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:01.557" endtime="20210729 14:20:01.569"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdefgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:01.570" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:01.570" endtime="20210729 14:20:01.570"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:01.571" level="INFO">${payload} = {'password': 'abcdefgh'}</msg>
<status status="PASS" starttime="20210729 14:20:01.571" endtime="20210729 14:20:01.571"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:01.575" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:01.575" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:01.571" endtime="20210729 14:20:01.575"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:01.575" endtime="20210729 14:20:01.575"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:01.575" endtime="20210729 14:20:01.575"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:01.571" endtime="20210729 14:20:01.575"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:01.571" endtime="20210729 14:20:01.576"/>
</for>
<status status="FAIL" starttime="20210729 14:20:01.570" endtime="20210729 14:20:01.576"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:01.569" endtime="20210729 14:20:01.576"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdefgh</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:01.577" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:01.576" endtime="20210729 14:20:01.577"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:01.577" level="INFO">${payload} = {'password': 'abcdefgh'}</msg>
<status status="PASS" starttime="20210729 14:20:01.577" endtime="20210729 14:20:01.577"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:01.582" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:01.582" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:01.577" endtime="20210729 14:20:01.582"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:01.582" endtime="20210729 14:20:01.582"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:01.582" endtime="20210729 14:20:01.582"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:01.577" endtime="20210729 14:20:01.582"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:01.577" endtime="20210729 14:20:01.582"/>
</for>
<status status="FAIL" starttime="20210729 14:20:01.576" endtime="20210729 14:20:01.582"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:01.576" endtime="20210729 14:20:01.583"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:01.557" endtime="20210729 14:20:01.583"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:01.588" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:01.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:01.597" level="INFO">${pids} = 14302
14309
14314</msg>
<status status="PASS" starttime="20210729 14:20:01.584" endtime="20210729 14:20:01.597"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:01.598" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:01.598" endtime="20210729 14:20:01.598"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:01.599" level="INFO">${pids} = ['14302', '14309', '14314']</msg>
<status status="PASS" starttime="20210729 14:20:01.599" endtime="20210729 14:20:01.599"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14302</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:01.604" level="INFO">Running command 'kill 14302 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:01.599" endtime="20210729 14:20:01.604"/>
</kw>
<status status="PASS" starttime="20210729 14:20:01.599" endtime="20210729 14:20:01.604"/>
</iter>
<iter>
<var name="${pid}">14309</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:01.608" level="INFO">Running command 'kill 14309 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:01.605" endtime="20210729 14:20:01.608"/>
</kw>
<status status="PASS" starttime="20210729 14:20:01.605" endtime="20210729 14:20:01.608"/>
</iter>
<iter>
<var name="${pid}">14314</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:01.612" level="INFO">Running command 'kill 14314 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:01.609" endtime="20210729 14:20:01.613"/>
</kw>
<status status="PASS" starttime="20210729 14:20:01.608" endtime="20210729 14:20:01.613"/>
</iter>
<status status="PASS" starttime="20210729 14:20:01.599" endtime="20210729 14:20:01.613"/>
</for>
<status status="PASS" starttime="20210729 14:20:01.598" endtime="20210729 14:20:01.613"/>
</branch>
<status status="PASS" starttime="20210729 14:20:01.598" endtime="20210729 14:20:01.613"/>
</if>
<status status="PASS" starttime="20210729 14:20:01.583" endtime="20210729 14:20:01.613"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdefgh'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:19:59.984" endtime="20210729 14:20:01.613">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t47" name="With Any Valid Token, Updating Password Of Each System User With abcdefghjklmnprstoöuüvyz Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:01.625" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:01.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:01.635" level="INFO">${pids} = 14343</msg>
<status status="PASS" starttime="20210729 14:20:01.616" endtime="20210729 14:20:01.635"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:01.636" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:01.635" endtime="20210729 14:20:01.636"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:01.637" level="INFO">${pids} = ['14343']</msg>
<status status="PASS" starttime="20210729 14:20:01.636" endtime="20210729 14:20:01.637"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14343</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:01.640" level="INFO">Running command 'kill 14343 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:01.637" endtime="20210729 14:20:01.641"/>
</kw>
<status status="PASS" starttime="20210729 14:20:01.637" endtime="20210729 14:20:01.641"/>
</iter>
<status status="PASS" starttime="20210729 14:20:01.637" endtime="20210729 14:20:01.641"/>
</for>
<status status="PASS" starttime="20210729 14:20:01.636" endtime="20210729 14:20:01.641"/>
</branch>
<status status="PASS" starttime="20210729 14:20:01.636" endtime="20210729 14:20:01.641"/>
</if>
<status status="PASS" starttime="20210729 14:20:01.615" endtime="20210729 14:20:01.641"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:01.642" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:01.642" endtime="20210729 14:20:01.642"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:01.643" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:01.643" endtime="20210729 14:20:01.643"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:01.643" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:01.643" endtime="20210729 14:20:01.643"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:01.644" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:01.644" endtime="20210729 14:20:01.644"/>
</kw>
<msg timestamp="20210729 14:20:01.644" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:01.642" endtime="20210729 14:20:01.644"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:01.651" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:01.644" endtime="20210729 14:20:01.652"/>
</kw>
<status status="PASS" starttime="20210729 14:20:01.641" endtime="20210729 14:20:01.653"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:01.654" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:01.654" endtime="20210729 14:20:01.658"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:03.167" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:01.659" endtime="20210729 14:20:03.168"/>
</kw>
<status status="PASS" starttime="20210729 14:20:01.653" endtime="20210729 14:20:03.168"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:03.169" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:03.169" endtime="20210729 14:20:03.169"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:03.170" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:03.169" endtime="20210729 14:20:03.170"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:03.170" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:03.170" endtime="20210729 14:20:03.170"/>
</kw>
<msg timestamp="20210729 14:20:03.170" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:03.169" endtime="20210729 14:20:03.170"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:03.171" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:03.170" endtime="20210729 14:20:03.171"/>
</kw>
<status status="PASS" starttime="20210729 14:20:03.168" endtime="20210729 14:20:03.171"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:03.172" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:03.172" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:03.171" endtime="20210729 14:20:03.172"/>
</kw>
<status status="PASS" starttime="20210729 14:20:03.171" endtime="20210729 14:20:03.172"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:03.173" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:03.173" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:03.172" endtime="20210729 14:20:03.173"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:03.173" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:03.173" endtime="20210729 14:20:03.173"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:03.173" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:03.173" endtime="20210729 14:20:03.173"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:03.174" endtime="20210729 14:20:03.174"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:03.174" endtime="20210729 14:20:03.174"/>
</kw>
<status status="PASS" starttime="20210729 14:20:03.173" endtime="20210729 14:20:03.174"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:03.175" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:03.175" endtime="20210729 14:20:03.175"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:03.175" endtime="20210729 14:20:03.176"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:03.176" endtime="20210729 14:20:03.176"/>
</kw>
<status status="PASS" starttime="20210729 14:20:03.175" endtime="20210729 14:20:03.176"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:03.176" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:03.176" endtime="20210729 14:20:03.176"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:03.177" endtime="20210729 14:20:03.177"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:03.177" endtime="20210729 14:20:03.178"/>
</kw>
<status status="PASS" starttime="20210729 14:20:03.176" endtime="20210729 14:20:03.178"/>
</iter>
<status status="PASS" starttime="20210729 14:20:03.173" endtime="20210729 14:20:03.178"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:03.178" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:03.178" endtime="20210729 14:20:03.178"/>
</kw>
<status status="PASS" starttime="20210729 14:20:03.172" endtime="20210729 14:20:03.178"/>
</kw>
<status status="PASS" starttime="20210729 14:20:01.615" endtime="20210729 14:20:03.178"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdefghjklmnprstoöuüvyz</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:03.180" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:03.179" endtime="20210729 14:20:03.180"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:03.180" level="INFO">${payload} = {'password': 'abcdefghjklmnprstoöuüvyz'}</msg>
<status status="PASS" starttime="20210729 14:20:03.180" endtime="20210729 14:20:03.180"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:03.189" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:03.190" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:03.181" endtime="20210729 14:20:03.190"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:03.190" endtime="20210729 14:20:03.190"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:03.190" endtime="20210729 14:20:03.190"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:03.181" endtime="20210729 14:20:03.190"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:03.180" endtime="20210729 14:20:03.190"/>
</for>
<status status="FAIL" starttime="20210729 14:20:03.179" endtime="20210729 14:20:03.191"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:03.179" endtime="20210729 14:20:03.191"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdefghjklmnprstoöuüvyz</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:03.192" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:03.191" endtime="20210729 14:20:03.192"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:03.192" level="INFO">${payload} = {'password': 'abcdefghjklmnprstoöuüvyz'}</msg>
<status status="PASS" starttime="20210729 14:20:03.192" endtime="20210729 14:20:03.192"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:03.197" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:03.197" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:03.193" endtime="20210729 14:20:03.197"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:03.197" endtime="20210729 14:20:03.197"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:03.197" endtime="20210729 14:20:03.197"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:03.192" endtime="20210729 14:20:03.197"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:03.192" endtime="20210729 14:20:03.197"/>
</for>
<status status="FAIL" starttime="20210729 14:20:03.191" endtime="20210729 14:20:03.198"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:03.191" endtime="20210729 14:20:03.198"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdefghjklmnprstoöuüvyz</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:03.199" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:03.198" endtime="20210729 14:20:03.199"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:03.199" level="INFO">${payload} = {'password': 'abcdefghjklmnprstoöuüvyz'}</msg>
<status status="PASS" starttime="20210729 14:20:03.199" endtime="20210729 14:20:03.199"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:03.203" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:03.204" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:03.200" endtime="20210729 14:20:03.204"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:03.204" endtime="20210729 14:20:03.204"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:03.204" endtime="20210729 14:20:03.204"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:03.200" endtime="20210729 14:20:03.204"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:03.199" endtime="20210729 14:20:03.204"/>
</for>
<status status="FAIL" starttime="20210729 14:20:03.198" endtime="20210729 14:20:03.204"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:03.198" endtime="20210729 14:20:03.204"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:03.179" endtime="20210729 14:20:03.204"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:03.209" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:03.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:03.218" level="INFO">${pids} = 14366
14373
14378</msg>
<status status="PASS" starttime="20210729 14:20:03.205" endtime="20210729 14:20:03.218"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:03.219" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:03.218" endtime="20210729 14:20:03.219"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:03.220" level="INFO">${pids} = ['14366', '14373', '14378']</msg>
<status status="PASS" starttime="20210729 14:20:03.219" endtime="20210729 14:20:03.220"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14366</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:03.223" level="INFO">Running command 'kill 14366 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:03.220" endtime="20210729 14:20:03.223"/>
</kw>
<status status="PASS" starttime="20210729 14:20:03.220" endtime="20210729 14:20:03.223"/>
</iter>
<iter>
<var name="${pid}">14373</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:03.226" level="INFO">Running command 'kill 14373 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:03.224" endtime="20210729 14:20:03.227"/>
</kw>
<status status="PASS" starttime="20210729 14:20:03.223" endtime="20210729 14:20:03.227"/>
</iter>
<iter>
<var name="${pid}">14378</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:03.231" level="INFO">Running command 'kill 14378 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:03.227" endtime="20210729 14:20:03.231"/>
</kw>
<status status="PASS" starttime="20210729 14:20:03.227" endtime="20210729 14:20:03.231"/>
</iter>
<status status="PASS" starttime="20210729 14:20:03.220" endtime="20210729 14:20:03.231"/>
</for>
<status status="PASS" starttime="20210729 14:20:03.219" endtime="20210729 14:20:03.231"/>
</branch>
<status status="PASS" starttime="20210729 14:20:03.219" endtime="20210729 14:20:03.232"/>
</if>
<status status="PASS" starttime="20210729 14:20:03.205" endtime="20210729 14:20:03.232"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdefghjklmnprstoöuüvyz'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:01.614" endtime="20210729 14:20:03.232">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t48" name="With Any Valid Token, Updating Password Of Each System User With ABCDEFG Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:03.237" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:03.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:03.247" level="INFO">${pids} = 14407</msg>
<status status="PASS" starttime="20210729 14:20:03.234" endtime="20210729 14:20:03.247"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:03.248" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:03.248" endtime="20210729 14:20:03.248"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:03.249" level="INFO">${pids} = ['14407']</msg>
<status status="PASS" starttime="20210729 14:20:03.249" endtime="20210729 14:20:03.249"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14407</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:03.253" level="INFO">Running command 'kill 14407 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:03.249" endtime="20210729 14:20:03.253"/>
</kw>
<status status="PASS" starttime="20210729 14:20:03.249" endtime="20210729 14:20:03.254"/>
</iter>
<status status="PASS" starttime="20210729 14:20:03.249" endtime="20210729 14:20:03.254"/>
</for>
<status status="PASS" starttime="20210729 14:20:03.248" endtime="20210729 14:20:03.254"/>
</branch>
<status status="PASS" starttime="20210729 14:20:03.248" endtime="20210729 14:20:03.254"/>
</if>
<status status="PASS" starttime="20210729 14:20:03.234" endtime="20210729 14:20:03.254"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:03.255" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:03.255" endtime="20210729 14:20:03.255"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:03.256" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:03.256" endtime="20210729 14:20:03.256"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:03.256" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:03.256" endtime="20210729 14:20:03.256"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:03.257" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:03.257" endtime="20210729 14:20:03.257"/>
</kw>
<msg timestamp="20210729 14:20:03.257" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:03.255" endtime="20210729 14:20:03.257"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:03.261" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:03.257" endtime="20210729 14:20:03.273"/>
</kw>
<status status="PASS" starttime="20210729 14:20:03.254" endtime="20210729 14:20:03.273"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:03.275" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:03.274" endtime="20210729 14:20:03.280"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:04.781" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:03.280" endtime="20210729 14:20:04.781"/>
</kw>
<status status="PASS" starttime="20210729 14:20:03.274" endtime="20210729 14:20:04.782"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:04.783" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:04.782" endtime="20210729 14:20:04.783"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:04.783" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:04.783" endtime="20210729 14:20:04.783"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:04.783" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:04.783" endtime="20210729 14:20:04.783"/>
</kw>
<msg timestamp="20210729 14:20:04.784" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:04.782" endtime="20210729 14:20:04.784"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:04.784" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:04.784" endtime="20210729 14:20:04.784"/>
</kw>
<status status="PASS" starttime="20210729 14:20:04.782" endtime="20210729 14:20:04.785"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:04.785" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:04.785" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:04.785" endtime="20210729 14:20:04.785"/>
</kw>
<status status="PASS" starttime="20210729 14:20:04.785" endtime="20210729 14:20:04.785"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:04.786" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:04.786" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:04.786" endtime="20210729 14:20:04.786"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:04.786" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:04.786" endtime="20210729 14:20:04.786"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:04.787" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:04.787" endtime="20210729 14:20:04.787"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:04.787" endtime="20210729 14:20:04.788"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:04.788" endtime="20210729 14:20:04.788"/>
</kw>
<status status="PASS" starttime="20210729 14:20:04.787" endtime="20210729 14:20:04.788"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:04.788" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:04.788" endtime="20210729 14:20:04.788"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:04.788" endtime="20210729 14:20:04.789"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:04.789" endtime="20210729 14:20:04.789"/>
</kw>
<status status="PASS" starttime="20210729 14:20:04.788" endtime="20210729 14:20:04.789"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:04.790" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:04.790" endtime="20210729 14:20:04.790"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:04.790" endtime="20210729 14:20:04.791"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:04.791" endtime="20210729 14:20:04.791"/>
</kw>
<status status="PASS" starttime="20210729 14:20:04.789" endtime="20210729 14:20:04.791"/>
</iter>
<status status="PASS" starttime="20210729 14:20:04.786" endtime="20210729 14:20:04.791"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:04.792" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:04.791" endtime="20210729 14:20:04.792"/>
</kw>
<status status="PASS" starttime="20210729 14:20:04.785" endtime="20210729 14:20:04.792"/>
</kw>
<status status="PASS" starttime="20210729 14:20:03.233" endtime="20210729 14:20:04.792"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCDEFG</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:04.793" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:04.793" endtime="20210729 14:20:04.793"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:04.793" level="INFO">${payload} = {'password': 'ABCDEFG'}</msg>
<status status="PASS" starttime="20210729 14:20:04.793" endtime="20210729 14:20:04.793"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:04.804" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:04.804" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:04.794" endtime="20210729 14:20:04.804"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:04.804" endtime="20210729 14:20:04.804"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:04.804" endtime="20210729 14:20:04.804"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:04.794" endtime="20210729 14:20:04.804"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:04.793" endtime="20210729 14:20:04.804"/>
</for>
<status status="FAIL" starttime="20210729 14:20:04.792" endtime="20210729 14:20:04.805"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:04.792" endtime="20210729 14:20:04.805"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCDEFG</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:04.806" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:04.805" endtime="20210729 14:20:04.806"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:04.806" level="INFO">${payload} = {'password': 'ABCDEFG'}</msg>
<status status="PASS" starttime="20210729 14:20:04.806" endtime="20210729 14:20:04.806"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:04.810" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:04.811" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:04.806" endtime="20210729 14:20:04.811"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:04.811" endtime="20210729 14:20:04.811"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:04.811" endtime="20210729 14:20:04.811"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:04.806" endtime="20210729 14:20:04.811"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:04.806" endtime="20210729 14:20:04.811"/>
</for>
<status status="FAIL" starttime="20210729 14:20:04.805" endtime="20210729 14:20:04.811"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:04.805" endtime="20210729 14:20:04.811"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCDEFG</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:04.813" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:04.812" endtime="20210729 14:20:04.813"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:04.813" level="INFO">${payload} = {'password': 'ABCDEFG'}</msg>
<status status="PASS" starttime="20210729 14:20:04.813" endtime="20210729 14:20:04.813"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:04.818" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:04.818" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:04.814" endtime="20210729 14:20:04.818"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:04.818" endtime="20210729 14:20:04.819"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:04.819" endtime="20210729 14:20:04.819"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:04.813" endtime="20210729 14:20:04.819"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:04.813" endtime="20210729 14:20:04.819"/>
</for>
<status status="FAIL" starttime="20210729 14:20:04.812" endtime="20210729 14:20:04.819"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:04.811" endtime="20210729 14:20:04.819"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:04.792" endtime="20210729 14:20:04.819"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:04.825" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:04.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:04.834" level="INFO">${pids} = 14430
14437
14443</msg>
<status status="PASS" starttime="20210729 14:20:04.820" endtime="20210729 14:20:04.834"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:04.835" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:04.835" endtime="20210729 14:20:04.835"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:04.836" level="INFO">${pids} = ['14430', '14437', '14443']</msg>
<status status="PASS" starttime="20210729 14:20:04.836" endtime="20210729 14:20:04.836"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14430</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:04.840" level="INFO">Running command 'kill 14430 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:04.837" endtime="20210729 14:20:04.840"/>
</kw>
<status status="PASS" starttime="20210729 14:20:04.836" endtime="20210729 14:20:04.840"/>
</iter>
<iter>
<var name="${pid}">14437</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:04.844" level="INFO">Running command 'kill 14437 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:04.841" endtime="20210729 14:20:04.844"/>
</kw>
<status status="PASS" starttime="20210729 14:20:04.841" endtime="20210729 14:20:04.844"/>
</iter>
<iter>
<var name="${pid}">14443</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:04.849" level="INFO">Running command 'kill 14443 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:04.845" endtime="20210729 14:20:04.850"/>
</kw>
<status status="PASS" starttime="20210729 14:20:04.845" endtime="20210729 14:20:04.850"/>
</iter>
<status status="PASS" starttime="20210729 14:20:04.836" endtime="20210729 14:20:04.850"/>
</for>
<status status="PASS" starttime="20210729 14:20:04.836" endtime="20210729 14:20:04.850"/>
</branch>
<status status="PASS" starttime="20210729 14:20:04.835" endtime="20210729 14:20:04.850"/>
</if>
<status status="PASS" starttime="20210729 14:20:04.820" endtime="20210729 14:20:04.850"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCDEFG'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:03.233" endtime="20210729 14:20:04.851">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t49" name="With Any Valid Token, Updating Password Of Each System User With ABCDEFGH Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:04.857" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:04.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:04.868" level="INFO">${pids} = 14472</msg>
<status status="PASS" starttime="20210729 14:20:04.853" endtime="20210729 14:20:04.868"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:04.869" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:04.868" endtime="20210729 14:20:04.869"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:04.869" level="INFO">${pids} = ['14472']</msg>
<status status="PASS" starttime="20210729 14:20:04.869" endtime="20210729 14:20:04.869"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14472</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:04.873" level="INFO">Running command 'kill 14472 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:04.870" endtime="20210729 14:20:04.873"/>
</kw>
<status status="PASS" starttime="20210729 14:20:04.870" endtime="20210729 14:20:04.873"/>
</iter>
<status status="PASS" starttime="20210729 14:20:04.869" endtime="20210729 14:20:04.873"/>
</for>
<status status="PASS" starttime="20210729 14:20:04.869" endtime="20210729 14:20:04.873"/>
</branch>
<status status="PASS" starttime="20210729 14:20:04.869" endtime="20210729 14:20:04.873"/>
</if>
<status status="PASS" starttime="20210729 14:20:04.852" endtime="20210729 14:20:04.873"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:04.875" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:04.874" endtime="20210729 14:20:04.875"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:04.875" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:04.875" endtime="20210729 14:20:04.875"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:04.876" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:04.875" endtime="20210729 14:20:04.876"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:04.876" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:04.876" endtime="20210729 14:20:04.876"/>
</kw>
<msg timestamp="20210729 14:20:04.876" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:04.875" endtime="20210729 14:20:04.876"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:04.880" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:04.876" endtime="20210729 14:20:04.882"/>
</kw>
<status status="PASS" starttime="20210729 14:20:04.874" endtime="20210729 14:20:04.882"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:04.884" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:04.883" endtime="20210729 14:20:04.889"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:06.390" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:04.889" endtime="20210729 14:20:06.391"/>
</kw>
<status status="PASS" starttime="20210729 14:20:04.883" endtime="20210729 14:20:06.392"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:06.394" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:06.393" endtime="20210729 14:20:06.394"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:06.394" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:06.394" endtime="20210729 14:20:06.394"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:06.395" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:06.394" endtime="20210729 14:20:06.395"/>
</kw>
<msg timestamp="20210729 14:20:06.395" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:06.393" endtime="20210729 14:20:06.395"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:06.396" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:06.395" endtime="20210729 14:20:06.396"/>
</kw>
<status status="PASS" starttime="20210729 14:20:06.393" endtime="20210729 14:20:06.396"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:06.397" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:06.397" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:06.397" endtime="20210729 14:20:06.397"/>
</kw>
<status status="PASS" starttime="20210729 14:20:06.396" endtime="20210729 14:20:06.397"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:06.398" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:06.398" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:06.397" endtime="20210729 14:20:06.398"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:06.398" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:06.398" endtime="20210729 14:20:06.398"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:06.399" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:06.398" endtime="20210729 14:20:06.399"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:06.399" endtime="20210729 14:20:06.400"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:06.400" endtime="20210729 14:20:06.400"/>
</kw>
<status status="PASS" starttime="20210729 14:20:06.398" endtime="20210729 14:20:06.401"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:06.401" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:06.401" endtime="20210729 14:20:06.401"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:06.401" endtime="20210729 14:20:06.402"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:06.402" endtime="20210729 14:20:06.402"/>
</kw>
<status status="PASS" starttime="20210729 14:20:06.401" endtime="20210729 14:20:06.402"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:06.403" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:06.402" endtime="20210729 14:20:06.403"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:06.403" endtime="20210729 14:20:06.403"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:06.403" endtime="20210729 14:20:06.404"/>
</kw>
<status status="PASS" starttime="20210729 14:20:06.402" endtime="20210729 14:20:06.404"/>
</iter>
<status status="PASS" starttime="20210729 14:20:06.398" endtime="20210729 14:20:06.404"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:06.404" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:06.404" endtime="20210729 14:20:06.404"/>
</kw>
<status status="PASS" starttime="20210729 14:20:06.397" endtime="20210729 14:20:06.404"/>
</kw>
<status status="PASS" starttime="20210729 14:20:04.852" endtime="20210729 14:20:06.404"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCDEFGH</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:06.406" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:06.406" endtime="20210729 14:20:06.406"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:06.406" level="INFO">${payload} = {'password': 'ABCDEFGH'}</msg>
<status status="PASS" starttime="20210729 14:20:06.406" endtime="20210729 14:20:06.406"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:06.416" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:06.416" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:06.407" endtime="20210729 14:20:06.416"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:06.416" endtime="20210729 14:20:06.416"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:06.417" endtime="20210729 14:20:06.417"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:06.407" endtime="20210729 14:20:06.417"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:06.406" endtime="20210729 14:20:06.417"/>
</for>
<status status="FAIL" starttime="20210729 14:20:06.405" endtime="20210729 14:20:06.417"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:06.405" endtime="20210729 14:20:06.417"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCDEFGH</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:06.418" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:06.418" endtime="20210729 14:20:06.418"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:06.418" level="INFO">${payload} = {'password': 'ABCDEFGH'}</msg>
<status status="PASS" starttime="20210729 14:20:06.418" endtime="20210729 14:20:06.418"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:06.423" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:06.423" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:06.419" endtime="20210729 14:20:06.423"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:06.423" endtime="20210729 14:20:06.423"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:06.423" endtime="20210729 14:20:06.423"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:06.419" endtime="20210729 14:20:06.423"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:06.418" endtime="20210729 14:20:06.423"/>
</for>
<status status="FAIL" starttime="20210729 14:20:06.417" endtime="20210729 14:20:06.423"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:06.417" endtime="20210729 14:20:06.423"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCDEFGH</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:06.425" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:06.424" endtime="20210729 14:20:06.425"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:06.425" level="INFO">${payload} = {'password': 'ABCDEFGH'}</msg>
<status status="PASS" starttime="20210729 14:20:06.425" endtime="20210729 14:20:06.425"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:06.429" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:06.430" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:06.425" endtime="20210729 14:20:06.430"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:06.430" endtime="20210729 14:20:06.430"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:06.430" endtime="20210729 14:20:06.430"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:06.425" endtime="20210729 14:20:06.430"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:06.425" endtime="20210729 14:20:06.430"/>
</for>
<status status="FAIL" starttime="20210729 14:20:06.424" endtime="20210729 14:20:06.430"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:06.423" endtime="20210729 14:20:06.430"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:06.405" endtime="20210729 14:20:06.431"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:06.436" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:06.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:06.445" level="INFO">${pids} = 14495
14502
14512</msg>
<status status="PASS" starttime="20210729 14:20:06.431" endtime="20210729 14:20:06.445"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:06.446" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:06.446" endtime="20210729 14:20:06.446"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:06.447" level="INFO">${pids} = ['14495', '14502', '14512']</msg>
<status status="PASS" starttime="20210729 14:20:06.447" endtime="20210729 14:20:06.447"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14495</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:06.450" level="INFO">Running command 'kill 14495 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:06.448" endtime="20210729 14:20:06.451"/>
</kw>
<status status="PASS" starttime="20210729 14:20:06.447" endtime="20210729 14:20:06.451"/>
</iter>
<iter>
<var name="${pid}">14502</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:06.454" level="INFO">Running command 'kill 14502 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:06.451" endtime="20210729 14:20:06.455"/>
</kw>
<status status="PASS" starttime="20210729 14:20:06.451" endtime="20210729 14:20:06.455"/>
</iter>
<iter>
<var name="${pid}">14512</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:06.458" level="INFO">Running command 'kill 14512 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:06.456" endtime="20210729 14:20:06.459"/>
</kw>
<status status="PASS" starttime="20210729 14:20:06.456" endtime="20210729 14:20:06.459"/>
</iter>
<status status="PASS" starttime="20210729 14:20:06.447" endtime="20210729 14:20:06.459"/>
</for>
<status status="PASS" starttime="20210729 14:20:06.447" endtime="20210729 14:20:06.459"/>
</branch>
<status status="PASS" starttime="20210729 14:20:06.446" endtime="20210729 14:20:06.459"/>
</if>
<status status="PASS" starttime="20210729 14:20:06.431" endtime="20210729 14:20:06.459"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCDEFGH'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:04.851" endtime="20210729 14:20:06.460">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t50" name="With Any Valid Token, Updating Password Of Each System User With ABCDEFGHJKLMNPRSTOÖUÜVYZ Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:06.478" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:06.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:06.494" level="INFO">${pids} = 14541</msg>
<status status="PASS" starttime="20210729 14:20:06.463" endtime="20210729 14:20:06.494"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:06.495" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:06.495" endtime="20210729 14:20:06.496"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:06.497" level="INFO">${pids} = ['14541']</msg>
<status status="PASS" starttime="20210729 14:20:06.496" endtime="20210729 14:20:06.497"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14541</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:06.501" level="INFO">Running command 'kill 14541 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:06.497" endtime="20210729 14:20:06.501"/>
</kw>
<status status="PASS" starttime="20210729 14:20:06.497" endtime="20210729 14:20:06.501"/>
</iter>
<status status="PASS" starttime="20210729 14:20:06.497" endtime="20210729 14:20:06.501"/>
</for>
<status status="PASS" starttime="20210729 14:20:06.496" endtime="20210729 14:20:06.501"/>
</branch>
<status status="PASS" starttime="20210729 14:20:06.496" endtime="20210729 14:20:06.501"/>
</if>
<status status="PASS" starttime="20210729 14:20:06.461" endtime="20210729 14:20:06.502"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:06.503" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:06.502" endtime="20210729 14:20:06.503"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:06.503" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:06.503" endtime="20210729 14:20:06.503"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:06.504" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:06.504" endtime="20210729 14:20:06.504"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:06.504" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:06.504" endtime="20210729 14:20:06.504"/>
</kw>
<msg timestamp="20210729 14:20:06.505" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:06.503" endtime="20210729 14:20:06.505"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:06.508" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:06.505" endtime="20210729 14:20:06.510"/>
</kw>
<status status="PASS" starttime="20210729 14:20:06.502" endtime="20210729 14:20:06.510"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:06.511" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:06.511" endtime="20210729 14:20:06.516"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:08.018" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:06.517" endtime="20210729 14:20:08.018"/>
</kw>
<status status="PASS" starttime="20210729 14:20:06.510" endtime="20210729 14:20:08.018"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:08.019" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:08.019" endtime="20210729 14:20:08.019"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:08.020" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:08.019" endtime="20210729 14:20:08.020"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:08.021" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:08.020" endtime="20210729 14:20:08.021"/>
</kw>
<msg timestamp="20210729 14:20:08.021" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:08.019" endtime="20210729 14:20:08.021"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:08.022" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:08.021" endtime="20210729 14:20:08.022"/>
</kw>
<status status="PASS" starttime="20210729 14:20:08.018" endtime="20210729 14:20:08.022"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:08.023" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:08.023" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:08.022" endtime="20210729 14:20:08.023"/>
</kw>
<status status="PASS" starttime="20210729 14:20:08.022" endtime="20210729 14:20:08.023"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:08.023" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:08.024" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:08.023" endtime="20210729 14:20:08.024"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:08.024" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:08.024" endtime="20210729 14:20:08.024"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:08.024" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:08.024" endtime="20210729 14:20:08.024"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:08.024" endtime="20210729 14:20:08.025"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:08.025" endtime="20210729 14:20:08.025"/>
</kw>
<status status="PASS" starttime="20210729 14:20:08.024" endtime="20210729 14:20:08.025"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:08.026" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:08.026" endtime="20210729 14:20:08.026"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:08.026" endtime="20210729 14:20:08.026"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:08.027" endtime="20210729 14:20:08.027"/>
</kw>
<status status="PASS" starttime="20210729 14:20:08.025" endtime="20210729 14:20:08.027"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:08.027" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:08.027" endtime="20210729 14:20:08.027"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:08.027" endtime="20210729 14:20:08.028"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:08.028" endtime="20210729 14:20:08.028"/>
</kw>
<status status="PASS" starttime="20210729 14:20:08.027" endtime="20210729 14:20:08.028"/>
</iter>
<status status="PASS" starttime="20210729 14:20:08.024" endtime="20210729 14:20:08.028"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:08.029" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:08.028" endtime="20210729 14:20:08.029"/>
</kw>
<status status="PASS" starttime="20210729 14:20:08.023" endtime="20210729 14:20:08.029"/>
</kw>
<status status="PASS" starttime="20210729 14:20:06.461" endtime="20210729 14:20:08.029"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCDEFGHJKLMNPRSTOÖUÜVYZ</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:08.030" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:08.030" endtime="20210729 14:20:08.031"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:08.031" level="INFO">${payload} = {'password': 'ABCDEFGHJKLMNPRSTOÖUÜVYZ'}</msg>
<status status="PASS" starttime="20210729 14:20:08.031" endtime="20210729 14:20:08.031"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:08.040" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:08.041" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:08.031" endtime="20210729 14:20:08.041"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:08.041" endtime="20210729 14:20:08.041"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:08.041" endtime="20210729 14:20:08.041"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:08.031" endtime="20210729 14:20:08.041"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:08.031" endtime="20210729 14:20:08.041"/>
</for>
<status status="FAIL" starttime="20210729 14:20:08.030" endtime="20210729 14:20:08.041"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:08.030" endtime="20210729 14:20:08.041"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCDEFGHJKLMNPRSTOÖUÜVYZ</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:08.043" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:08.042" endtime="20210729 14:20:08.043"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:08.043" level="INFO">${payload} = {'password': 'ABCDEFGHJKLMNPRSTOÖUÜVYZ'}</msg>
<status status="PASS" starttime="20210729 14:20:08.043" endtime="20210729 14:20:08.043"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:08.048" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:08.049" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:08.043" endtime="20210729 14:20:08.049"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:08.049" endtime="20210729 14:20:08.049"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:08.049" endtime="20210729 14:20:08.049"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:08.043" endtime="20210729 14:20:08.049"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:08.043" endtime="20210729 14:20:08.049"/>
</for>
<status status="FAIL" starttime="20210729 14:20:08.042" endtime="20210729 14:20:08.049"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:08.042" endtime="20210729 14:20:08.049"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCDEFGHJKLMNPRSTOÖUÜVYZ</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:08.050" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:08.050" endtime="20210729 14:20:08.050"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:08.051" level="INFO">${payload} = {'password': 'ABCDEFGHJKLMNPRSTOÖUÜVYZ'}</msg>
<status status="PASS" starttime="20210729 14:20:08.051" endtime="20210729 14:20:08.051"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:08.055" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:08.055" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:08.051" endtime="20210729 14:20:08.055"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:08.055" endtime="20210729 14:20:08.056"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:08.056" endtime="20210729 14:20:08.056"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:08.051" endtime="20210729 14:20:08.056"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:08.051" endtime="20210729 14:20:08.056"/>
</for>
<status status="FAIL" starttime="20210729 14:20:08.049" endtime="20210729 14:20:08.056"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:08.049" endtime="20210729 14:20:08.056"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:08.029" endtime="20210729 14:20:08.056"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:08.062" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:08.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:08.071" level="INFO">${pids} = 14564
14571
14582</msg>
<status status="PASS" starttime="20210729 14:20:08.057" endtime="20210729 14:20:08.071"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:08.072" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:08.071" endtime="20210729 14:20:08.072"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:08.072" level="INFO">${pids} = ['14564', '14571', '14582']</msg>
<status status="PASS" starttime="20210729 14:20:08.072" endtime="20210729 14:20:08.073"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14564</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:08.076" level="INFO">Running command 'kill 14564 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:08.073" endtime="20210729 14:20:08.076"/>
</kw>
<status status="PASS" starttime="20210729 14:20:08.073" endtime="20210729 14:20:08.076"/>
</iter>
<iter>
<var name="${pid}">14571</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:08.080" level="INFO">Running command 'kill 14571 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:08.076" endtime="20210729 14:20:08.081"/>
</kw>
<status status="PASS" starttime="20210729 14:20:08.076" endtime="20210729 14:20:08.081"/>
</iter>
<iter>
<var name="${pid}">14582</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:08.086" level="INFO">Running command 'kill 14582 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:08.081" endtime="20210729 14:20:08.086"/>
</kw>
<status status="PASS" starttime="20210729 14:20:08.081" endtime="20210729 14:20:08.086"/>
</iter>
<status status="PASS" starttime="20210729 14:20:08.073" endtime="20210729 14:20:08.086"/>
</for>
<status status="PASS" starttime="20210729 14:20:08.072" endtime="20210729 14:20:08.086"/>
</branch>
<status status="PASS" starttime="20210729 14:20:08.072" endtime="20210729 14:20:08.086"/>
</if>
<status status="PASS" starttime="20210729 14:20:08.056" endtime="20210729 14:20:08.086"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCDEFGHJKLMNPRSTOÖUÜVYZ'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:06.460" endtime="20210729 14:20:08.087">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t51" name="With Any Valid Token, Updating Password Of Each System User With 0123456 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:08.094" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:08.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:08.103" level="INFO">${pids} = 14611</msg>
<status status="PASS" starttime="20210729 14:20:08.089" endtime="20210729 14:20:08.103"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:08.104" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:08.103" endtime="20210729 14:20:08.104"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:08.105" level="INFO">${pids} = ['14611']</msg>
<status status="PASS" starttime="20210729 14:20:08.104" endtime="20210729 14:20:08.105"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14611</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:08.108" level="INFO">Running command 'kill 14611 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:08.105" endtime="20210729 14:20:08.108"/>
</kw>
<status status="PASS" starttime="20210729 14:20:08.105" endtime="20210729 14:20:08.108"/>
</iter>
<status status="PASS" starttime="20210729 14:20:08.105" endtime="20210729 14:20:08.108"/>
</for>
<status status="PASS" starttime="20210729 14:20:08.104" endtime="20210729 14:20:08.108"/>
</branch>
<status status="PASS" starttime="20210729 14:20:08.104" endtime="20210729 14:20:08.108"/>
</if>
<status status="PASS" starttime="20210729 14:20:08.089" endtime="20210729 14:20:08.109"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:08.110" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:08.109" endtime="20210729 14:20:08.110"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:08.110" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:08.110" endtime="20210729 14:20:08.110"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:08.111" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:08.110" endtime="20210729 14:20:08.111"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:08.111" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:08.111" endtime="20210729 14:20:08.112"/>
</kw>
<msg timestamp="20210729 14:20:08.112" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:08.110" endtime="20210729 14:20:08.112"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:08.115" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:08.112" endtime="20210729 14:20:08.117"/>
</kw>
<status status="PASS" starttime="20210729 14:20:08.109" endtime="20210729 14:20:08.117"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:08.121" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:08.120" endtime="20210729 14:20:08.125"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:09.631" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:08.125" endtime="20210729 14:20:09.632"/>
</kw>
<status status="PASS" starttime="20210729 14:20:08.119" endtime="20210729 14:20:09.633"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:09.637" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:09.636" endtime="20210729 14:20:09.637"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:09.637" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:09.637" endtime="20210729 14:20:09.637"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:09.638" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:09.637" endtime="20210729 14:20:09.638"/>
</kw>
<msg timestamp="20210729 14:20:09.638" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:09.636" endtime="20210729 14:20:09.638"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:09.638" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:09.638" endtime="20210729 14:20:09.639"/>
</kw>
<status status="PASS" starttime="20210729 14:20:09.634" endtime="20210729 14:20:09.639"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:09.639" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:09.639" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:09.639" endtime="20210729 14:20:09.639"/>
</kw>
<status status="PASS" starttime="20210729 14:20:09.639" endtime="20210729 14:20:09.640"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:09.640" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:09.640" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:09.640" endtime="20210729 14:20:09.640"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:09.641" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:09.640" endtime="20210729 14:20:09.641"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:09.641" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:09.641" endtime="20210729 14:20:09.641"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:09.641" endtime="20210729 14:20:09.642"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:09.642" endtime="20210729 14:20:09.642"/>
</kw>
<status status="PASS" starttime="20210729 14:20:09.641" endtime="20210729 14:20:09.642"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:09.642" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:09.642" endtime="20210729 14:20:09.643"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:09.643" endtime="20210729 14:20:09.643"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:09.643" endtime="20210729 14:20:09.643"/>
</kw>
<status status="PASS" starttime="20210729 14:20:09.642" endtime="20210729 14:20:09.644"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:09.644" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:09.644" endtime="20210729 14:20:09.644"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:09.644" endtime="20210729 14:20:09.645"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:09.645" endtime="20210729 14:20:09.645"/>
</kw>
<status status="PASS" starttime="20210729 14:20:09.644" endtime="20210729 14:20:09.645"/>
</iter>
<status status="PASS" starttime="20210729 14:20:09.641" endtime="20210729 14:20:09.645"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:09.646" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:09.645" endtime="20210729 14:20:09.646"/>
</kw>
<status status="PASS" starttime="20210729 14:20:09.640" endtime="20210729 14:20:09.646"/>
</kw>
<status status="PASS" starttime="20210729 14:20:08.088" endtime="20210729 14:20:09.646"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=0123456</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:09.647" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:09.647" endtime="20210729 14:20:09.647"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:09.648" level="INFO">${payload} = {'password': '0123456'}</msg>
<status status="PASS" starttime="20210729 14:20:09.648" endtime="20210729 14:20:09.648"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:09.656" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:09.657" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:09.648" endtime="20210729 14:20:09.657"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:09.657" endtime="20210729 14:20:09.657"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:09.657" endtime="20210729 14:20:09.657"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:09.648" endtime="20210729 14:20:09.657"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:09.648" endtime="20210729 14:20:09.657"/>
</for>
<status status="FAIL" starttime="20210729 14:20:09.646" endtime="20210729 14:20:09.657"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:09.646" endtime="20210729 14:20:09.657"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=0123456</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:09.659" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:09.658" endtime="20210729 14:20:09.659"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:09.659" level="INFO">${payload} = {'password': '0123456'}</msg>
<status status="PASS" starttime="20210729 14:20:09.659" endtime="20210729 14:20:09.659"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:09.664" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:09.664" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:09.660" endtime="20210729 14:20:09.664"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:09.664" endtime="20210729 14:20:09.664"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:09.664" endtime="20210729 14:20:09.664"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:09.660" endtime="20210729 14:20:09.664"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:09.660" endtime="20210729 14:20:09.664"/>
</for>
<status status="FAIL" starttime="20210729 14:20:09.658" endtime="20210729 14:20:09.664"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:09.658" endtime="20210729 14:20:09.664"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=0123456</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:09.665" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:09.665" endtime="20210729 14:20:09.665"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:09.666" level="INFO">${payload} = {'password': '0123456'}</msg>
<status status="PASS" starttime="20210729 14:20:09.666" endtime="20210729 14:20:09.666"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:09.670" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:09.670" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:09.666" endtime="20210729 14:20:09.670"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:09.671" endtime="20210729 14:20:09.671"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:09.671" endtime="20210729 14:20:09.671"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:09.666" endtime="20210729 14:20:09.671"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:09.666" endtime="20210729 14:20:09.671"/>
</for>
<status status="FAIL" starttime="20210729 14:20:09.665" endtime="20210729 14:20:09.671"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:09.664" endtime="20210729 14:20:09.671"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:09.646" endtime="20210729 14:20:09.671"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:09.678" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:09.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:09.687" level="INFO">${pids} = 14634
14641
14645</msg>
<status status="PASS" starttime="20210729 14:20:09.672" endtime="20210729 14:20:09.687"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:09.688" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:09.687" endtime="20210729 14:20:09.688"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:09.688" level="INFO">${pids} = ['14634', '14641', '14645']</msg>
<status status="PASS" starttime="20210729 14:20:09.688" endtime="20210729 14:20:09.688"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14634</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:09.693" level="INFO">Running command 'kill 14634 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:09.689" endtime="20210729 14:20:09.693"/>
</kw>
<status status="PASS" starttime="20210729 14:20:09.689" endtime="20210729 14:20:09.693"/>
</iter>
<iter>
<var name="${pid}">14641</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:09.696" level="INFO">Running command 'kill 14641 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:09.694" endtime="20210729 14:20:09.697"/>
</kw>
<status status="PASS" starttime="20210729 14:20:09.693" endtime="20210729 14:20:09.697"/>
</iter>
<iter>
<var name="${pid}">14645</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:09.701" level="INFO">Running command 'kill 14645 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:09.697" endtime="20210729 14:20:09.701"/>
</kw>
<status status="PASS" starttime="20210729 14:20:09.697" endtime="20210729 14:20:09.702"/>
</iter>
<status status="PASS" starttime="20210729 14:20:09.688" endtime="20210729 14:20:09.702"/>
</for>
<status status="PASS" starttime="20210729 14:20:09.688" endtime="20210729 14:20:09.702"/>
</branch>
<status status="PASS" starttime="20210729 14:20:09.688" endtime="20210729 14:20:09.702"/>
</if>
<status status="PASS" starttime="20210729 14:20:09.671" endtime="20210729 14:20:09.702"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": '0123456'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:08.088" endtime="20210729 14:20:09.702">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t52" name="With Any Valid Token, Updating Password Of Each System User With 01234567 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:09.707" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:09.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:09.722" level="INFO">${pids} = 14674</msg>
<status status="PASS" starttime="20210729 14:20:09.704" endtime="20210729 14:20:09.722"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:09.723" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:09.722" endtime="20210729 14:20:09.723"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:09.724" level="INFO">${pids} = ['14674']</msg>
<status status="PASS" starttime="20210729 14:20:09.724" endtime="20210729 14:20:09.724"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14674</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:09.728" level="INFO">Running command 'kill 14674 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:09.725" endtime="20210729 14:20:09.728"/>
</kw>
<status status="PASS" starttime="20210729 14:20:09.725" endtime="20210729 14:20:09.728"/>
</iter>
<status status="PASS" starttime="20210729 14:20:09.724" endtime="20210729 14:20:09.728"/>
</for>
<status status="PASS" starttime="20210729 14:20:09.724" endtime="20210729 14:20:09.729"/>
</branch>
<status status="PASS" starttime="20210729 14:20:09.724" endtime="20210729 14:20:09.729"/>
</if>
<status status="PASS" starttime="20210729 14:20:09.704" endtime="20210729 14:20:09.729"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:09.730" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:09.730" endtime="20210729 14:20:09.731"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:09.732" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:09.732" endtime="20210729 14:20:09.732"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:09.732" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:09.732" endtime="20210729 14:20:09.732"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:09.733" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:09.732" endtime="20210729 14:20:09.733"/>
</kw>
<msg timestamp="20210729 14:20:09.733" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:09.731" endtime="20210729 14:20:09.733"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:09.736" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:09.733" endtime="20210729 14:20:09.737"/>
</kw>
<status status="PASS" starttime="20210729 14:20:09.729" endtime="20210729 14:20:09.738"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:09.739" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:09.738" endtime="20210729 14:20:09.742"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:11.244" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:09.743" endtime="20210729 14:20:11.244"/>
</kw>
<status status="PASS" starttime="20210729 14:20:09.738" endtime="20210729 14:20:11.244"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:11.246" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:11.245" endtime="20210729 14:20:11.246"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:11.247" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:11.246" endtime="20210729 14:20:11.247"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:11.248" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:11.247" endtime="20210729 14:20:11.248"/>
</kw>
<msg timestamp="20210729 14:20:11.248" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:11.245" endtime="20210729 14:20:11.248"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:11.248" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:11.248" endtime="20210729 14:20:11.249"/>
</kw>
<status status="PASS" starttime="20210729 14:20:11.244" endtime="20210729 14:20:11.249"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:11.249" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:11.249" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:11.249" endtime="20210729 14:20:11.249"/>
</kw>
<status status="PASS" starttime="20210729 14:20:11.249" endtime="20210729 14:20:11.250"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:11.250" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:11.250" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:11.250" endtime="20210729 14:20:11.250"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:11.251" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:11.250" endtime="20210729 14:20:11.251"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:11.251" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:11.251" endtime="20210729 14:20:11.251"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:11.251" endtime="20210729 14:20:11.252"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:11.252" endtime="20210729 14:20:11.252"/>
</kw>
<status status="PASS" starttime="20210729 14:20:11.251" endtime="20210729 14:20:11.252"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:11.253" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:11.252" endtime="20210729 14:20:11.253"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:11.253" endtime="20210729 14:20:11.253"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:11.253" endtime="20210729 14:20:11.254"/>
</kw>
<status status="PASS" starttime="20210729 14:20:11.252" endtime="20210729 14:20:11.254"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:11.254" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:11.254" endtime="20210729 14:20:11.254"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:11.254" endtime="20210729 14:20:11.255"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:11.255" endtime="20210729 14:20:11.255"/>
</kw>
<status status="PASS" starttime="20210729 14:20:11.254" endtime="20210729 14:20:11.255"/>
</iter>
<status status="PASS" starttime="20210729 14:20:11.251" endtime="20210729 14:20:11.255"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:11.256" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:11.256" endtime="20210729 14:20:11.256"/>
</kw>
<status status="PASS" starttime="20210729 14:20:11.250" endtime="20210729 14:20:11.256"/>
</kw>
<status status="PASS" starttime="20210729 14:20:09.703" endtime="20210729 14:20:11.256"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=01234567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:11.258" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:11.257" endtime="20210729 14:20:11.258"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:11.258" level="INFO">${payload} = {'password': '01234567'}</msg>
<status status="PASS" starttime="20210729 14:20:11.258" endtime="20210729 14:20:11.258"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:11.267" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:11.268" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:11.258" endtime="20210729 14:20:11.268"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:11.268" endtime="20210729 14:20:11.268"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:11.268" endtime="20210729 14:20:11.268"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:11.258" endtime="20210729 14:20:11.268"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:11.258" endtime="20210729 14:20:11.268"/>
</for>
<status status="FAIL" starttime="20210729 14:20:11.257" endtime="20210729 14:20:11.268"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:11.257" endtime="20210729 14:20:11.268"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=01234567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:11.270" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:11.269" endtime="20210729 14:20:11.270"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:11.270" level="INFO">${payload} = {'password': '01234567'}</msg>
<status status="PASS" starttime="20210729 14:20:11.270" endtime="20210729 14:20:11.270"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:11.275" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:11.275" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:11.271" endtime="20210729 14:20:11.275"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:11.275" endtime="20210729 14:20:11.275"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:11.275" endtime="20210729 14:20:11.275"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:11.271" endtime="20210729 14:20:11.275"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:11.270" endtime="20210729 14:20:11.275"/>
</for>
<status status="FAIL" starttime="20210729 14:20:11.269" endtime="20210729 14:20:11.275"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:11.269" endtime="20210729 14:20:11.275"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=01234567</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:11.276" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:11.276" endtime="20210729 14:20:11.276"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:11.277" level="INFO">${payload} = {'password': '01234567'}</msg>
<status status="PASS" starttime="20210729 14:20:11.276" endtime="20210729 14:20:11.277"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:11.281" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:11.282" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:11.277" endtime="20210729 14:20:11.282"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:11.282" endtime="20210729 14:20:11.282"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:11.282" endtime="20210729 14:20:11.282"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:11.277" endtime="20210729 14:20:11.282"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:11.277" endtime="20210729 14:20:11.282"/>
</for>
<status status="FAIL" starttime="20210729 14:20:11.276" endtime="20210729 14:20:11.282"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:11.275" endtime="20210729 14:20:11.283"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:11.256" endtime="20210729 14:20:11.283"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:11.288" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:11.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:11.298" level="INFO">${pids} = 14697
14704
14714</msg>
<status status="PASS" starttime="20210729 14:20:11.283" endtime="20210729 14:20:11.298"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:11.299" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:11.299" endtime="20210729 14:20:11.299"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:11.300" level="INFO">${pids} = ['14697', '14704', '14714']</msg>
<status status="PASS" starttime="20210729 14:20:11.300" endtime="20210729 14:20:11.300"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14697</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:11.303" level="INFO">Running command 'kill 14697 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:11.301" endtime="20210729 14:20:11.304"/>
</kw>
<status status="PASS" starttime="20210729 14:20:11.300" endtime="20210729 14:20:11.304"/>
</iter>
<iter>
<var name="${pid}">14704</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:11.307" level="INFO">Running command 'kill 14704 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:11.304" endtime="20210729 14:20:11.308"/>
</kw>
<status status="PASS" starttime="20210729 14:20:11.304" endtime="20210729 14:20:11.308"/>
</iter>
<iter>
<var name="${pid}">14714</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:11.319" level="INFO">Running command 'kill 14714 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:11.308" endtime="20210729 14:20:11.320"/>
</kw>
<status status="PASS" starttime="20210729 14:20:11.308" endtime="20210729 14:20:11.320"/>
</iter>
<status status="PASS" starttime="20210729 14:20:11.300" endtime="20210729 14:20:11.320"/>
</for>
<status status="PASS" starttime="20210729 14:20:11.300" endtime="20210729 14:20:11.320"/>
</branch>
<status status="PASS" starttime="20210729 14:20:11.300" endtime="20210729 14:20:11.320"/>
</if>
<status status="PASS" starttime="20210729 14:20:11.283" endtime="20210729 14:20:11.321"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": '01234567'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:09.702" endtime="20210729 14:20:11.321">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t53" name="With Any Valid Token, Updating Password Of Each System User With 01234567890123456789 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:11.330" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:11.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:11.349" level="INFO">${pids} = 14743</msg>
<status status="PASS" starttime="20210729 14:20:11.323" endtime="20210729 14:20:11.349"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:11.350" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:11.349" endtime="20210729 14:20:11.350"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:11.351" level="INFO">${pids} = ['14743']</msg>
<status status="PASS" starttime="20210729 14:20:11.351" endtime="20210729 14:20:11.351"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14743</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:11.356" level="INFO">Running command 'kill 14743 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:11.352" endtime="20210729 14:20:11.356"/>
</kw>
<status status="PASS" starttime="20210729 14:20:11.351" endtime="20210729 14:20:11.357"/>
</iter>
<status status="PASS" starttime="20210729 14:20:11.351" endtime="20210729 14:20:11.357"/>
</for>
<status status="PASS" starttime="20210729 14:20:11.350" endtime="20210729 14:20:11.357"/>
</branch>
<status status="PASS" starttime="20210729 14:20:11.350" endtime="20210729 14:20:11.357"/>
</if>
<status status="PASS" starttime="20210729 14:20:11.322" endtime="20210729 14:20:11.357"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:11.358" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:11.358" endtime="20210729 14:20:11.358"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:11.359" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:11.359" endtime="20210729 14:20:11.359"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:11.359" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:11.359" endtime="20210729 14:20:11.359"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:11.360" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:11.359" endtime="20210729 14:20:11.360"/>
</kw>
<msg timestamp="20210729 14:20:11.360" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:11.358" endtime="20210729 14:20:11.360"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:11.363" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:11.360" endtime="20210729 14:20:11.367"/>
</kw>
<status status="PASS" starttime="20210729 14:20:11.357" endtime="20210729 14:20:11.368"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:11.369" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:11.369" endtime="20210729 14:20:11.378"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:12.880" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:11.378" endtime="20210729 14:20:12.880"/>
</kw>
<status status="PASS" starttime="20210729 14:20:11.368" endtime="20210729 14:20:12.881"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:12.884" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:12.884" endtime="20210729 14:20:12.884"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:12.885" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:12.884" endtime="20210729 14:20:12.885"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:12.885" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:12.885" endtime="20210729 14:20:12.885"/>
</kw>
<msg timestamp="20210729 14:20:12.885" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:12.884" endtime="20210729 14:20:12.885"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:12.886" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:12.885" endtime="20210729 14:20:12.886"/>
</kw>
<status status="PASS" starttime="20210729 14:20:12.882" endtime="20210729 14:20:12.886"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:12.887" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:12.887" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:12.887" endtime="20210729 14:20:12.887"/>
</kw>
<status status="PASS" starttime="20210729 14:20:12.886" endtime="20210729 14:20:12.887"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:12.888" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:12.888" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:12.887" endtime="20210729 14:20:12.888"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:12.888" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:12.888" endtime="20210729 14:20:12.888"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:12.888" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:12.888" endtime="20210729 14:20:12.889"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:12.889" endtime="20210729 14:20:12.889"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:12.889" endtime="20210729 14:20:12.890"/>
</kw>
<status status="PASS" starttime="20210729 14:20:12.888" endtime="20210729 14:20:12.890"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:12.890" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:12.890" endtime="20210729 14:20:12.890"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:12.891" endtime="20210729 14:20:12.892"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:12.892" endtime="20210729 14:20:12.892"/>
</kw>
<status status="PASS" starttime="20210729 14:20:12.890" endtime="20210729 14:20:12.892"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:12.892" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:12.892" endtime="20210729 14:20:12.892"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:12.892" endtime="20210729 14:20:12.893"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:12.893" endtime="20210729 14:20:12.893"/>
</kw>
<status status="PASS" starttime="20210729 14:20:12.892" endtime="20210729 14:20:12.893"/>
</iter>
<status status="PASS" starttime="20210729 14:20:12.888" endtime="20210729 14:20:12.893"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:12.894" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:12.893" endtime="20210729 14:20:12.894"/>
</kw>
<status status="PASS" starttime="20210729 14:20:12.887" endtime="20210729 14:20:12.894"/>
</kw>
<status status="PASS" starttime="20210729 14:20:11.322" endtime="20210729 14:20:12.894"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=01234567890123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:12.895" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:12.895" endtime="20210729 14:20:12.896"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:12.896" level="INFO">${payload} = {'password': '01234567890123456789'}</msg>
<status status="PASS" starttime="20210729 14:20:12.896" endtime="20210729 14:20:12.896"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:12.905" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:12.905" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:12.896" endtime="20210729 14:20:12.905"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:12.905" endtime="20210729 14:20:12.905"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:12.905" endtime="20210729 14:20:12.906"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:12.896" endtime="20210729 14:20:12.906"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:12.896" endtime="20210729 14:20:12.906"/>
</for>
<status status="FAIL" starttime="20210729 14:20:12.894" endtime="20210729 14:20:12.906"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:12.894" endtime="20210729 14:20:12.906"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=01234567890123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:12.907" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:12.907" endtime="20210729 14:20:12.907"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:12.907" level="INFO">${payload} = {'password': '01234567890123456789'}</msg>
<status status="PASS" starttime="20210729 14:20:12.907" endtime="20210729 14:20:12.907"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:12.911" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:12.912" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:12.908" endtime="20210729 14:20:12.912"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:12.912" endtime="20210729 14:20:12.912"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:12.912" endtime="20210729 14:20:12.912"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:12.908" endtime="20210729 14:20:12.912"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:12.907" endtime="20210729 14:20:12.912"/>
</for>
<status status="FAIL" starttime="20210729 14:20:12.906" endtime="20210729 14:20:12.912"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:12.906" endtime="20210729 14:20:12.912"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=01234567890123456789</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:12.914" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:12.913" endtime="20210729 14:20:12.914"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:12.914" level="INFO">${payload} = {'password': '01234567890123456789'}</msg>
<status status="PASS" starttime="20210729 14:20:12.914" endtime="20210729 14:20:12.914"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:12.918" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:12.918" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:12.915" endtime="20210729 14:20:12.919"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:12.919" endtime="20210729 14:20:12.919"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:12.919" endtime="20210729 14:20:12.919"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:12.914" endtime="20210729 14:20:12.919"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:12.914" endtime="20210729 14:20:12.919"/>
</for>
<status status="FAIL" starttime="20210729 14:20:12.913" endtime="20210729 14:20:12.919"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:12.913" endtime="20210729 14:20:12.919"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:12.894" endtime="20210729 14:20:12.919"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:12.924" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:12.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:12.935" level="INFO">${pids} = 14766
14773
14778</msg>
<status status="PASS" starttime="20210729 14:20:12.920" endtime="20210729 14:20:12.935"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:12.936" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:12.936" endtime="20210729 14:20:12.936"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:12.937" level="INFO">${pids} = ['14766', '14773', '14778']</msg>
<status status="PASS" starttime="20210729 14:20:12.937" endtime="20210729 14:20:12.937"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14766</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:12.940" level="INFO">Running command 'kill 14766 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:12.937" endtime="20210729 14:20:12.940"/>
</kw>
<status status="PASS" starttime="20210729 14:20:12.937" endtime="20210729 14:20:12.941"/>
</iter>
<iter>
<var name="${pid}">14773</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:12.943" level="INFO">Running command 'kill 14773 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:12.941" endtime="20210729 14:20:12.944"/>
</kw>
<status status="PASS" starttime="20210729 14:20:12.941" endtime="20210729 14:20:12.944"/>
</iter>
<iter>
<var name="${pid}">14778</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:12.949" level="INFO">Running command 'kill 14778 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:12.944" endtime="20210729 14:20:12.949"/>
</kw>
<status status="PASS" starttime="20210729 14:20:12.944" endtime="20210729 14:20:12.949"/>
</iter>
<status status="PASS" starttime="20210729 14:20:12.937" endtime="20210729 14:20:12.949"/>
</for>
<status status="PASS" starttime="20210729 14:20:12.936" endtime="20210729 14:20:12.949"/>
</branch>
<status status="PASS" starttime="20210729 14:20:12.936" endtime="20210729 14:20:12.949"/>
</if>
<status status="PASS" starttime="20210729 14:20:12.919" endtime="20210729 14:20:12.950"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": '01234567890123456789'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:11.321" endtime="20210729 14:20:12.950">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t54" name="With Any Valid Token, Updating Password Of Each System User With !?.?!.! Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:12.959" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:12.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:12.968" level="INFO">${pids} = 14807</msg>
<status status="PASS" starttime="20210729 14:20:12.952" endtime="20210729 14:20:12.968"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:12.969" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:12.968" endtime="20210729 14:20:12.969"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:12.969" level="INFO">${pids} = ['14807']</msg>
<status status="PASS" starttime="20210729 14:20:12.969" endtime="20210729 14:20:12.969"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14807</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:12.979" level="INFO">Running command 'kill 14807 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:12.970" endtime="20210729 14:20:12.980"/>
</kw>
<status status="PASS" starttime="20210729 14:20:12.970" endtime="20210729 14:20:12.980"/>
</iter>
<status status="PASS" starttime="20210729 14:20:12.969" endtime="20210729 14:20:12.980"/>
</for>
<status status="PASS" starttime="20210729 14:20:12.969" endtime="20210729 14:20:12.980"/>
</branch>
<status status="PASS" starttime="20210729 14:20:12.969" endtime="20210729 14:20:12.980"/>
</if>
<status status="PASS" starttime="20210729 14:20:12.951" endtime="20210729 14:20:12.981"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:12.982" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:12.982" endtime="20210729 14:20:12.982"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:12.983" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:12.983" endtime="20210729 14:20:12.983"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:12.983" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:12.983" endtime="20210729 14:20:12.983"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:12.984" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:12.983" endtime="20210729 14:20:12.984"/>
</kw>
<msg timestamp="20210729 14:20:12.984" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:12.982" endtime="20210729 14:20:12.984"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:12.987" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:12.984" endtime="20210729 14:20:12.989"/>
</kw>
<status status="PASS" starttime="20210729 14:20:12.981" endtime="20210729 14:20:12.989"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:12.990" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:12.990" endtime="20210729 14:20:12.994"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:14.495" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:12.994" endtime="20210729 14:20:14.495"/>
</kw>
<status status="PASS" starttime="20210729 14:20:12.989" endtime="20210729 14:20:14.496"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:14.497" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:14.497" endtime="20210729 14:20:14.497"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:14.498" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:14.498" endtime="20210729 14:20:14.498"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:14.499" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:14.499" endtime="20210729 14:20:14.500"/>
</kw>
<msg timestamp="20210729 14:20:14.500" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:14.496" endtime="20210729 14:20:14.500"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:14.501" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:14.500" endtime="20210729 14:20:14.501"/>
</kw>
<status status="PASS" starttime="20210729 14:20:14.496" endtime="20210729 14:20:14.502"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:14.502" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:14.502" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:14.502" endtime="20210729 14:20:14.502"/>
</kw>
<status status="PASS" starttime="20210729 14:20:14.502" endtime="20210729 14:20:14.502"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:14.503" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:14.503" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:14.503" endtime="20210729 14:20:14.503"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:14.503" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:14.503" endtime="20210729 14:20:14.503"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:14.504" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:14.504" endtime="20210729 14:20:14.504"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:14.504" endtime="20210729 14:20:14.505"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:14.505" endtime="20210729 14:20:14.505"/>
</kw>
<status status="PASS" starttime="20210729 14:20:14.504" endtime="20210729 14:20:14.505"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:14.505" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:14.505" endtime="20210729 14:20:14.505"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:14.505" endtime="20210729 14:20:14.506"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:14.506" endtime="20210729 14:20:14.507"/>
</kw>
<status status="PASS" starttime="20210729 14:20:14.505" endtime="20210729 14:20:14.507"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:14.507" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:14.507" endtime="20210729 14:20:14.507"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:14.507" endtime="20210729 14:20:14.508"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:14.508" endtime="20210729 14:20:14.508"/>
</kw>
<status status="PASS" starttime="20210729 14:20:14.507" endtime="20210729 14:20:14.508"/>
</iter>
<status status="PASS" starttime="20210729 14:20:14.503" endtime="20210729 14:20:14.508"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:14.509" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:14.508" endtime="20210729 14:20:14.509"/>
</kw>
<status status="PASS" starttime="20210729 14:20:14.502" endtime="20210729 14:20:14.509"/>
</kw>
<status status="PASS" starttime="20210729 14:20:12.951" endtime="20210729 14:20:14.509"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=!?.?!.!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:14.510" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:14.510" endtime="20210729 14:20:14.510"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:14.511" level="INFO">${payload} = {'password': '!?.?!.!'}</msg>
<status status="PASS" starttime="20210729 14:20:14.510" endtime="20210729 14:20:14.511"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:14.520" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:14.521" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:14.511" endtime="20210729 14:20:14.521"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:14.521" endtime="20210729 14:20:14.521"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:14.521" endtime="20210729 14:20:14.521"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:14.511" endtime="20210729 14:20:14.521"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:14.511" endtime="20210729 14:20:14.521"/>
</for>
<status status="FAIL" starttime="20210729 14:20:14.509" endtime="20210729 14:20:14.521"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:14.509" endtime="20210729 14:20:14.521"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=!?.?!.!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:14.522" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:14.522" endtime="20210729 14:20:14.522"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:14.523" level="INFO">${payload} = {'password': '!?.?!.!'}</msg>
<status status="PASS" starttime="20210729 14:20:14.523" endtime="20210729 14:20:14.523"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:14.527" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:14.527" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:14.523" endtime="20210729 14:20:14.527"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:14.527" endtime="20210729 14:20:14.527"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:14.528" endtime="20210729 14:20:14.528"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:14.523" endtime="20210729 14:20:14.528"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:14.523" endtime="20210729 14:20:14.528"/>
</for>
<status status="FAIL" starttime="20210729 14:20:14.522" endtime="20210729 14:20:14.528"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:14.521" endtime="20210729 14:20:14.528"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=!?.?!.!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:14.529" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:14.529" endtime="20210729 14:20:14.529"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:14.529" level="INFO">${payload} = {'password': '!?.?!.!'}</msg>
<status status="PASS" starttime="20210729 14:20:14.529" endtime="20210729 14:20:14.529"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:14.534" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:14.534" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:14.530" endtime="20210729 14:20:14.534"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:14.534" endtime="20210729 14:20:14.534"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:14.534" endtime="20210729 14:20:14.534"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:14.530" endtime="20210729 14:20:14.534"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:14.529" endtime="20210729 14:20:14.535"/>
</for>
<status status="FAIL" starttime="20210729 14:20:14.528" endtime="20210729 14:20:14.535"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:14.528" endtime="20210729 14:20:14.535"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:14.509" endtime="20210729 14:20:14.535"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:14.539" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:14.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:14.549" level="INFO">${pids} = 14830
14837
14843</msg>
<status status="PASS" starttime="20210729 14:20:14.536" endtime="20210729 14:20:14.549"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:14.549" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:14.549" endtime="20210729 14:20:14.549"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:14.550" level="INFO">${pids} = ['14830', '14837', '14843']</msg>
<status status="PASS" starttime="20210729 14:20:14.550" endtime="20210729 14:20:14.550"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14830</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:14.554" level="INFO">Running command 'kill 14830 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:14.550" endtime="20210729 14:20:14.554"/>
</kw>
<status status="PASS" starttime="20210729 14:20:14.550" endtime="20210729 14:20:14.554"/>
</iter>
<iter>
<var name="${pid}">14837</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:14.557" level="INFO">Running command 'kill 14837 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:14.554" endtime="20210729 14:20:14.557"/>
</kw>
<status status="PASS" starttime="20210729 14:20:14.554" endtime="20210729 14:20:14.558"/>
</iter>
<iter>
<var name="${pid}">14843</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:14.561" level="INFO">Running command 'kill 14843 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:14.558" endtime="20210729 14:20:14.561"/>
</kw>
<status status="PASS" starttime="20210729 14:20:14.558" endtime="20210729 14:20:14.561"/>
</iter>
<status status="PASS" starttime="20210729 14:20:14.550" endtime="20210729 14:20:14.561"/>
</for>
<status status="PASS" starttime="20210729 14:20:14.550" endtime="20210729 14:20:14.561"/>
</branch>
<status status="PASS" starttime="20210729 14:20:14.550" endtime="20210729 14:20:14.561"/>
</if>
<status status="PASS" starttime="20210729 14:20:14.535" endtime="20210729 14:20:14.562"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": '!?.?!.!'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:12.950" endtime="20210729 14:20:14.562">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t55" name="With Any Valid Token, Updating Password Of Each System User With !?.?!.!? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:14.567" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:14.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:14.577" level="INFO">${pids} = 14872</msg>
<status status="PASS" starttime="20210729 14:20:14.564" endtime="20210729 14:20:14.577"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:14.577" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:14.577" endtime="20210729 14:20:14.578"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:14.578" level="INFO">${pids} = ['14872']</msg>
<status status="PASS" starttime="20210729 14:20:14.578" endtime="20210729 14:20:14.578"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14872</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:14.582" level="INFO">Running command 'kill 14872 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:14.579" endtime="20210729 14:20:14.583"/>
</kw>
<status status="PASS" starttime="20210729 14:20:14.578" endtime="20210729 14:20:14.583"/>
</iter>
<status status="PASS" starttime="20210729 14:20:14.578" endtime="20210729 14:20:14.583"/>
</for>
<status status="PASS" starttime="20210729 14:20:14.578" endtime="20210729 14:20:14.583"/>
</branch>
<status status="PASS" starttime="20210729 14:20:14.578" endtime="20210729 14:20:14.583"/>
</if>
<status status="PASS" starttime="20210729 14:20:14.564" endtime="20210729 14:20:14.583"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:14.584" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:14.584" endtime="20210729 14:20:14.584"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:14.585" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:14.585" endtime="20210729 14:20:14.585"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:14.585" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:14.585" endtime="20210729 14:20:14.585"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:14.586" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:14.586" endtime="20210729 14:20:14.586"/>
</kw>
<msg timestamp="20210729 14:20:14.586" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:14.585" endtime="20210729 14:20:14.586"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:14.591" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:14.586" endtime="20210729 14:20:14.596"/>
</kw>
<status status="PASS" starttime="20210729 14:20:14.584" endtime="20210729 14:20:14.596"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:14.598" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:14.597" endtime="20210729 14:20:14.602"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:16.105" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:14.603" endtime="20210729 14:20:16.105"/>
</kw>
<status status="PASS" starttime="20210729 14:20:14.596" endtime="20210729 14:20:16.105"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:16.106" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:16.106" endtime="20210729 14:20:16.106"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:16.106" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:16.106" endtime="20210729 14:20:16.106"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:16.107" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:16.107" endtime="20210729 14:20:16.107"/>
</kw>
<msg timestamp="20210729 14:20:16.107" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:16.105" endtime="20210729 14:20:16.107"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:16.107" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:16.107" endtime="20210729 14:20:16.108"/>
</kw>
<status status="PASS" starttime="20210729 14:20:16.105" endtime="20210729 14:20:16.108"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:16.108" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:16.109" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:16.108" endtime="20210729 14:20:16.109"/>
</kw>
<status status="PASS" starttime="20210729 14:20:16.108" endtime="20210729 14:20:16.109"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:16.109" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:16.110" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:16.109" endtime="20210729 14:20:16.110"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:16.110" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:16.110" endtime="20210729 14:20:16.110"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:16.111" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:16.110" endtime="20210729 14:20:16.111"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:16.111" endtime="20210729 14:20:16.111"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:16.112" endtime="20210729 14:20:16.112"/>
</kw>
<status status="PASS" starttime="20210729 14:20:16.110" endtime="20210729 14:20:16.112"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:16.112" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:16.112" endtime="20210729 14:20:16.113"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:16.113" endtime="20210729 14:20:16.113"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:16.114" endtime="20210729 14:20:16.114"/>
</kw>
<status status="PASS" starttime="20210729 14:20:16.112" endtime="20210729 14:20:16.114"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:16.114" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:16.114" endtime="20210729 14:20:16.114"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:16.114" endtime="20210729 14:20:16.115"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:16.115" endtime="20210729 14:20:16.115"/>
</kw>
<status status="PASS" starttime="20210729 14:20:16.114" endtime="20210729 14:20:16.115"/>
</iter>
<status status="PASS" starttime="20210729 14:20:16.110" endtime="20210729 14:20:16.115"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:16.116" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:16.115" endtime="20210729 14:20:16.116"/>
</kw>
<status status="PASS" starttime="20210729 14:20:16.109" endtime="20210729 14:20:16.116"/>
</kw>
<status status="PASS" starttime="20210729 14:20:14.563" endtime="20210729 14:20:16.116"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=!?.?!.!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:16.117" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:16.117" endtime="20210729 14:20:16.117"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:16.118" level="INFO">${payload} = {'password': '!?.?!.!?'}</msg>
<status status="PASS" starttime="20210729 14:20:16.117" endtime="20210729 14:20:16.118"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:16.126" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:16.126" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:16.118" endtime="20210729 14:20:16.127"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:16.127" endtime="20210729 14:20:16.127"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:16.127" endtime="20210729 14:20:16.127"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:16.118" endtime="20210729 14:20:16.127"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:16.118" endtime="20210729 14:20:16.127"/>
</for>
<status status="FAIL" starttime="20210729 14:20:16.116" endtime="20210729 14:20:16.127"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:16.116" endtime="20210729 14:20:16.127"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=!?.?!.!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:16.129" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:16.128" endtime="20210729 14:20:16.129"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:16.129" level="INFO">${payload} = {'password': '!?.?!.!?'}</msg>
<status status="PASS" starttime="20210729 14:20:16.129" endtime="20210729 14:20:16.129"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:16.133" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:16.134" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:16.129" endtime="20210729 14:20:16.134"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:16.134" endtime="20210729 14:20:16.134"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:16.134" endtime="20210729 14:20:16.134"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:16.129" endtime="20210729 14:20:16.134"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:16.129" endtime="20210729 14:20:16.134"/>
</for>
<status status="FAIL" starttime="20210729 14:20:16.128" endtime="20210729 14:20:16.134"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:16.127" endtime="20210729 14:20:16.134"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=!?.?!.!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:16.135" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:16.135" endtime="20210729 14:20:16.135"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:16.136" level="INFO">${payload} = {'password': '!?.?!.!?'}</msg>
<status status="PASS" starttime="20210729 14:20:16.136" endtime="20210729 14:20:16.136"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:16.140" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:16.140" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:16.136" endtime="20210729 14:20:16.140"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:16.141" endtime="20210729 14:20:16.141"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:16.141" endtime="20210729 14:20:16.141"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:16.136" endtime="20210729 14:20:16.141"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:16.136" endtime="20210729 14:20:16.141"/>
</for>
<status status="FAIL" starttime="20210729 14:20:16.134" endtime="20210729 14:20:16.141"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:16.134" endtime="20210729 14:20:16.141"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:16.116" endtime="20210729 14:20:16.141"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:16.147" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:16.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:16.156" level="INFO">${pids} = 14895
14902
14912</msg>
<status status="PASS" starttime="20210729 14:20:16.142" endtime="20210729 14:20:16.156"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:16.157" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:16.157" endtime="20210729 14:20:16.157"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:16.158" level="INFO">${pids} = ['14895', '14902', '14912']</msg>
<status status="PASS" starttime="20210729 14:20:16.158" endtime="20210729 14:20:16.158"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14895</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:16.163" level="INFO">Running command 'kill 14895 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:16.158" endtime="20210729 14:20:16.164"/>
</kw>
<status status="PASS" starttime="20210729 14:20:16.158" endtime="20210729 14:20:16.164"/>
</iter>
<iter>
<var name="${pid}">14902</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:16.168" level="INFO">Running command 'kill 14902 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:16.165" endtime="20210729 14:20:16.168"/>
</kw>
<status status="PASS" starttime="20210729 14:20:16.164" endtime="20210729 14:20:16.168"/>
</iter>
<iter>
<var name="${pid}">14912</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:16.172" level="INFO">Running command 'kill 14912 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:16.169" endtime="20210729 14:20:16.172"/>
</kw>
<status status="PASS" starttime="20210729 14:20:16.169" endtime="20210729 14:20:16.172"/>
</iter>
<status status="PASS" starttime="20210729 14:20:16.158" endtime="20210729 14:20:16.172"/>
</for>
<status status="PASS" starttime="20210729 14:20:16.158" endtime="20210729 14:20:16.172"/>
</branch>
<status status="PASS" starttime="20210729 14:20:16.157" endtime="20210729 14:20:16.173"/>
</if>
<status status="PASS" starttime="20210729 14:20:16.141" endtime="20210729 14:20:16.173"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": '!?.?!.!?'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:14.563" endtime="20210729 14:20:16.173">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t56" name="With Any Valid Token, Updating Password Of Each System User With !?.?!.!?!?.?!.!?!.!. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:16.179" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:16.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:16.190" level="INFO">${pids} = 14943</msg>
<status status="PASS" starttime="20210729 14:20:16.175" endtime="20210729 14:20:16.190"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:16.192" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:16.191" endtime="20210729 14:20:16.192"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:16.193" level="INFO">${pids} = ['14943']</msg>
<status status="PASS" starttime="20210729 14:20:16.192" endtime="20210729 14:20:16.193"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14943</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:16.197" level="INFO">Running command 'kill 14943 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:16.193" endtime="20210729 14:20:16.197"/>
</kw>
<status status="PASS" starttime="20210729 14:20:16.193" endtime="20210729 14:20:16.197"/>
</iter>
<status status="PASS" starttime="20210729 14:20:16.193" endtime="20210729 14:20:16.197"/>
</for>
<status status="PASS" starttime="20210729 14:20:16.192" endtime="20210729 14:20:16.197"/>
</branch>
<status status="PASS" starttime="20210729 14:20:16.192" endtime="20210729 14:20:16.197"/>
</if>
<status status="PASS" starttime="20210729 14:20:16.175" endtime="20210729 14:20:16.198"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:16.199" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:16.198" endtime="20210729 14:20:16.199"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:16.200" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:16.199" endtime="20210729 14:20:16.200"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:16.200" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:16.200" endtime="20210729 14:20:16.200"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:16.200" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:16.200" endtime="20210729 14:20:16.200"/>
</kw>
<msg timestamp="20210729 14:20:16.201" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:16.199" endtime="20210729 14:20:16.201"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:16.204" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:16.201" endtime="20210729 14:20:16.206"/>
</kw>
<status status="PASS" starttime="20210729 14:20:16.198" endtime="20210729 14:20:16.206"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:16.208" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:16.207" endtime="20210729 14:20:16.213"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:17.720" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:16.213" endtime="20210729 14:20:17.721"/>
</kw>
<status status="PASS" starttime="20210729 14:20:16.206" endtime="20210729 14:20:17.721"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:17.722" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:17.722" endtime="20210729 14:20:17.722"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:17.723" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:17.722" endtime="20210729 14:20:17.723"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:17.723" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:17.723" endtime="20210729 14:20:17.723"/>
</kw>
<msg timestamp="20210729 14:20:17.723" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:17.722" endtime="20210729 14:20:17.723"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:17.724" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:17.723" endtime="20210729 14:20:17.724"/>
</kw>
<status status="PASS" starttime="20210729 14:20:17.721" endtime="20210729 14:20:17.724"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:17.724" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:17.724" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:17.724" endtime="20210729 14:20:17.725"/>
</kw>
<status status="PASS" starttime="20210729 14:20:17.724" endtime="20210729 14:20:17.725"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:17.725" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:17.726" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:17.725" endtime="20210729 14:20:17.727"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:17.727" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:17.727" endtime="20210729 14:20:17.727"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:17.727" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:17.727" endtime="20210729 14:20:17.727"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:17.727" endtime="20210729 14:20:17.728"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:17.728" endtime="20210729 14:20:17.728"/>
</kw>
<status status="PASS" starttime="20210729 14:20:17.727" endtime="20210729 14:20:17.728"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:17.729" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:17.729" endtime="20210729 14:20:17.729"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:17.729" endtime="20210729 14:20:17.730"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:17.730" endtime="20210729 14:20:17.730"/>
</kw>
<status status="PASS" starttime="20210729 14:20:17.728" endtime="20210729 14:20:17.730"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:17.730" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:17.730" endtime="20210729 14:20:17.730"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:17.730" endtime="20210729 14:20:17.731"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:17.731" endtime="20210729 14:20:17.731"/>
</kw>
<status status="PASS" starttime="20210729 14:20:17.730" endtime="20210729 14:20:17.731"/>
</iter>
<status status="PASS" starttime="20210729 14:20:17.727" endtime="20210729 14:20:17.732"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:17.732" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:17.732" endtime="20210729 14:20:17.732"/>
</kw>
<status status="PASS" starttime="20210729 14:20:17.725" endtime="20210729 14:20:17.732"/>
</kw>
<status status="PASS" starttime="20210729 14:20:16.174" endtime="20210729 14:20:17.732"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=!?.?!.!?!?.?!.!?!.!.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:17.734" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:17.733" endtime="20210729 14:20:17.734"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:17.734" level="INFO">${payload} = {'password': '!?.?!.!?!?.?!.!?!.!.'}</msg>
<status status="PASS" starttime="20210729 14:20:17.734" endtime="20210729 14:20:17.734"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:17.744" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:17.744" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:17.734" endtime="20210729 14:20:17.744"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:17.744" endtime="20210729 14:20:17.744"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:17.745" endtime="20210729 14:20:17.745"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:17.734" endtime="20210729 14:20:17.745"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:17.734" endtime="20210729 14:20:17.745"/>
</for>
<status status="FAIL" starttime="20210729 14:20:17.733" endtime="20210729 14:20:17.745"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:17.733" endtime="20210729 14:20:17.745"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=!?.?!.!?!?.?!.!?!.!.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:17.746" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:17.746" endtime="20210729 14:20:17.746"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:17.747" level="INFO">${payload} = {'password': '!?.?!.!?!?.?!.!?!.!.'}</msg>
<status status="PASS" starttime="20210729 14:20:17.746" endtime="20210729 14:20:17.747"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:17.751" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:17.751" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:17.747" endtime="20210729 14:20:17.751"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:17.752" endtime="20210729 14:20:17.752"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:17.752" endtime="20210729 14:20:17.752"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:17.747" endtime="20210729 14:20:17.752"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:17.747" endtime="20210729 14:20:17.752"/>
</for>
<status status="FAIL" starttime="20210729 14:20:17.745" endtime="20210729 14:20:17.752"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:17.745" endtime="20210729 14:20:17.752"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=!?.?!.!?!?.?!.!?!.!.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:17.753" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:17.753" endtime="20210729 14:20:17.753"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:17.754" level="INFO">${payload} = {'password': '!?.?!.!?!?.?!.!?!.!.'}</msg>
<status status="PASS" starttime="20210729 14:20:17.753" endtime="20210729 14:20:17.754"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:17.758" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:17.758" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:17.754" endtime="20210729 14:20:17.758"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:17.758" endtime="20210729 14:20:17.758"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:17.758" endtime="20210729 14:20:17.758"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:17.754" endtime="20210729 14:20:17.758"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:17.754" endtime="20210729 14:20:17.758"/>
</for>
<status status="FAIL" starttime="20210729 14:20:17.752" endtime="20210729 14:20:17.759"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:17.752" endtime="20210729 14:20:17.759"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:17.732" endtime="20210729 14:20:17.759"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:17.763" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:17.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:17.772" level="INFO">${pids} = 14966
14973
14978</msg>
<status status="PASS" starttime="20210729 14:20:17.760" endtime="20210729 14:20:17.772"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:17.773" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:17.773" endtime="20210729 14:20:17.773"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:17.774" level="INFO">${pids} = ['14966', '14973', '14978']</msg>
<status status="PASS" starttime="20210729 14:20:17.774" endtime="20210729 14:20:17.774"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">14966</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:17.777" level="INFO">Running command 'kill 14966 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:17.774" endtime="20210729 14:20:17.778"/>
</kw>
<status status="PASS" starttime="20210729 14:20:17.774" endtime="20210729 14:20:17.778"/>
</iter>
<iter>
<var name="${pid}">14973</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:17.782" level="INFO">Running command 'kill 14973 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:17.778" endtime="20210729 14:20:17.782"/>
</kw>
<status status="PASS" starttime="20210729 14:20:17.778" endtime="20210729 14:20:17.782"/>
</iter>
<iter>
<var name="${pid}">14978</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:17.786" level="INFO">Running command 'kill 14978 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:17.783" endtime="20210729 14:20:17.786"/>
</kw>
<status status="PASS" starttime="20210729 14:20:17.782" endtime="20210729 14:20:17.786"/>
</iter>
<status status="PASS" starttime="20210729 14:20:17.774" endtime="20210729 14:20:17.786"/>
</for>
<status status="PASS" starttime="20210729 14:20:17.774" endtime="20210729 14:20:17.786"/>
</branch>
<status status="PASS" starttime="20210729 14:20:17.773" endtime="20210729 14:20:17.786"/>
</if>
<status status="PASS" starttime="20210729 14:20:17.759" endtime="20210729 14:20:17.787"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": '!?.?!.!?!?.?!.!?!.!.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:16.173" endtime="20210729 14:20:17.787">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t57" name="With Any Valid Token, Updating Password Of Each System User With abcdABC Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:17.797" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:17.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:17.806" level="INFO">${pids} = 15007</msg>
<status status="PASS" starttime="20210729 14:20:17.789" endtime="20210729 14:20:17.806"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:17.807" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:17.806" endtime="20210729 14:20:17.807"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:17.807" level="INFO">${pids} = ['15007']</msg>
<status status="PASS" starttime="20210729 14:20:17.807" endtime="20210729 14:20:17.807"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15007</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:17.822" level="INFO">Running command 'kill 15007 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:17.808" endtime="20210729 14:20:17.823"/>
</kw>
<status status="PASS" starttime="20210729 14:20:17.808" endtime="20210729 14:20:17.823"/>
</iter>
<status status="PASS" starttime="20210729 14:20:17.807" endtime="20210729 14:20:17.823"/>
</for>
<status status="PASS" starttime="20210729 14:20:17.807" endtime="20210729 14:20:17.823"/>
</branch>
<status status="PASS" starttime="20210729 14:20:17.807" endtime="20210729 14:20:17.824"/>
</if>
<status status="PASS" starttime="20210729 14:20:17.788" endtime="20210729 14:20:17.824"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:17.825" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:17.825" endtime="20210729 14:20:17.825"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:17.826" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:17.826" endtime="20210729 14:20:17.826"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:17.827" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:17.826" endtime="20210729 14:20:17.827"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:17.827" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:17.827" endtime="20210729 14:20:17.827"/>
</kw>
<msg timestamp="20210729 14:20:17.827" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:17.826" endtime="20210729 14:20:17.827"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:17.832" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:17.828" endtime="20210729 14:20:17.833"/>
</kw>
<status status="PASS" starttime="20210729 14:20:17.824" endtime="20210729 14:20:17.834"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:17.835" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:17.834" endtime="20210729 14:20:17.839"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:19.351" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:17.839" endtime="20210729 14:20:19.351"/>
</kw>
<status status="PASS" starttime="20210729 14:20:17.834" endtime="20210729 14:20:19.351"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:19.352" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:19.352" endtime="20210729 14:20:19.352"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:19.353" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:19.352" endtime="20210729 14:20:19.353"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:19.353" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:19.353" endtime="20210729 14:20:19.353"/>
</kw>
<msg timestamp="20210729 14:20:19.353" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:19.352" endtime="20210729 14:20:19.353"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:19.354" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:19.353" endtime="20210729 14:20:19.354"/>
</kw>
<status status="PASS" starttime="20210729 14:20:19.351" endtime="20210729 14:20:19.354"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:19.355" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:19.355" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:19.354" endtime="20210729 14:20:19.355"/>
</kw>
<status status="PASS" starttime="20210729 14:20:19.354" endtime="20210729 14:20:19.355"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:19.356" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:19.356" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:19.355" endtime="20210729 14:20:19.356"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:19.356" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:19.356" endtime="20210729 14:20:19.356"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:19.357" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:19.357" endtime="20210729 14:20:19.357"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:19.357" endtime="20210729 14:20:19.358"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:19.358" endtime="20210729 14:20:19.358"/>
</kw>
<status status="PASS" starttime="20210729 14:20:19.357" endtime="20210729 14:20:19.358"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:19.359" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:19.359" endtime="20210729 14:20:19.359"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:19.359" endtime="20210729 14:20:19.360"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:19.360" endtime="20210729 14:20:19.360"/>
</kw>
<status status="PASS" starttime="20210729 14:20:19.358" endtime="20210729 14:20:19.360"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:19.360" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:19.360" endtime="20210729 14:20:19.360"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:19.361" endtime="20210729 14:20:19.361"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:19.361" endtime="20210729 14:20:19.361"/>
</kw>
<status status="PASS" starttime="20210729 14:20:19.360" endtime="20210729 14:20:19.361"/>
</iter>
<status status="PASS" starttime="20210729 14:20:19.356" endtime="20210729 14:20:19.361"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:19.362" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:19.362" endtime="20210729 14:20:19.362"/>
</kw>
<status status="PASS" starttime="20210729 14:20:19.355" endtime="20210729 14:20:19.362"/>
</kw>
<status status="PASS" starttime="20210729 14:20:17.788" endtime="20210729 14:20:19.362"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdABC</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:19.363" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:19.363" endtime="20210729 14:20:19.364"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:19.364" level="INFO">${payload} = {'password': 'abcdABC'}</msg>
<status status="PASS" starttime="20210729 14:20:19.364" endtime="20210729 14:20:19.364"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:19.373" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:19.373" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:19.364" endtime="20210729 14:20:19.373"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:19.373" endtime="20210729 14:20:19.373"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:19.374" endtime="20210729 14:20:19.374"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:19.364" endtime="20210729 14:20:19.374"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:19.364" endtime="20210729 14:20:19.374"/>
</for>
<status status="FAIL" starttime="20210729 14:20:19.363" endtime="20210729 14:20:19.374"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:19.363" endtime="20210729 14:20:19.374"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdABC</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:19.375" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:19.375" endtime="20210729 14:20:19.375"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:19.376" level="INFO">${payload} = {'password': 'abcdABC'}</msg>
<status status="PASS" starttime="20210729 14:20:19.375" endtime="20210729 14:20:19.376"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:19.380" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:19.380" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:19.376" endtime="20210729 14:20:19.380"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:19.380" endtime="20210729 14:20:19.380"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:19.380" endtime="20210729 14:20:19.380"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:19.376" endtime="20210729 14:20:19.380"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:19.376" endtime="20210729 14:20:19.381"/>
</for>
<status status="FAIL" starttime="20210729 14:20:19.374" endtime="20210729 14:20:19.381"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:19.374" endtime="20210729 14:20:19.381"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdABC</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:19.382" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:19.381" endtime="20210729 14:20:19.382"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:19.382" level="INFO">${payload} = {'password': 'abcdABC'}</msg>
<status status="PASS" starttime="20210729 14:20:19.382" endtime="20210729 14:20:19.382"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:19.386" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:19.387" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:19.383" endtime="20210729 14:20:19.387"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:19.387" endtime="20210729 14:20:19.387"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:19.387" endtime="20210729 14:20:19.387"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:19.382" endtime="20210729 14:20:19.387"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:19.382" endtime="20210729 14:20:19.387"/>
</for>
<status status="FAIL" starttime="20210729 14:20:19.381" endtime="20210729 14:20:19.387"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:19.381" endtime="20210729 14:20:19.387"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:19.362" endtime="20210729 14:20:19.387"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:19.393" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:19.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:19.402" level="INFO">${pids} = 15030
15037
15042</msg>
<status status="PASS" starttime="20210729 14:20:19.388" endtime="20210729 14:20:19.402"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:19.403" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:19.402" endtime="20210729 14:20:19.403"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:19.404" level="INFO">${pids} = ['15030', '15037', '15042']</msg>
<status status="PASS" starttime="20210729 14:20:19.403" endtime="20210729 14:20:19.404"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15030</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:19.407" level="INFO">Running command 'kill 15030 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:19.404" endtime="20210729 14:20:19.408"/>
</kw>
<status status="PASS" starttime="20210729 14:20:19.404" endtime="20210729 14:20:19.408"/>
</iter>
<iter>
<var name="${pid}">15037</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:19.412" level="INFO">Running command 'kill 15037 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:19.408" endtime="20210729 14:20:19.413"/>
</kw>
<status status="PASS" starttime="20210729 14:20:19.408" endtime="20210729 14:20:19.413"/>
</iter>
<iter>
<var name="${pid}">15042</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:19.417" level="INFO">Running command 'kill 15042 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:19.413" endtime="20210729 14:20:19.418"/>
</kw>
<status status="PASS" starttime="20210729 14:20:19.413" endtime="20210729 14:20:19.418"/>
</iter>
<status status="PASS" starttime="20210729 14:20:19.404" endtime="20210729 14:20:19.418"/>
</for>
<status status="PASS" starttime="20210729 14:20:19.403" endtime="20210729 14:20:19.418"/>
</branch>
<status status="PASS" starttime="20210729 14:20:19.403" endtime="20210729 14:20:19.418"/>
</if>
<status status="PASS" starttime="20210729 14:20:19.388" endtime="20210729 14:20:19.418"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdABC'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:17.787" endtime="20210729 14:20:19.418">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t58" name="With Any Valid Token, Updating Password Of Each System User With abcdABCD Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:19.424" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:19.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:19.433" level="INFO">${pids} = 15071</msg>
<status status="PASS" starttime="20210729 14:20:19.420" endtime="20210729 14:20:19.433"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:19.434" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:19.433" endtime="20210729 14:20:19.434"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:19.435" level="INFO">${pids} = ['15071']</msg>
<status status="PASS" starttime="20210729 14:20:19.434" endtime="20210729 14:20:19.435"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15071</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:19.438" level="INFO">Running command 'kill 15071 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:19.435" endtime="20210729 14:20:19.438"/>
</kw>
<status status="PASS" starttime="20210729 14:20:19.435" endtime="20210729 14:20:19.438"/>
</iter>
<status status="PASS" starttime="20210729 14:20:19.435" endtime="20210729 14:20:19.438"/>
</for>
<status status="PASS" starttime="20210729 14:20:19.434" endtime="20210729 14:20:19.438"/>
</branch>
<status status="PASS" starttime="20210729 14:20:19.434" endtime="20210729 14:20:19.438"/>
</if>
<status status="PASS" starttime="20210729 14:20:19.420" endtime="20210729 14:20:19.439"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:19.440" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:19.440" endtime="20210729 14:20:19.440"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:19.441" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:19.441" endtime="20210729 14:20:19.441"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:19.441" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:19.441" endtime="20210729 14:20:19.441"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:19.442" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:19.441" endtime="20210729 14:20:19.442"/>
</kw>
<msg timestamp="20210729 14:20:19.442" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:19.440" endtime="20210729 14:20:19.442"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:19.450" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:19.442" endtime="20210729 14:20:19.451"/>
</kw>
<status status="PASS" starttime="20210729 14:20:19.439" endtime="20210729 14:20:19.452"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:19.453" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:19.453" endtime="20210729 14:20:19.457"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:20.959" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:19.457" endtime="20210729 14:20:20.959"/>
</kw>
<status status="PASS" starttime="20210729 14:20:19.452" endtime="20210729 14:20:20.960"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:20.961" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:20.961" endtime="20210729 14:20:20.961"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:20.962" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:20.962" endtime="20210729 14:20:20.962"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:20.962" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:20.962" endtime="20210729 14:20:20.962"/>
</kw>
<msg timestamp="20210729 14:20:20.963" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:20.961" endtime="20210729 14:20:20.963"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:20.963" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:20.963" endtime="20210729 14:20:20.963"/>
</kw>
<status status="PASS" starttime="20210729 14:20:20.960" endtime="20210729 14:20:20.964"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:20.964" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:20.964" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:20.964" endtime="20210729 14:20:20.964"/>
</kw>
<status status="PASS" starttime="20210729 14:20:20.964" endtime="20210729 14:20:20.964"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:20.966" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:20.966" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:20.965" endtime="20210729 14:20:20.966"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:20.967" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:20.967" endtime="20210729 14:20:20.967"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:20.967" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:20.967" endtime="20210729 14:20:20.967"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:20.968" endtime="20210729 14:20:20.968"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:20.968" endtime="20210729 14:20:20.968"/>
</kw>
<status status="PASS" starttime="20210729 14:20:20.967" endtime="20210729 14:20:20.968"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:20.969" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:20.969" endtime="20210729 14:20:20.969"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:20.969" endtime="20210729 14:20:20.970"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:20.970" endtime="20210729 14:20:20.970"/>
</kw>
<status status="PASS" starttime="20210729 14:20:20.969" endtime="20210729 14:20:20.970"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:20.970" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:20.970" endtime="20210729 14:20:20.970"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:20.970" endtime="20210729 14:20:20.971"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:20.971" endtime="20210729 14:20:20.971"/>
</kw>
<status status="PASS" starttime="20210729 14:20:20.970" endtime="20210729 14:20:20.971"/>
</iter>
<status status="PASS" starttime="20210729 14:20:20.967" endtime="20210729 14:20:20.971"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:20.972" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:20.971" endtime="20210729 14:20:20.972"/>
</kw>
<status status="PASS" starttime="20210729 14:20:20.965" endtime="20210729 14:20:20.972"/>
</kw>
<status status="PASS" starttime="20210729 14:20:19.419" endtime="20210729 14:20:20.972"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdABCD</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:20.973" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:20.973" endtime="20210729 14:20:20.973"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:20.973" level="INFO">${payload} = {'password': 'abcdABCD'}</msg>
<status status="PASS" starttime="20210729 14:20:20.973" endtime="20210729 14:20:20.974"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:20.983" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:20.983" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:20.974" endtime="20210729 14:20:20.983"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:20.984" endtime="20210729 14:20:20.984"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:20.984" endtime="20210729 14:20:20.984"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:20.974" endtime="20210729 14:20:20.984"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:20.974" endtime="20210729 14:20:20.984"/>
</for>
<status status="FAIL" starttime="20210729 14:20:20.972" endtime="20210729 14:20:20.984"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:20.972" endtime="20210729 14:20:20.984"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdABCD</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:20.986" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:20.985" endtime="20210729 14:20:20.986"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:20.986" level="INFO">${payload} = {'password': 'abcdABCD'}</msg>
<status status="PASS" starttime="20210729 14:20:20.986" endtime="20210729 14:20:20.986"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:20.990" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:20.990" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:20.986" endtime="20210729 14:20:20.990"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:20.990" endtime="20210729 14:20:20.990"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:20.990" endtime="20210729 14:20:20.991"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:20.986" endtime="20210729 14:20:20.991"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:20.986" endtime="20210729 14:20:20.991"/>
</for>
<status status="FAIL" starttime="20210729 14:20:20.984" endtime="20210729 14:20:20.991"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:20.984" endtime="20210729 14:20:20.991"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdABCD</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:20.992" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:20.991" endtime="20210729 14:20:20.992"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:20.992" level="INFO">${payload} = {'password': 'abcdABCD'}</msg>
<status status="PASS" starttime="20210729 14:20:20.992" endtime="20210729 14:20:20.992"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:20.999" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:21.000" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:20.992" endtime="20210729 14:20:21.000"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:21.000" endtime="20210729 14:20:21.002"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:21.002" endtime="20210729 14:20:21.002"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:20.992" endtime="20210729 14:20:21.002"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:20.992" endtime="20210729 14:20:21.002"/>
</for>
<status status="FAIL" starttime="20210729 14:20:20.991" endtime="20210729 14:20:21.002"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:20.991" endtime="20210729 14:20:21.002"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:20.972" endtime="20210729 14:20:21.002"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:21.007" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:21.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:21.017" level="INFO">${pids} = 15094
15101
15111</msg>
<status status="PASS" starttime="20210729 14:20:21.004" endtime="20210729 14:20:21.017"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:21.018" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:21.017" endtime="20210729 14:20:21.018"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:21.018" level="INFO">${pids} = ['15094', '15101', '15111']</msg>
<status status="PASS" starttime="20210729 14:20:21.018" endtime="20210729 14:20:21.018"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15094</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:21.022" level="INFO">Running command 'kill 15094 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:21.019" endtime="20210729 14:20:21.022"/>
</kw>
<status status="PASS" starttime="20210729 14:20:21.018" endtime="20210729 14:20:21.022"/>
</iter>
<iter>
<var name="${pid}">15101</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:21.026" level="INFO">Running command 'kill 15101 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:21.023" endtime="20210729 14:20:21.026"/>
</kw>
<status status="PASS" starttime="20210729 14:20:21.023" endtime="20210729 14:20:21.026"/>
</iter>
<iter>
<var name="${pid}">15111</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:21.030" level="INFO">Running command 'kill 15111 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:21.026" endtime="20210729 14:20:21.030"/>
</kw>
<status status="PASS" starttime="20210729 14:20:21.026" endtime="20210729 14:20:21.030"/>
</iter>
<status status="PASS" starttime="20210729 14:20:21.018" endtime="20210729 14:20:21.030"/>
</for>
<status status="PASS" starttime="20210729 14:20:21.018" endtime="20210729 14:20:21.030"/>
</branch>
<status status="PASS" starttime="20210729 14:20:21.018" endtime="20210729 14:20:21.030"/>
</if>
<status status="PASS" starttime="20210729 14:20:21.003" endtime="20210729 14:20:21.031"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdABCD'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:19.419" endtime="20210729 14:20:21.031">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t59" name="With Any Valid Token, Updating Password Of Each System User With abcdABCDefgjklmnprstoö Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:21.038" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:21.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:21.047" level="INFO">${pids} = 15140</msg>
<status status="PASS" starttime="20210729 14:20:21.034" endtime="20210729 14:20:21.047"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:21.048" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:21.047" endtime="20210729 14:20:21.048"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:21.049" level="INFO">${pids} = ['15140']</msg>
<status status="PASS" starttime="20210729 14:20:21.048" endtime="20210729 14:20:21.049"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15140</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:21.053" level="INFO">Running command 'kill 15140 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:21.049" endtime="20210729 14:20:21.053"/>
</kw>
<status status="PASS" starttime="20210729 14:20:21.049" endtime="20210729 14:20:21.054"/>
</iter>
<status status="PASS" starttime="20210729 14:20:21.049" endtime="20210729 14:20:21.054"/>
</for>
<status status="PASS" starttime="20210729 14:20:21.048" endtime="20210729 14:20:21.054"/>
</branch>
<status status="PASS" starttime="20210729 14:20:21.048" endtime="20210729 14:20:21.054"/>
</if>
<status status="PASS" starttime="20210729 14:20:21.033" endtime="20210729 14:20:21.054"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:21.055" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:21.055" endtime="20210729 14:20:21.055"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:21.056" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:21.056" endtime="20210729 14:20:21.056"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:21.056" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:21.056" endtime="20210729 14:20:21.056"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:21.057" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:21.057" endtime="20210729 14:20:21.057"/>
</kw>
<msg timestamp="20210729 14:20:21.057" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:21.055" endtime="20210729 14:20:21.057"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:21.060" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:21.057" endtime="20210729 14:20:21.062"/>
</kw>
<status status="PASS" starttime="20210729 14:20:21.054" endtime="20210729 14:20:21.062"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:21.064" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:21.064" endtime="20210729 14:20:21.069"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:22.570" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:21.069" endtime="20210729 14:20:22.570"/>
</kw>
<status status="PASS" starttime="20210729 14:20:21.063" endtime="20210729 14:20:22.570"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:22.571" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:22.571" endtime="20210729 14:20:22.571"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:22.572" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:22.571" endtime="20210729 14:20:22.572"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:22.572" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:22.572" endtime="20210729 14:20:22.572"/>
</kw>
<msg timestamp="20210729 14:20:22.572" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:22.571" endtime="20210729 14:20:22.572"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:22.573" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:22.572" endtime="20210729 14:20:22.573"/>
</kw>
<status status="PASS" starttime="20210729 14:20:22.570" endtime="20210729 14:20:22.573"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:22.574" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:22.574" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:22.574" endtime="20210729 14:20:22.574"/>
</kw>
<status status="PASS" starttime="20210729 14:20:22.573" endtime="20210729 14:20:22.574"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:22.575" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:22.575" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:22.575" endtime="20210729 14:20:22.575"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:22.575" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:22.575" endtime="20210729 14:20:22.575"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:22.576" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:22.576" endtime="20210729 14:20:22.576"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:22.576" endtime="20210729 14:20:22.577"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:22.577" endtime="20210729 14:20:22.577"/>
</kw>
<status status="PASS" starttime="20210729 14:20:22.576" endtime="20210729 14:20:22.577"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:22.578" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:22.578" endtime="20210729 14:20:22.578"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:22.578" endtime="20210729 14:20:22.578"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:22.579" endtime="20210729 14:20:22.579"/>
</kw>
<status status="PASS" starttime="20210729 14:20:22.578" endtime="20210729 14:20:22.579"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:22.579" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:22.579" endtime="20210729 14:20:22.580"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:22.580" endtime="20210729 14:20:22.580"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:22.581" endtime="20210729 14:20:22.581"/>
</kw>
<status status="PASS" starttime="20210729 14:20:22.579" endtime="20210729 14:20:22.581"/>
</iter>
<status status="PASS" starttime="20210729 14:20:22.576" endtime="20210729 14:20:22.581"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:22.581" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:22.581" endtime="20210729 14:20:22.581"/>
</kw>
<status status="PASS" starttime="20210729 14:20:22.574" endtime="20210729 14:20:22.582"/>
</kw>
<status status="PASS" starttime="20210729 14:20:21.033" endtime="20210729 14:20:22.582"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdABCDefgjklmnprstoö</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:22.583" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:22.583" endtime="20210729 14:20:22.583"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:22.583" level="INFO">${payload} = {'password': 'abcdABCDefgjklmnprstoö'}</msg>
<status status="PASS" starttime="20210729 14:20:22.583" endtime="20210729 14:20:22.583"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:22.593" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:22.593" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:22.584" endtime="20210729 14:20:22.593"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:22.593" endtime="20210729 14:20:22.594"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:22.594" endtime="20210729 14:20:22.594"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:22.584" endtime="20210729 14:20:22.594"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:22.583" endtime="20210729 14:20:22.594"/>
</for>
<status status="FAIL" starttime="20210729 14:20:22.582" endtime="20210729 14:20:22.594"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:22.582" endtime="20210729 14:20:22.594"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdABCDefgjklmnprstoö</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:22.595" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:22.595" endtime="20210729 14:20:22.596"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:22.596" level="INFO">${payload} = {'password': 'abcdABCDefgjklmnprstoö'}</msg>
<status status="PASS" starttime="20210729 14:20:22.596" endtime="20210729 14:20:22.596"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:22.601" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:22.601" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:22.597" endtime="20210729 14:20:22.601"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:22.601" endtime="20210729 14:20:22.601"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:22.601" endtime="20210729 14:20:22.601"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:22.596" endtime="20210729 14:20:22.601"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:22.596" endtime="20210729 14:20:22.601"/>
</for>
<status status="FAIL" starttime="20210729 14:20:22.594" endtime="20210729 14:20:22.602"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:22.594" endtime="20210729 14:20:22.602"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdABCDefgjklmnprstoö</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:22.603" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:22.602" endtime="20210729 14:20:22.603"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:22.603" level="INFO">${payload} = {'password': 'abcdABCDefgjklmnprstoö'}</msg>
<status status="PASS" starttime="20210729 14:20:22.603" endtime="20210729 14:20:22.603"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:22.608" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:22.608" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:22.603" endtime="20210729 14:20:22.608"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:22.608" endtime="20210729 14:20:22.608"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:22.608" endtime="20210729 14:20:22.608"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:22.603" endtime="20210729 14:20:22.608"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:22.603" endtime="20210729 14:20:22.608"/>
</for>
<status status="FAIL" starttime="20210729 14:20:22.602" endtime="20210729 14:20:22.608"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:22.602" endtime="20210729 14:20:22.608"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:22.582" endtime="20210729 14:20:22.608"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:22.613" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:22.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:22.623" level="INFO">${pids} = 15163
15170
15175</msg>
<status status="PASS" starttime="20210729 14:20:22.609" endtime="20210729 14:20:22.623"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:22.624" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:22.624" endtime="20210729 14:20:22.624"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:22.625" level="INFO">${pids} = ['15163', '15170', '15175']</msg>
<status status="PASS" starttime="20210729 14:20:22.625" endtime="20210729 14:20:22.625"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15163</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:22.628" level="INFO">Running command 'kill 15163 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:22.625" endtime="20210729 14:20:22.629"/>
</kw>
<status status="PASS" starttime="20210729 14:20:22.625" endtime="20210729 14:20:22.629"/>
</iter>
<iter>
<var name="${pid}">15170</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:22.633" level="INFO">Running command 'kill 15170 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:22.629" endtime="20210729 14:20:22.633"/>
</kw>
<status status="PASS" starttime="20210729 14:20:22.629" endtime="20210729 14:20:22.633"/>
</iter>
<iter>
<var name="${pid}">15175</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:22.636" level="INFO">Running command 'kill 15175 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:22.634" endtime="20210729 14:20:22.637"/>
</kw>
<status status="PASS" starttime="20210729 14:20:22.633" endtime="20210729 14:20:22.637"/>
</iter>
<status status="PASS" starttime="20210729 14:20:22.625" endtime="20210729 14:20:22.637"/>
</for>
<status status="PASS" starttime="20210729 14:20:22.624" endtime="20210729 14:20:22.637"/>
</branch>
<status status="PASS" starttime="20210729 14:20:22.624" endtime="20210729 14:20:22.637"/>
</if>
<status status="PASS" starttime="20210729 14:20:22.609" endtime="20210729 14:20:22.637"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdABCDefgjklmnprstoö'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:21.032" endtime="20210729 14:20:22.637">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t60" name="With Any Valid Token, Updating Password Of Each System User With abcd012 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:22.644" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:22.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:22.653" level="INFO">${pids} = 15204</msg>
<status status="PASS" starttime="20210729 14:20:22.639" endtime="20210729 14:20:22.653"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:22.654" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:22.654" endtime="20210729 14:20:22.654"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:22.655" level="INFO">${pids} = ['15204']</msg>
<status status="PASS" starttime="20210729 14:20:22.655" endtime="20210729 14:20:22.655"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15204</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:22.660" level="INFO">Running command 'kill 15204 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:22.655" endtime="20210729 14:20:22.661"/>
</kw>
<status status="PASS" starttime="20210729 14:20:22.655" endtime="20210729 14:20:22.661"/>
</iter>
<status status="PASS" starttime="20210729 14:20:22.655" endtime="20210729 14:20:22.661"/>
</for>
<status status="PASS" starttime="20210729 14:20:22.655" endtime="20210729 14:20:22.661"/>
</branch>
<status status="PASS" starttime="20210729 14:20:22.654" endtime="20210729 14:20:22.661"/>
</if>
<status status="PASS" starttime="20210729 14:20:22.639" endtime="20210729 14:20:22.661"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:22.663" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:22.662" endtime="20210729 14:20:22.663"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:22.664" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:22.663" endtime="20210729 14:20:22.664"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:22.664" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:22.664" endtime="20210729 14:20:22.664"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:22.664" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:22.664" endtime="20210729 14:20:22.664"/>
</kw>
<msg timestamp="20210729 14:20:22.665" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:22.663" endtime="20210729 14:20:22.665"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:22.671" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:22.665" endtime="20210729 14:20:22.673"/>
</kw>
<status status="PASS" starttime="20210729 14:20:22.662" endtime="20210729 14:20:22.673"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:22.674" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:22.674" endtime="20210729 14:20:22.678"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:24.180" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:22.678" endtime="20210729 14:20:24.180"/>
</kw>
<status status="PASS" starttime="20210729 14:20:22.673" endtime="20210729 14:20:24.181"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:24.182" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:24.182" endtime="20210729 14:20:24.182"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:24.182" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:24.182" endtime="20210729 14:20:24.182"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:24.183" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:24.182" endtime="20210729 14:20:24.183"/>
</kw>
<msg timestamp="20210729 14:20:24.183" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:24.181" endtime="20210729 14:20:24.183"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:24.183" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:24.183" endtime="20210729 14:20:24.184"/>
</kw>
<status status="PASS" starttime="20210729 14:20:24.181" endtime="20210729 14:20:24.184"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:24.184" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:24.184" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:24.184" endtime="20210729 14:20:24.185"/>
</kw>
<status status="PASS" starttime="20210729 14:20:24.184" endtime="20210729 14:20:24.185"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:24.185" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:24.185" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:24.185" endtime="20210729 14:20:24.185"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:24.186" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:24.186" endtime="20210729 14:20:24.186"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:24.186" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:24.186" endtime="20210729 14:20:24.186"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:24.186" endtime="20210729 14:20:24.187"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:24.187" endtime="20210729 14:20:24.187"/>
</kw>
<status status="PASS" starttime="20210729 14:20:24.186" endtime="20210729 14:20:24.187"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:24.188" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:24.187" endtime="20210729 14:20:24.188"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:24.188" endtime="20210729 14:20:24.188"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:24.188" endtime="20210729 14:20:24.189"/>
</kw>
<status status="PASS" starttime="20210729 14:20:24.187" endtime="20210729 14:20:24.189"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:24.189" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:24.189" endtime="20210729 14:20:24.189"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:24.189" endtime="20210729 14:20:24.190"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:24.190" endtime="20210729 14:20:24.190"/>
</kw>
<status status="PASS" starttime="20210729 14:20:24.189" endtime="20210729 14:20:24.190"/>
</iter>
<status status="PASS" starttime="20210729 14:20:24.186" endtime="20210729 14:20:24.190"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:24.191" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:24.190" endtime="20210729 14:20:24.191"/>
</kw>
<status status="PASS" starttime="20210729 14:20:24.185" endtime="20210729 14:20:24.191"/>
</kw>
<status status="PASS" starttime="20210729 14:20:22.639" endtime="20210729 14:20:24.191"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcd012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:24.192" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:24.192" endtime="20210729 14:20:24.192"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:24.192" level="INFO">${payload} = {'password': 'abcd012'}</msg>
<status status="PASS" starttime="20210729 14:20:24.192" endtime="20210729 14:20:24.192"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:24.202" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:24.202" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:24.193" endtime="20210729 14:20:24.202"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:24.203" endtime="20210729 14:20:24.203"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:24.203" endtime="20210729 14:20:24.203"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:24.193" endtime="20210729 14:20:24.203"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:24.192" endtime="20210729 14:20:24.203"/>
</for>
<status status="FAIL" starttime="20210729 14:20:24.191" endtime="20210729 14:20:24.203"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:24.191" endtime="20210729 14:20:24.203"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcd012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:24.204" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:24.204" endtime="20210729 14:20:24.204"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:24.204" level="INFO">${payload} = {'password': 'abcd012'}</msg>
<status status="PASS" starttime="20210729 14:20:24.204" endtime="20210729 14:20:24.205"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:24.209" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:24.209" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:24.205" endtime="20210729 14:20:24.209"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:24.209" endtime="20210729 14:20:24.209"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:24.209" endtime="20210729 14:20:24.209"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:24.205" endtime="20210729 14:20:24.209"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:24.205" endtime="20210729 14:20:24.209"/>
</for>
<status status="FAIL" starttime="20210729 14:20:24.203" endtime="20210729 14:20:24.209"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:24.203" endtime="20210729 14:20:24.210"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcd012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:24.211" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:24.210" endtime="20210729 14:20:24.211"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:24.211" level="INFO">${payload} = {'password': 'abcd012'}</msg>
<status status="PASS" starttime="20210729 14:20:24.211" endtime="20210729 14:20:24.211"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:24.216" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:24.216" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:24.211" endtime="20210729 14:20:24.216"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:24.216" endtime="20210729 14:20:24.216"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:24.216" endtime="20210729 14:20:24.216"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:24.211" endtime="20210729 14:20:24.216"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:24.211" endtime="20210729 14:20:24.216"/>
</for>
<status status="FAIL" starttime="20210729 14:20:24.210" endtime="20210729 14:20:24.217"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:24.210" endtime="20210729 14:20:24.217"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:24.191" endtime="20210729 14:20:24.217"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:24.221" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:24.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:24.230" level="INFO">${pids} = 15227
15234
15240</msg>
<status status="PASS" starttime="20210729 14:20:24.218" endtime="20210729 14:20:24.230"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:24.231" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:24.231" endtime="20210729 14:20:24.231"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:24.232" level="INFO">${pids} = ['15227', '15234', '15240']</msg>
<status status="PASS" starttime="20210729 14:20:24.232" endtime="20210729 14:20:24.232"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15227</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:24.235" level="INFO">Running command 'kill 15227 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:24.232" endtime="20210729 14:20:24.236"/>
</kw>
<status status="PASS" starttime="20210729 14:20:24.232" endtime="20210729 14:20:24.236"/>
</iter>
<iter>
<var name="${pid}">15234</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:24.239" level="INFO">Running command 'kill 15234 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:24.236" endtime="20210729 14:20:24.241"/>
</kw>
<status status="PASS" starttime="20210729 14:20:24.236" endtime="20210729 14:20:24.241"/>
</iter>
<iter>
<var name="${pid}">15240</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:24.245" level="INFO">Running command 'kill 15240 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:24.242" endtime="20210729 14:20:24.245"/>
</kw>
<status status="PASS" starttime="20210729 14:20:24.241" endtime="20210729 14:20:24.245"/>
</iter>
<status status="PASS" starttime="20210729 14:20:24.232" endtime="20210729 14:20:24.245"/>
</for>
<status status="PASS" starttime="20210729 14:20:24.232" endtime="20210729 14:20:24.245"/>
</branch>
<status status="PASS" starttime="20210729 14:20:24.231" endtime="20210729 14:20:24.245"/>
</if>
<status status="PASS" starttime="20210729 14:20:24.217" endtime="20210729 14:20:24.246"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcd012'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:22.638" endtime="20210729 14:20:24.246">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t61" name="With Any Valid Token, Updating Password Of Each System User With abcd0123 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:24.253" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:24.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:24.263" level="INFO">${pids} = 15269</msg>
<status status="PASS" starttime="20210729 14:20:24.248" endtime="20210729 14:20:24.263"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:24.264" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:24.263" endtime="20210729 14:20:24.264"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:24.264" level="INFO">${pids} = ['15269']</msg>
<status status="PASS" starttime="20210729 14:20:24.264" endtime="20210729 14:20:24.264"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15269</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:24.271" level="INFO">Running command 'kill 15269 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:24.265" endtime="20210729 14:20:24.272"/>
</kw>
<status status="PASS" starttime="20210729 14:20:24.265" endtime="20210729 14:20:24.272"/>
</iter>
<status status="PASS" starttime="20210729 14:20:24.264" endtime="20210729 14:20:24.272"/>
</for>
<status status="PASS" starttime="20210729 14:20:24.264" endtime="20210729 14:20:24.272"/>
</branch>
<status status="PASS" starttime="20210729 14:20:24.264" endtime="20210729 14:20:24.272"/>
</if>
<status status="PASS" starttime="20210729 14:20:24.248" endtime="20210729 14:20:24.273"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:24.274" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:24.273" endtime="20210729 14:20:24.274"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:24.274" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:24.274" endtime="20210729 14:20:24.274"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:24.275" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:24.275" endtime="20210729 14:20:24.275"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:24.275" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:24.275" endtime="20210729 14:20:24.276"/>
</kw>
<msg timestamp="20210729 14:20:24.277" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:24.274" endtime="20210729 14:20:24.277"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:24.282" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:24.277" endtime="20210729 14:20:24.283"/>
</kw>
<status status="PASS" starttime="20210729 14:20:24.273" endtime="20210729 14:20:24.284"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:24.285" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:24.284" endtime="20210729 14:20:24.288"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:25.791" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:24.289" endtime="20210729 14:20:25.791"/>
</kw>
<status status="PASS" starttime="20210729 14:20:24.284" endtime="20210729 14:20:25.791"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:25.793" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:25.792" endtime="20210729 14:20:25.793"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:25.793" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:25.793" endtime="20210729 14:20:25.793"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:25.794" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:25.793" endtime="20210729 14:20:25.794"/>
</kw>
<msg timestamp="20210729 14:20:25.794" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:25.792" endtime="20210729 14:20:25.794"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:25.794" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:25.794" endtime="20210729 14:20:25.795"/>
</kw>
<status status="PASS" starttime="20210729 14:20:25.792" endtime="20210729 14:20:25.795"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:25.796" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:25.796" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:25.796" endtime="20210729 14:20:25.796"/>
</kw>
<status status="PASS" starttime="20210729 14:20:25.795" endtime="20210729 14:20:25.796"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:25.797" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:25.797" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:25.796" endtime="20210729 14:20:25.797"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:25.797" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:25.797" endtime="20210729 14:20:25.797"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:25.798" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:25.798" endtime="20210729 14:20:25.798"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:25.798" endtime="20210729 14:20:25.799"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:25.799" endtime="20210729 14:20:25.800"/>
</kw>
<status status="PASS" starttime="20210729 14:20:25.798" endtime="20210729 14:20:25.800"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:25.800" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:25.800" endtime="20210729 14:20:25.800"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:25.800" endtime="20210729 14:20:25.801"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:25.801" endtime="20210729 14:20:25.802"/>
</kw>
<status status="PASS" starttime="20210729 14:20:25.800" endtime="20210729 14:20:25.802"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:25.802" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:25.802" endtime="20210729 14:20:25.802"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:25.802" endtime="20210729 14:20:25.803"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:25.803" endtime="20210729 14:20:25.803"/>
</kw>
<status status="PASS" starttime="20210729 14:20:25.802" endtime="20210729 14:20:25.803"/>
</iter>
<status status="PASS" starttime="20210729 14:20:25.797" endtime="20210729 14:20:25.803"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:25.804" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:25.803" endtime="20210729 14:20:25.804"/>
</kw>
<status status="PASS" starttime="20210729 14:20:25.796" endtime="20210729 14:20:25.804"/>
</kw>
<status status="PASS" starttime="20210729 14:20:24.247" endtime="20210729 14:20:25.804"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcd0123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:25.805" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:25.805" endtime="20210729 14:20:25.805"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:25.805" level="INFO">${payload} = {'password': 'abcd0123'}</msg>
<status status="PASS" starttime="20210729 14:20:25.805" endtime="20210729 14:20:25.805"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:25.815" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:25.815" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:25.806" endtime="20210729 14:20:25.815"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:25.816" endtime="20210729 14:20:25.817"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:25.817" endtime="20210729 14:20:25.817"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:25.806" endtime="20210729 14:20:25.817"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:25.805" endtime="20210729 14:20:25.817"/>
</for>
<status status="FAIL" starttime="20210729 14:20:25.804" endtime="20210729 14:20:25.817"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:25.804" endtime="20210729 14:20:25.817"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcd0123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:25.819" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:25.818" endtime="20210729 14:20:25.819"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:25.819" level="INFO">${payload} = {'password': 'abcd0123'}</msg>
<status status="PASS" starttime="20210729 14:20:25.819" endtime="20210729 14:20:25.819"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:25.823" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:25.824" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:25.820" endtime="20210729 14:20:25.824"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:25.824" endtime="20210729 14:20:25.824"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:25.824" endtime="20210729 14:20:25.824"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:25.819" endtime="20210729 14:20:25.824"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:25.819" endtime="20210729 14:20:25.824"/>
</for>
<status status="FAIL" starttime="20210729 14:20:25.817" endtime="20210729 14:20:25.824"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:25.817" endtime="20210729 14:20:25.824"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcd0123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:25.825" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:25.825" endtime="20210729 14:20:25.825"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:25.826" level="INFO">${payload} = {'password': 'abcd0123'}</msg>
<status status="PASS" starttime="20210729 14:20:25.825" endtime="20210729 14:20:25.826"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:25.829" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:25.830" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:25.826" endtime="20210729 14:20:25.830"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:25.830" endtime="20210729 14:20:25.830"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:25.830" endtime="20210729 14:20:25.830"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:25.826" endtime="20210729 14:20:25.830"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:25.826" endtime="20210729 14:20:25.831"/>
</for>
<status status="FAIL" starttime="20210729 14:20:25.824" endtime="20210729 14:20:25.831"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:25.824" endtime="20210729 14:20:25.831"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:25.804" endtime="20210729 14:20:25.831"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:25.837" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:25.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:25.847" level="INFO">${pids} = 15292
15299
15309</msg>
<status status="PASS" starttime="20210729 14:20:25.833" endtime="20210729 14:20:25.847"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:25.848" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:25.847" endtime="20210729 14:20:25.848"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:25.848" level="INFO">${pids} = ['15292', '15299', '15309']</msg>
<status status="PASS" starttime="20210729 14:20:25.848" endtime="20210729 14:20:25.848"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15292</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:25.852" level="INFO">Running command 'kill 15292 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:25.849" endtime="20210729 14:20:25.852"/>
</kw>
<status status="PASS" starttime="20210729 14:20:25.849" endtime="20210729 14:20:25.853"/>
</iter>
<iter>
<var name="${pid}">15299</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:25.856" level="INFO">Running command 'kill 15299 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:25.853" endtime="20210729 14:20:25.856"/>
</kw>
<status status="PASS" starttime="20210729 14:20:25.853" endtime="20210729 14:20:25.856"/>
</iter>
<iter>
<var name="${pid}">15309</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:25.859" level="INFO">Running command 'kill 15309 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:25.857" endtime="20210729 14:20:25.860"/>
</kw>
<status status="PASS" starttime="20210729 14:20:25.856" endtime="20210729 14:20:25.860"/>
</iter>
<status status="PASS" starttime="20210729 14:20:25.849" endtime="20210729 14:20:25.860"/>
</for>
<status status="PASS" starttime="20210729 14:20:25.848" endtime="20210729 14:20:25.860"/>
</branch>
<status status="PASS" starttime="20210729 14:20:25.848" endtime="20210729 14:20:25.860"/>
</if>
<status status="PASS" starttime="20210729 14:20:25.832" endtime="20210729 14:20:25.860"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcd0123'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:24.246" endtime="20210729 14:20:25.860">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t62" name="With Any Valid Token, Updating Password Of Each System User With abcd0123456789defghjk4 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:25.867" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:25.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:25.876" level="INFO">${pids} = 15338</msg>
<status status="PASS" starttime="20210729 14:20:25.863" endtime="20210729 14:20:25.876"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:25.877" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:25.877" endtime="20210729 14:20:25.878"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:25.878" level="INFO">${pids} = ['15338']</msg>
<status status="PASS" starttime="20210729 14:20:25.878" endtime="20210729 14:20:25.878"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15338</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:25.882" level="INFO">Running command 'kill 15338 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:25.879" endtime="20210729 14:20:25.883"/>
</kw>
<status status="PASS" starttime="20210729 14:20:25.878" endtime="20210729 14:20:25.883"/>
</iter>
<status status="PASS" starttime="20210729 14:20:25.878" endtime="20210729 14:20:25.883"/>
</for>
<status status="PASS" starttime="20210729 14:20:25.878" endtime="20210729 14:20:25.883"/>
</branch>
<status status="PASS" starttime="20210729 14:20:25.878" endtime="20210729 14:20:25.883"/>
</if>
<status status="PASS" starttime="20210729 14:20:25.862" endtime="20210729 14:20:25.883"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:25.884" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:25.884" endtime="20210729 14:20:25.884"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:25.885" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:25.885" endtime="20210729 14:20:25.885"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:25.885" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:25.885" endtime="20210729 14:20:25.885"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:25.886" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:25.885" endtime="20210729 14:20:25.886"/>
</kw>
<msg timestamp="20210729 14:20:25.886" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:25.884" endtime="20210729 14:20:25.886"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:25.889" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:25.886" endtime="20210729 14:20:25.891"/>
</kw>
<status status="PASS" starttime="20210729 14:20:25.883" endtime="20210729 14:20:25.891"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:25.892" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:25.892" endtime="20210729 14:20:25.898"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:27.400" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:25.899" endtime="20210729 14:20:27.400"/>
</kw>
<status status="PASS" starttime="20210729 14:20:25.891" endtime="20210729 14:20:27.400"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:27.401" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:27.401" endtime="20210729 14:20:27.401"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:27.402" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:27.401" endtime="20210729 14:20:27.402"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:27.402" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:27.402" endtime="20210729 14:20:27.402"/>
</kw>
<msg timestamp="20210729 14:20:27.402" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:27.401" endtime="20210729 14:20:27.402"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:27.403" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:27.402" endtime="20210729 14:20:27.403"/>
</kw>
<status status="PASS" starttime="20210729 14:20:27.400" endtime="20210729 14:20:27.403"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:27.404" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:27.404" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:27.403" endtime="20210729 14:20:27.404"/>
</kw>
<status status="PASS" starttime="20210729 14:20:27.403" endtime="20210729 14:20:27.404"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:27.405" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:27.405" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:27.404" endtime="20210729 14:20:27.405"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:27.405" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:27.405" endtime="20210729 14:20:27.405"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:27.406" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:27.406" endtime="20210729 14:20:27.406"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:27.406" endtime="20210729 14:20:27.406"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:27.407" endtime="20210729 14:20:27.407"/>
</kw>
<status status="PASS" starttime="20210729 14:20:27.405" endtime="20210729 14:20:27.407"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:27.407" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:27.407" endtime="20210729 14:20:27.407"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:27.407" endtime="20210729 14:20:27.408"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:27.408" endtime="20210729 14:20:27.408"/>
</kw>
<status status="PASS" starttime="20210729 14:20:27.407" endtime="20210729 14:20:27.408"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:27.408" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:27.408" endtime="20210729 14:20:27.409"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:27.409" endtime="20210729 14:20:27.409"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:27.409" endtime="20210729 14:20:27.410"/>
</kw>
<status status="PASS" starttime="20210729 14:20:27.408" endtime="20210729 14:20:27.410"/>
</iter>
<status status="PASS" starttime="20210729 14:20:27.405" endtime="20210729 14:20:27.410"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:27.410" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:27.410" endtime="20210729 14:20:27.410"/>
</kw>
<status status="PASS" starttime="20210729 14:20:27.404" endtime="20210729 14:20:27.410"/>
</kw>
<status status="PASS" starttime="20210729 14:20:25.862" endtime="20210729 14:20:27.410"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcd0123456789defghjk4</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:27.411" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:27.411" endtime="20210729 14:20:27.411"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:27.412" level="INFO">${payload} = {'password': 'abcd0123456789defghjk4'}</msg>
<status status="PASS" starttime="20210729 14:20:27.412" endtime="20210729 14:20:27.412"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:27.421" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:27.421" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:27.412" endtime="20210729 14:20:27.422"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:27.422" endtime="20210729 14:20:27.422"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:27.422" endtime="20210729 14:20:27.422"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:27.412" endtime="20210729 14:20:27.422"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:27.412" endtime="20210729 14:20:27.422"/>
</for>
<status status="FAIL" starttime="20210729 14:20:27.411" endtime="20210729 14:20:27.422"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:27.411" endtime="20210729 14:20:27.422"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcd0123456789defghjk4</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:27.423" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:27.423" endtime="20210729 14:20:27.423"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:27.424" level="INFO">${payload} = {'password': 'abcd0123456789defghjk4'}</msg>
<status status="PASS" starttime="20210729 14:20:27.423" endtime="20210729 14:20:27.424"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:27.428" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:27.428" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:27.424" endtime="20210729 14:20:27.428"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:27.428" endtime="20210729 14:20:27.428"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:27.428" endtime="20210729 14:20:27.428"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:27.424" endtime="20210729 14:20:27.428"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:27.424" endtime="20210729 14:20:27.428"/>
</for>
<status status="FAIL" starttime="20210729 14:20:27.422" endtime="20210729 14:20:27.429"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:27.422" endtime="20210729 14:20:27.429"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcd0123456789defghjk4</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:27.430" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:27.430" endtime="20210729 14:20:27.430"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:27.431" level="INFO">${payload} = {'password': 'abcd0123456789defghjk4'}</msg>
<status status="PASS" starttime="20210729 14:20:27.431" endtime="20210729 14:20:27.431"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:27.437" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:27.437" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:27.432" endtime="20210729 14:20:27.437"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:27.437" endtime="20210729 14:20:27.437"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:27.437" endtime="20210729 14:20:27.437"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:27.432" endtime="20210729 14:20:27.437"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:27.431" endtime="20210729 14:20:27.437"/>
</for>
<status status="FAIL" starttime="20210729 14:20:27.429" endtime="20210729 14:20:27.438"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:27.429" endtime="20210729 14:20:27.438"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:27.410" endtime="20210729 14:20:27.438"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:27.441" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:27.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:27.450" level="INFO">${pids} = 15361
15368
15373</msg>
<status status="PASS" starttime="20210729 14:20:27.439" endtime="20210729 14:20:27.450"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:27.451" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:27.451" endtime="20210729 14:20:27.451"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:27.452" level="INFO">${pids} = ['15361', '15368', '15373']</msg>
<status status="PASS" starttime="20210729 14:20:27.452" endtime="20210729 14:20:27.452"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15361</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:27.455" level="INFO">Running command 'kill 15361 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:27.452" endtime="20210729 14:20:27.456"/>
</kw>
<status status="PASS" starttime="20210729 14:20:27.452" endtime="20210729 14:20:27.456"/>
</iter>
<iter>
<var name="${pid}">15368</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:27.461" level="INFO">Running command 'kill 15368 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:27.457" endtime="20210729 14:20:27.462"/>
</kw>
<status status="PASS" starttime="20210729 14:20:27.456" endtime="20210729 14:20:27.462"/>
</iter>
<iter>
<var name="${pid}">15373</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:27.466" level="INFO">Running command 'kill 15373 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:27.463" endtime="20210729 14:20:27.467"/>
</kw>
<status status="PASS" starttime="20210729 14:20:27.462" endtime="20210729 14:20:27.467"/>
</iter>
<status status="PASS" starttime="20210729 14:20:27.452" endtime="20210729 14:20:27.467"/>
</for>
<status status="PASS" starttime="20210729 14:20:27.451" endtime="20210729 14:20:27.467"/>
</branch>
<status status="PASS" starttime="20210729 14:20:27.451" endtime="20210729 14:20:27.467"/>
</if>
<status status="PASS" starttime="20210729 14:20:27.438" endtime="20210729 14:20:27.467"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcd0123456789defghjk4'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:25.861" endtime="20210729 14:20:27.468">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t63" name="With Any Valid Token, Updating Password Of Each System User With abcd!?. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:27.472" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:27.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:27.480" level="INFO">${pids} = 15402</msg>
<status status="PASS" starttime="20210729 14:20:27.469" endtime="20210729 14:20:27.480"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:27.481" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:27.481" endtime="20210729 14:20:27.481"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:27.482" level="INFO">${pids} = ['15402']</msg>
<status status="PASS" starttime="20210729 14:20:27.482" endtime="20210729 14:20:27.482"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15402</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:27.485" level="INFO">Running command 'kill 15402 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:27.482" endtime="20210729 14:20:27.485"/>
</kw>
<status status="PASS" starttime="20210729 14:20:27.482" endtime="20210729 14:20:27.485"/>
</iter>
<status status="PASS" starttime="20210729 14:20:27.482" endtime="20210729 14:20:27.486"/>
</for>
<status status="PASS" starttime="20210729 14:20:27.481" endtime="20210729 14:20:27.486"/>
</branch>
<status status="PASS" starttime="20210729 14:20:27.481" endtime="20210729 14:20:27.486"/>
</if>
<status status="PASS" starttime="20210729 14:20:27.469" endtime="20210729 14:20:27.486"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:27.487" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:27.486" endtime="20210729 14:20:27.487"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:27.487" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:27.487" endtime="20210729 14:20:27.487"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:27.488" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:27.487" endtime="20210729 14:20:27.488"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:27.488" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:27.488" endtime="20210729 14:20:27.488"/>
</kw>
<msg timestamp="20210729 14:20:27.488" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:27.487" endtime="20210729 14:20:27.488"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:27.493" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:27.488" endtime="20210729 14:20:27.498"/>
</kw>
<status status="PASS" starttime="20210729 14:20:27.486" endtime="20210729 14:20:27.498"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:27.500" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:27.499" endtime="20210729 14:20:27.504"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:29.009" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:27.504" endtime="20210729 14:20:29.010"/>
</kw>
<status status="PASS" starttime="20210729 14:20:27.499" endtime="20210729 14:20:29.010"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:29.011" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:29.011" endtime="20210729 14:20:29.011"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:29.012" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:29.012" endtime="20210729 14:20:29.012"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:29.012" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:29.012" endtime="20210729 14:20:29.012"/>
</kw>
<msg timestamp="20210729 14:20:29.013" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:29.011" endtime="20210729 14:20:29.013"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:29.013" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:29.013" endtime="20210729 14:20:29.014"/>
</kw>
<status status="PASS" starttime="20210729 14:20:29.010" endtime="20210729 14:20:29.014"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:29.015" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:29.015" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:29.014" endtime="20210729 14:20:29.015"/>
</kw>
<status status="PASS" starttime="20210729 14:20:29.014" endtime="20210729 14:20:29.015"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:29.016" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:29.016" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:29.015" endtime="20210729 14:20:29.016"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:29.016" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:29.016" endtime="20210729 14:20:29.016"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:29.017" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:29.017" endtime="20210729 14:20:29.017"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:29.017" endtime="20210729 14:20:29.017"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:29.018" endtime="20210729 14:20:29.018"/>
</kw>
<status status="PASS" starttime="20210729 14:20:29.016" endtime="20210729 14:20:29.018"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:29.018" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:29.018" endtime="20210729 14:20:29.018"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:29.018" endtime="20210729 14:20:29.019"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:29.019" endtime="20210729 14:20:29.019"/>
</kw>
<status status="PASS" starttime="20210729 14:20:29.018" endtime="20210729 14:20:29.019"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:29.020" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:29.020" endtime="20210729 14:20:29.020"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:29.020" endtime="20210729 14:20:29.021"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:29.021" endtime="20210729 14:20:29.021"/>
</kw>
<status status="PASS" starttime="20210729 14:20:29.019" endtime="20210729 14:20:29.021"/>
</iter>
<status status="PASS" starttime="20210729 14:20:29.016" endtime="20210729 14:20:29.021"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:29.022" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:29.021" endtime="20210729 14:20:29.022"/>
</kw>
<status status="PASS" starttime="20210729 14:20:29.015" endtime="20210729 14:20:29.022"/>
</kw>
<status status="PASS" starttime="20210729 14:20:27.469" endtime="20210729 14:20:29.022"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcd!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:29.024" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:29.023" endtime="20210729 14:20:29.024"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:29.024" level="INFO">${payload} = {'password': 'abcd!?.'}</msg>
<status status="PASS" starttime="20210729 14:20:29.024" endtime="20210729 14:20:29.024"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:29.033" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:29.033" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:29.024" endtime="20210729 14:20:29.033"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:29.034" endtime="20210729 14:20:29.034"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:29.034" endtime="20210729 14:20:29.034"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:29.024" endtime="20210729 14:20:29.034"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:29.024" endtime="20210729 14:20:29.034"/>
</for>
<status status="FAIL" starttime="20210729 14:20:29.023" endtime="20210729 14:20:29.034"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:29.023" endtime="20210729 14:20:29.034"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcd!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:29.035" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:29.035" endtime="20210729 14:20:29.035"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:29.036" level="INFO">${payload} = {'password': 'abcd!?.'}</msg>
<status status="PASS" starttime="20210729 14:20:29.035" endtime="20210729 14:20:29.036"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:29.040" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:29.040" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:29.036" endtime="20210729 14:20:29.041"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:29.041" endtime="20210729 14:20:29.041"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:29.041" endtime="20210729 14:20:29.041"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:29.036" endtime="20210729 14:20:29.041"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:29.036" endtime="20210729 14:20:29.041"/>
</for>
<status status="FAIL" starttime="20210729 14:20:29.034" endtime="20210729 14:20:29.041"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:29.034" endtime="20210729 14:20:29.041"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcd!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:29.042" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:29.042" endtime="20210729 14:20:29.042"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:29.043" level="INFO">${payload} = {'password': 'abcd!?.'}</msg>
<status status="PASS" starttime="20210729 14:20:29.042" endtime="20210729 14:20:29.043"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:29.047" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:29.048" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:29.043" endtime="20210729 14:20:29.048"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:29.048" endtime="20210729 14:20:29.048"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:29.048" endtime="20210729 14:20:29.048"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:29.043" endtime="20210729 14:20:29.048"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:29.043" endtime="20210729 14:20:29.048"/>
</for>
<status status="FAIL" starttime="20210729 14:20:29.041" endtime="20210729 14:20:29.048"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:29.041" endtime="20210729 14:20:29.048"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:29.022" endtime="20210729 14:20:29.049"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:29.054" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:29.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:29.063" level="INFO">${pids} = 15425
15432
15436</msg>
<status status="PASS" starttime="20210729 14:20:29.050" endtime="20210729 14:20:29.063"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:29.064" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:29.064" endtime="20210729 14:20:29.064"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:29.065" level="INFO">${pids} = ['15425', '15432', '15436']</msg>
<status status="PASS" starttime="20210729 14:20:29.065" endtime="20210729 14:20:29.065"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15425</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:29.069" level="INFO">Running command 'kill 15425 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:29.065" endtime="20210729 14:20:29.069"/>
</kw>
<status status="PASS" starttime="20210729 14:20:29.065" endtime="20210729 14:20:29.069"/>
</iter>
<iter>
<var name="${pid}">15432</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:29.073" level="INFO">Running command 'kill 15432 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:29.070" endtime="20210729 14:20:29.075"/>
</kw>
<status status="PASS" starttime="20210729 14:20:29.070" endtime="20210729 14:20:29.075"/>
</iter>
<iter>
<var name="${pid}">15436</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:29.079" level="INFO">Running command 'kill 15436 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:29.076" endtime="20210729 14:20:29.080"/>
</kw>
<status status="PASS" starttime="20210729 14:20:29.075" endtime="20210729 14:20:29.081"/>
</iter>
<status status="PASS" starttime="20210729 14:20:29.065" endtime="20210729 14:20:29.081"/>
</for>
<status status="PASS" starttime="20210729 14:20:29.065" endtime="20210729 14:20:29.081"/>
</branch>
<status status="PASS" starttime="20210729 14:20:29.065" endtime="20210729 14:20:29.081"/>
</if>
<status status="PASS" starttime="20210729 14:20:29.049" endtime="20210729 14:20:29.081"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcd!?.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:27.468" endtime="20210729 14:20:29.081">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t64" name="With Any Valid Token, Updating Password Of Each System User With abcd!?.! Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:29.086" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:29.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:29.095" level="INFO">${pids} = 15465</msg>
<status status="PASS" starttime="20210729 14:20:29.083" endtime="20210729 14:20:29.095"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:29.097" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:29.096" endtime="20210729 14:20:29.097"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:29.100" level="INFO">${pids} = ['15465']</msg>
<status status="PASS" starttime="20210729 14:20:29.099" endtime="20210729 14:20:29.100"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15465</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:29.106" level="INFO">Running command 'kill 15465 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:29.101" endtime="20210729 14:20:29.106"/>
</kw>
<status status="PASS" starttime="20210729 14:20:29.101" endtime="20210729 14:20:29.106"/>
</iter>
<status status="PASS" starttime="20210729 14:20:29.100" endtime="20210729 14:20:29.106"/>
</for>
<status status="PASS" starttime="20210729 14:20:29.097" endtime="20210729 14:20:29.107"/>
</branch>
<status status="PASS" starttime="20210729 14:20:29.097" endtime="20210729 14:20:29.107"/>
</if>
<status status="PASS" starttime="20210729 14:20:29.083" endtime="20210729 14:20:29.107"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:29.109" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:29.108" endtime="20210729 14:20:29.109"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:29.111" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:29.110" endtime="20210729 14:20:29.111"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:29.111" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:29.111" endtime="20210729 14:20:29.111"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:29.112" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:29.111" endtime="20210729 14:20:29.112"/>
</kw>
<msg timestamp="20210729 14:20:29.112" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:29.109" endtime="20210729 14:20:29.113"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:29.119" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:29.113" endtime="20210729 14:20:29.121"/>
</kw>
<status status="PASS" starttime="20210729 14:20:29.108" endtime="20210729 14:20:29.121"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:29.122" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:29.122" endtime="20210729 14:20:29.126"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:30.630" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:29.126" endtime="20210729 14:20:30.630"/>
</kw>
<status status="PASS" starttime="20210729 14:20:29.121" endtime="20210729 14:20:30.630"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:30.632" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:30.631" endtime="20210729 14:20:30.632"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:30.632" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:30.632" endtime="20210729 14:20:30.632"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:30.632" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:30.632" endtime="20210729 14:20:30.632"/>
</kw>
<msg timestamp="20210729 14:20:30.633" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:30.631" endtime="20210729 14:20:30.633"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:30.633" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:30.633" endtime="20210729 14:20:30.633"/>
</kw>
<status status="PASS" starttime="20210729 14:20:30.631" endtime="20210729 14:20:30.634"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:30.634" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:30.634" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:30.634" endtime="20210729 14:20:30.634"/>
</kw>
<status status="PASS" starttime="20210729 14:20:30.634" endtime="20210729 14:20:30.634"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:30.635" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:30.635" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:30.635" endtime="20210729 14:20:30.636"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:30.636" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:30.636" endtime="20210729 14:20:30.636"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:30.636" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:30.636" endtime="20210729 14:20:30.636"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:30.637" endtime="20210729 14:20:30.637"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:30.637" endtime="20210729 14:20:30.637"/>
</kw>
<status status="PASS" starttime="20210729 14:20:30.636" endtime="20210729 14:20:30.637"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:30.638" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:30.638" endtime="20210729 14:20:30.638"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:30.638" endtime="20210729 14:20:30.638"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:30.639" endtime="20210729 14:20:30.639"/>
</kw>
<status status="PASS" starttime="20210729 14:20:30.638" endtime="20210729 14:20:30.639"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:30.639" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:30.639" endtime="20210729 14:20:30.639"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:30.639" endtime="20210729 14:20:30.640"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:30.640" endtime="20210729 14:20:30.640"/>
</kw>
<status status="PASS" starttime="20210729 14:20:30.639" endtime="20210729 14:20:30.640"/>
</iter>
<status status="PASS" starttime="20210729 14:20:30.636" endtime="20210729 14:20:30.640"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:30.641" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:30.641" endtime="20210729 14:20:30.641"/>
</kw>
<status status="PASS" starttime="20210729 14:20:30.635" endtime="20210729 14:20:30.641"/>
</kw>
<status status="PASS" starttime="20210729 14:20:29.083" endtime="20210729 14:20:30.641"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcd!?.!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:30.642" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:30.642" endtime="20210729 14:20:30.642"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:30.643" level="INFO">${payload} = {'password': 'abcd!?.!'}</msg>
<status status="PASS" starttime="20210729 14:20:30.642" endtime="20210729 14:20:30.643"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:30.652" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:30.652" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:30.643" endtime="20210729 14:20:30.652"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:30.652" endtime="20210729 14:20:30.652"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:30.652" endtime="20210729 14:20:30.652"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:30.643" endtime="20210729 14:20:30.652"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:30.643" endtime="20210729 14:20:30.652"/>
</for>
<status status="FAIL" starttime="20210729 14:20:30.641" endtime="20210729 14:20:30.653"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:30.641" endtime="20210729 14:20:30.653"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcd!?.!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:30.654" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:30.653" endtime="20210729 14:20:30.654"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:30.654" level="INFO">${payload} = {'password': 'abcd!?.!'}</msg>
<status status="PASS" starttime="20210729 14:20:30.654" endtime="20210729 14:20:30.654"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:30.658" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:30.659" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:30.655" endtime="20210729 14:20:30.659"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:30.659" endtime="20210729 14:20:30.659"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:30.659" endtime="20210729 14:20:30.659"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:30.655" endtime="20210729 14:20:30.659"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:30.654" endtime="20210729 14:20:30.659"/>
</for>
<status status="FAIL" starttime="20210729 14:20:30.653" endtime="20210729 14:20:30.659"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:30.653" endtime="20210729 14:20:30.659"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcd!?.!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:30.660" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:30.660" endtime="20210729 14:20:30.660"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:30.661" level="INFO">${payload} = {'password': 'abcd!?.!'}</msg>
<status status="PASS" starttime="20210729 14:20:30.660" endtime="20210729 14:20:30.661"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:30.665" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:30.665" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:30.661" endtime="20210729 14:20:30.666"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:30.666" endtime="20210729 14:20:30.666"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:30.666" endtime="20210729 14:20:30.666"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:30.661" endtime="20210729 14:20:30.666"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:30.661" endtime="20210729 14:20:30.666"/>
</for>
<status status="FAIL" starttime="20210729 14:20:30.659" endtime="20210729 14:20:30.666"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:30.659" endtime="20210729 14:20:30.666"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:30.641" endtime="20210729 14:20:30.666"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:30.672" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:30.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:30.681" level="INFO">${pids} = 15488
15495
15505</msg>
<status status="PASS" starttime="20210729 14:20:30.668" endtime="20210729 14:20:30.681"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:30.682" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:30.681" endtime="20210729 14:20:30.682"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:30.683" level="INFO">${pids} = ['15488', '15495', '15505']</msg>
<status status="PASS" starttime="20210729 14:20:30.682" endtime="20210729 14:20:30.683"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15488</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:30.686" level="INFO">Running command 'kill 15488 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:30.683" endtime="20210729 14:20:30.686"/>
</kw>
<status status="PASS" starttime="20210729 14:20:30.683" endtime="20210729 14:20:30.686"/>
</iter>
<iter>
<var name="${pid}">15495</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:30.689" level="INFO">Running command 'kill 15495 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:30.687" endtime="20210729 14:20:30.692"/>
</kw>
<status status="PASS" starttime="20210729 14:20:30.687" endtime="20210729 14:20:30.692"/>
</iter>
<iter>
<var name="${pid}">15505</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:30.695" level="INFO">Running command 'kill 15505 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:30.692" endtime="20210729 14:20:30.695"/>
</kw>
<status status="PASS" starttime="20210729 14:20:30.692" endtime="20210729 14:20:30.695"/>
</iter>
<status status="PASS" starttime="20210729 14:20:30.683" endtime="20210729 14:20:30.695"/>
</for>
<status status="PASS" starttime="20210729 14:20:30.682" endtime="20210729 14:20:30.695"/>
</branch>
<status status="PASS" starttime="20210729 14:20:30.682" endtime="20210729 14:20:30.695"/>
</if>
<status status="PASS" starttime="20210729 14:20:30.667" endtime="20210729 14:20:30.696"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcd!?.!'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:29.082" endtime="20210729 14:20:30.696">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t65" name="With Any Valid Token, Updating Password Of Each System User With abcd!?.!abcd!?.!abcd?? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:30.705" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:30.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:30.714" level="INFO">${pids} = 15534</msg>
<status status="PASS" starttime="20210729 14:20:30.698" endtime="20210729 14:20:30.714"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:30.715" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:30.714" endtime="20210729 14:20:30.715"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:30.716" level="INFO">${pids} = ['15534']</msg>
<status status="PASS" starttime="20210729 14:20:30.715" endtime="20210729 14:20:30.716"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15534</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:30.722" level="INFO">Running command 'kill 15534 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:30.716" endtime="20210729 14:20:30.723"/>
</kw>
<status status="PASS" starttime="20210729 14:20:30.716" endtime="20210729 14:20:30.723"/>
</iter>
<status status="PASS" starttime="20210729 14:20:30.716" endtime="20210729 14:20:30.723"/>
</for>
<status status="PASS" starttime="20210729 14:20:30.715" endtime="20210729 14:20:30.723"/>
</branch>
<status status="PASS" starttime="20210729 14:20:30.715" endtime="20210729 14:20:30.723"/>
</if>
<status status="PASS" starttime="20210729 14:20:30.698" endtime="20210729 14:20:30.723"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:30.724" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:30.724" endtime="20210729 14:20:30.724"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:30.725" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:30.725" endtime="20210729 14:20:30.725"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:30.726" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:30.725" endtime="20210729 14:20:30.726"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:30.726" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:30.726" endtime="20210729 14:20:30.726"/>
</kw>
<msg timestamp="20210729 14:20:30.726" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:30.725" endtime="20210729 14:20:30.726"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:30.731" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:30.726" endtime="20210729 14:20:30.733"/>
</kw>
<status status="PASS" starttime="20210729 14:20:30.723" endtime="20210729 14:20:30.734"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:30.735" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:30.734" endtime="20210729 14:20:30.739"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:32.256" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:30.740" endtime="20210729 14:20:32.257"/>
</kw>
<status status="PASS" starttime="20210729 14:20:30.734" endtime="20210729 14:20:32.257"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:32.259" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:32.258" endtime="20210729 14:20:32.259"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:32.259" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:32.259" endtime="20210729 14:20:32.259"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:32.260" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:32.259" endtime="20210729 14:20:32.260"/>
</kw>
<msg timestamp="20210729 14:20:32.260" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:32.258" endtime="20210729 14:20:32.260"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:32.261" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:32.260" endtime="20210729 14:20:32.261"/>
</kw>
<status status="PASS" starttime="20210729 14:20:32.257" endtime="20210729 14:20:32.261"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:32.262" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:32.262" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:32.262" endtime="20210729 14:20:32.262"/>
</kw>
<status status="PASS" starttime="20210729 14:20:32.261" endtime="20210729 14:20:32.262"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:32.263" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:32.263" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:32.262" endtime="20210729 14:20:32.263"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:32.263" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:32.263" endtime="20210729 14:20:32.263"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:32.264" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:32.264" endtime="20210729 14:20:32.264"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:32.264" endtime="20210729 14:20:32.265"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:32.265" endtime="20210729 14:20:32.265"/>
</kw>
<status status="PASS" starttime="20210729 14:20:32.264" endtime="20210729 14:20:32.265"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:32.266" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:32.265" endtime="20210729 14:20:32.266"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:32.266" endtime="20210729 14:20:32.267"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:32.267" endtime="20210729 14:20:32.267"/>
</kw>
<status status="PASS" starttime="20210729 14:20:32.265" endtime="20210729 14:20:32.267"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:32.268" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:32.267" endtime="20210729 14:20:32.268"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:32.268" endtime="20210729 14:20:32.268"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:32.268" endtime="20210729 14:20:32.269"/>
</kw>
<status status="PASS" starttime="20210729 14:20:32.267" endtime="20210729 14:20:32.269"/>
</iter>
<status status="PASS" starttime="20210729 14:20:32.263" endtime="20210729 14:20:32.269"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:32.269" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:32.269" endtime="20210729 14:20:32.269"/>
</kw>
<status status="PASS" starttime="20210729 14:20:32.262" endtime="20210729 14:20:32.269"/>
</kw>
<status status="PASS" starttime="20210729 14:20:30.697" endtime="20210729 14:20:32.269"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcd!?.!abcd!?.!abcd??</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:32.271" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:32.270" endtime="20210729 14:20:32.271"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:32.271" level="INFO">${payload} = {'password': 'abcd!?.!abcd!?.!abcd??'}</msg>
<status status="PASS" starttime="20210729 14:20:32.271" endtime="20210729 14:20:32.271"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:32.282" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:32.283" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:32.272" endtime="20210729 14:20:32.283"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:32.283" endtime="20210729 14:20:32.283"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:32.283" endtime="20210729 14:20:32.283"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:32.271" endtime="20210729 14:20:32.283"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:32.271" endtime="20210729 14:20:32.283"/>
</for>
<status status="FAIL" starttime="20210729 14:20:32.270" endtime="20210729 14:20:32.283"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:32.270" endtime="20210729 14:20:32.283"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcd!?.!abcd!?.!abcd??</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:32.284" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:32.284" endtime="20210729 14:20:32.284"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:32.285" level="INFO">${payload} = {'password': 'abcd!?.!abcd!?.!abcd??'}</msg>
<status status="PASS" starttime="20210729 14:20:32.284" endtime="20210729 14:20:32.285"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:32.289" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:32.289" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:32.285" endtime="20210729 14:20:32.289"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:32.289" endtime="20210729 14:20:32.289"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:32.289" endtime="20210729 14:20:32.289"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:32.285" endtime="20210729 14:20:32.289"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:32.285" endtime="20210729 14:20:32.289"/>
</for>
<status status="FAIL" starttime="20210729 14:20:32.283" endtime="20210729 14:20:32.289"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:32.283" endtime="20210729 14:20:32.289"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcd!?.!abcd!?.!abcd??</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:32.290" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:32.290" endtime="20210729 14:20:32.290"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:32.291" level="INFO">${payload} = {'password': 'abcd!?.!abcd!?.!abcd??'}</msg>
<status status="PASS" starttime="20210729 14:20:32.290" endtime="20210729 14:20:32.291"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:32.295" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:32.295" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:32.291" endtime="20210729 14:20:32.295"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:32.295" endtime="20210729 14:20:32.295"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:32.295" endtime="20210729 14:20:32.295"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:32.291" endtime="20210729 14:20:32.295"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:32.291" endtime="20210729 14:20:32.295"/>
</for>
<status status="FAIL" starttime="20210729 14:20:32.289" endtime="20210729 14:20:32.296"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:32.289" endtime="20210729 14:20:32.296"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:32.270" endtime="20210729 14:20:32.296"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:32.303" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:32.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:32.311" level="INFO">${pids} = 15557
15564
15569</msg>
<status status="PASS" starttime="20210729 14:20:32.297" endtime="20210729 14:20:32.311"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:32.312" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:32.312" endtime="20210729 14:20:32.312"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:32.313" level="INFO">${pids} = ['15557', '15564', '15569']</msg>
<status status="PASS" starttime="20210729 14:20:32.313" endtime="20210729 14:20:32.313"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15557</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:32.317" level="INFO">Running command 'kill 15557 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:32.313" endtime="20210729 14:20:32.317"/>
</kw>
<status status="PASS" starttime="20210729 14:20:32.313" endtime="20210729 14:20:32.317"/>
</iter>
<iter>
<var name="${pid}">15564</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:32.320" level="INFO">Running command 'kill 15564 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:32.318" endtime="20210729 14:20:32.321"/>
</kw>
<status status="PASS" starttime="20210729 14:20:32.317" endtime="20210729 14:20:32.321"/>
</iter>
<iter>
<var name="${pid}">15569</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:32.324" level="INFO">Running command 'kill 15569 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:32.321" endtime="20210729 14:20:32.325"/>
</kw>
<status status="PASS" starttime="20210729 14:20:32.321" endtime="20210729 14:20:32.325"/>
</iter>
<status status="PASS" starttime="20210729 14:20:32.313" endtime="20210729 14:20:32.325"/>
</for>
<status status="PASS" starttime="20210729 14:20:32.312" endtime="20210729 14:20:32.325"/>
</branch>
<status status="PASS" starttime="20210729 14:20:32.312" endtime="20210729 14:20:32.325"/>
</if>
<status status="PASS" starttime="20210729 14:20:32.296" endtime="20210729 14:20:32.325"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcd!?.!abcd!?.!abcd??'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:30.696" endtime="20210729 14:20:32.325">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t66" name="With Any Valid Token, Updating Password Of Each System User With ABCD012 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:32.334" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:32.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:32.343" level="INFO">${pids} = 15598</msg>
<status status="PASS" starttime="20210729 14:20:32.327" endtime="20210729 14:20:32.343"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:32.344" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:32.343" endtime="20210729 14:20:32.344"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:32.345" level="INFO">${pids} = ['15598']</msg>
<status status="PASS" starttime="20210729 14:20:32.344" endtime="20210729 14:20:32.345"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15598</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:32.357" level="INFO">Running command 'kill 15598 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:32.345" endtime="20210729 14:20:32.358"/>
</kw>
<status status="PASS" starttime="20210729 14:20:32.345" endtime="20210729 14:20:32.358"/>
</iter>
<status status="PASS" starttime="20210729 14:20:32.345" endtime="20210729 14:20:32.358"/>
</for>
<status status="PASS" starttime="20210729 14:20:32.344" endtime="20210729 14:20:32.358"/>
</branch>
<status status="PASS" starttime="20210729 14:20:32.344" endtime="20210729 14:20:32.358"/>
</if>
<status status="PASS" starttime="20210729 14:20:32.327" endtime="20210729 14:20:32.359"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:32.361" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:32.360" endtime="20210729 14:20:32.361"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:32.361" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:32.361" endtime="20210729 14:20:32.361"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:32.362" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:32.361" endtime="20210729 14:20:32.362"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:32.362" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:32.362" endtime="20210729 14:20:32.362"/>
</kw>
<msg timestamp="20210729 14:20:32.362" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:32.361" endtime="20210729 14:20:32.362"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:32.369" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:32.363" endtime="20210729 14:20:32.370"/>
</kw>
<status status="PASS" starttime="20210729 14:20:32.359" endtime="20210729 14:20:32.370"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:32.372" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:32.371" endtime="20210729 14:20:32.375"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:33.877" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:32.376" endtime="20210729 14:20:33.877"/>
</kw>
<status status="PASS" starttime="20210729 14:20:32.371" endtime="20210729 14:20:33.877"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:33.878" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:33.878" endtime="20210729 14:20:33.878"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:33.879" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:33.879" endtime="20210729 14:20:33.879"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:33.880" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:33.879" endtime="20210729 14:20:33.880"/>
</kw>
<msg timestamp="20210729 14:20:33.880" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:33.878" endtime="20210729 14:20:33.880"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:33.881" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:33.880" endtime="20210729 14:20:33.881"/>
</kw>
<status status="PASS" starttime="20210729 14:20:33.877" endtime="20210729 14:20:33.882"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:33.882" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:33.882" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:33.882" endtime="20210729 14:20:33.882"/>
</kw>
<status status="PASS" starttime="20210729 14:20:33.882" endtime="20210729 14:20:33.882"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:33.883" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:33.883" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:33.883" endtime="20210729 14:20:33.883"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:33.884" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:33.884" endtime="20210729 14:20:33.884"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:33.884" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:33.884" endtime="20210729 14:20:33.884"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:33.884" endtime="20210729 14:20:33.885"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:33.885" endtime="20210729 14:20:33.885"/>
</kw>
<status status="PASS" starttime="20210729 14:20:33.884" endtime="20210729 14:20:33.885"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:33.886" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:33.885" endtime="20210729 14:20:33.886"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:33.886" endtime="20210729 14:20:33.886"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:33.886" endtime="20210729 14:20:33.887"/>
</kw>
<status status="PASS" starttime="20210729 14:20:33.885" endtime="20210729 14:20:33.887"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:33.887" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:33.887" endtime="20210729 14:20:33.887"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:33.887" endtime="20210729 14:20:33.888"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:33.888" endtime="20210729 14:20:33.888"/>
</kw>
<status status="PASS" starttime="20210729 14:20:33.887" endtime="20210729 14:20:33.888"/>
</iter>
<status status="PASS" starttime="20210729 14:20:33.884" endtime="20210729 14:20:33.888"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:33.889" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:33.888" endtime="20210729 14:20:33.889"/>
</kw>
<status status="PASS" starttime="20210729 14:20:33.883" endtime="20210729 14:20:33.889"/>
</kw>
<status status="PASS" starttime="20210729 14:20:32.326" endtime="20210729 14:20:33.889"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCD012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:33.890" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:33.890" endtime="20210729 14:20:33.890"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:33.890" level="INFO">${payload} = {'password': 'ABCD012'}</msg>
<status status="PASS" starttime="20210729 14:20:33.890" endtime="20210729 14:20:33.891"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:33.900" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:33.901" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:33.891" endtime="20210729 14:20:33.901"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:33.901" endtime="20210729 14:20:33.901"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:33.901" endtime="20210729 14:20:33.901"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:33.891" endtime="20210729 14:20:33.901"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:33.891" endtime="20210729 14:20:33.901"/>
</for>
<status status="FAIL" starttime="20210729 14:20:33.889" endtime="20210729 14:20:33.902"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:33.889" endtime="20210729 14:20:33.902"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCD012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:33.903" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:33.902" endtime="20210729 14:20:33.903"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:33.903" level="INFO">${payload} = {'password': 'ABCD012'}</msg>
<status status="PASS" starttime="20210729 14:20:33.903" endtime="20210729 14:20:33.903"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:33.908" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:33.908" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:33.904" endtime="20210729 14:20:33.908"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:33.908" endtime="20210729 14:20:33.908"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:33.908" endtime="20210729 14:20:33.908"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:33.904" endtime="20210729 14:20:33.908"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:33.903" endtime="20210729 14:20:33.908"/>
</for>
<status status="FAIL" starttime="20210729 14:20:33.902" endtime="20210729 14:20:33.908"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:33.902" endtime="20210729 14:20:33.908"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCD012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:33.909" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:33.909" endtime="20210729 14:20:33.909"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:33.910" level="INFO">${payload} = {'password': 'ABCD012'}</msg>
<status status="PASS" starttime="20210729 14:20:33.910" endtime="20210729 14:20:33.910"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:33.914" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:33.914" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:33.910" endtime="20210729 14:20:33.914"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:33.915" endtime="20210729 14:20:33.915"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:33.915" endtime="20210729 14:20:33.915"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:33.910" endtime="20210729 14:20:33.915"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:33.910" endtime="20210729 14:20:33.915"/>
</for>
<status status="FAIL" starttime="20210729 14:20:33.909" endtime="20210729 14:20:33.915"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:33.909" endtime="20210729 14:20:33.915"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:33.889" endtime="20210729 14:20:33.915"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:33.920" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:33.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:33.929" level="INFO">${pids} = 15621
15628
15632</msg>
<status status="PASS" starttime="20210729 14:20:33.916" endtime="20210729 14:20:33.929"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:33.930" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:33.929" endtime="20210729 14:20:33.930"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:33.930" level="INFO">${pids} = ['15621', '15628', '15632']</msg>
<status status="PASS" starttime="20210729 14:20:33.930" endtime="20210729 14:20:33.930"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15621</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:33.934" level="INFO">Running command 'kill 15621 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:33.931" endtime="20210729 14:20:33.935"/>
</kw>
<status status="PASS" starttime="20210729 14:20:33.931" endtime="20210729 14:20:33.935"/>
</iter>
<iter>
<var name="${pid}">15628</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:33.939" level="INFO">Running command 'kill 15628 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:33.936" endtime="20210729 14:20:33.939"/>
</kw>
<status status="PASS" starttime="20210729 14:20:33.935" endtime="20210729 14:20:33.939"/>
</iter>
<iter>
<var name="${pid}">15632</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:33.943" level="INFO">Running command 'kill 15632 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:33.940" endtime="20210729 14:20:33.943"/>
</kw>
<status status="PASS" starttime="20210729 14:20:33.940" endtime="20210729 14:20:33.944"/>
</iter>
<status status="PASS" starttime="20210729 14:20:33.930" endtime="20210729 14:20:33.944"/>
</for>
<status status="PASS" starttime="20210729 14:20:33.930" endtime="20210729 14:20:33.944"/>
</branch>
<status status="PASS" starttime="20210729 14:20:33.930" endtime="20210729 14:20:33.944"/>
</if>
<status status="PASS" starttime="20210729 14:20:33.915" endtime="20210729 14:20:33.944"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCD012'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:32.326" endtime="20210729 14:20:33.944">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t67" name="With Any Valid Token, Updating Password Of Each System User With ABCD0123 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:33.953" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:33.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:33.962" level="INFO">${pids} = 15662</msg>
<status status="PASS" starttime="20210729 14:20:33.946" endtime="20210729 14:20:33.962"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:33.964" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:33.963" endtime="20210729 14:20:33.964"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:33.964" level="INFO">${pids} = ['15662']</msg>
<status status="PASS" starttime="20210729 14:20:33.964" endtime="20210729 14:20:33.964"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15662</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:33.973" level="INFO">Running command 'kill 15662 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:33.966" endtime="20210729 14:20:33.973"/>
</kw>
<status status="PASS" starttime="20210729 14:20:33.966" endtime="20210729 14:20:33.973"/>
</iter>
<status status="PASS" starttime="20210729 14:20:33.966" endtime="20210729 14:20:33.973"/>
</for>
<status status="PASS" starttime="20210729 14:20:33.964" endtime="20210729 14:20:33.973"/>
</branch>
<status status="PASS" starttime="20210729 14:20:33.964" endtime="20210729 14:20:33.973"/>
</if>
<status status="PASS" starttime="20210729 14:20:33.946" endtime="20210729 14:20:33.974"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:33.975" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:33.975" endtime="20210729 14:20:33.975"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:33.976" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:33.976" endtime="20210729 14:20:33.976"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:33.976" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:33.976" endtime="20210729 14:20:33.976"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:33.977" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:33.977" endtime="20210729 14:20:33.977"/>
</kw>
<msg timestamp="20210729 14:20:33.977" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:33.975" endtime="20210729 14:20:33.977"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:33.983" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:33.978" endtime="20210729 14:20:33.985"/>
</kw>
<status status="PASS" starttime="20210729 14:20:33.974" endtime="20210729 14:20:33.985"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:33.986" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:33.986" endtime="20210729 14:20:33.990"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:35.491" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:33.990" endtime="20210729 14:20:35.492"/>
</kw>
<status status="PASS" starttime="20210729 14:20:33.985" endtime="20210729 14:20:35.492"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:35.493" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:35.493" endtime="20210729 14:20:35.493"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:35.493" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:35.493" endtime="20210729 14:20:35.493"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:35.494" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:35.493" endtime="20210729 14:20:35.494"/>
</kw>
<msg timestamp="20210729 14:20:35.494" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:35.492" endtime="20210729 14:20:35.494"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:35.494" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:35.494" endtime="20210729 14:20:35.495"/>
</kw>
<status status="PASS" starttime="20210729 14:20:35.492" endtime="20210729 14:20:35.495"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:35.495" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:35.495" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:35.495" endtime="20210729 14:20:35.496"/>
</kw>
<status status="PASS" starttime="20210729 14:20:35.495" endtime="20210729 14:20:35.496"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:35.497" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:35.497" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:35.496" endtime="20210729 14:20:35.497"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:35.497" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:35.497" endtime="20210729 14:20:35.497"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:35.498" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:35.498" endtime="20210729 14:20:35.498"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:35.498" endtime="20210729 14:20:35.499"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:35.499" endtime="20210729 14:20:35.500"/>
</kw>
<status status="PASS" starttime="20210729 14:20:35.498" endtime="20210729 14:20:35.500"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:35.500" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:35.500" endtime="20210729 14:20:35.501"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:35.501" endtime="20210729 14:20:35.501"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:35.501" endtime="20210729 14:20:35.502"/>
</kw>
<status status="PASS" starttime="20210729 14:20:35.500" endtime="20210729 14:20:35.502"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:35.502" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:35.502" endtime="20210729 14:20:35.502"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:35.502" endtime="20210729 14:20:35.503"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:35.503" endtime="20210729 14:20:35.503"/>
</kw>
<status status="PASS" starttime="20210729 14:20:35.502" endtime="20210729 14:20:35.503"/>
</iter>
<status status="PASS" starttime="20210729 14:20:35.497" endtime="20210729 14:20:35.503"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:35.504" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:35.503" endtime="20210729 14:20:35.504"/>
</kw>
<status status="PASS" starttime="20210729 14:20:35.496" endtime="20210729 14:20:35.504"/>
</kw>
<status status="PASS" starttime="20210729 14:20:33.945" endtime="20210729 14:20:35.504"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCD0123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:35.505" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:35.505" endtime="20210729 14:20:35.505"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:35.505" level="INFO">${payload} = {'password': 'ABCD0123'}</msg>
<status status="PASS" starttime="20210729 14:20:35.505" endtime="20210729 14:20:35.506"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:35.515" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:35.515" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:35.506" endtime="20210729 14:20:35.515"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:35.515" endtime="20210729 14:20:35.515"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:35.516" endtime="20210729 14:20:35.516"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:35.506" endtime="20210729 14:20:35.516"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:35.506" endtime="20210729 14:20:35.516"/>
</for>
<status status="FAIL" starttime="20210729 14:20:35.504" endtime="20210729 14:20:35.516"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:35.504" endtime="20210729 14:20:35.516"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCD0123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:35.517" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:35.517" endtime="20210729 14:20:35.517"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:35.517" level="INFO">${payload} = {'password': 'ABCD0123'}</msg>
<status status="PASS" starttime="20210729 14:20:35.517" endtime="20210729 14:20:35.517"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:35.521" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:35.521" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:35.518" endtime="20210729 14:20:35.522"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:35.522" endtime="20210729 14:20:35.522"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:35.522" endtime="20210729 14:20:35.522"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:35.518" endtime="20210729 14:20:35.522"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:35.517" endtime="20210729 14:20:35.522"/>
</for>
<status status="FAIL" starttime="20210729 14:20:35.516" endtime="20210729 14:20:35.522"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:35.516" endtime="20210729 14:20:35.522"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCD0123</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:35.523" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:35.523" endtime="20210729 14:20:35.523"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:35.524" level="INFO">${payload} = {'password': 'ABCD0123'}</msg>
<status status="PASS" starttime="20210729 14:20:35.523" endtime="20210729 14:20:35.524"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:35.528" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:35.528" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:35.524" endtime="20210729 14:20:35.528"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:35.528" endtime="20210729 14:20:35.528"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:35.528" endtime="20210729 14:20:35.528"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:35.524" endtime="20210729 14:20:35.528"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:35.524" endtime="20210729 14:20:35.528"/>
</for>
<status status="FAIL" starttime="20210729 14:20:35.522" endtime="20210729 14:20:35.528"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:35.522" endtime="20210729 14:20:35.528"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:35.504" endtime="20210729 14:20:35.528"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:35.534" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:35.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:35.545" level="INFO">${pids} = 15685
15692
15702</msg>
<status status="PASS" starttime="20210729 14:20:35.529" endtime="20210729 14:20:35.545"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:35.546" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:35.545" endtime="20210729 14:20:35.546"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:35.547" level="INFO">${pids} = ['15685', '15692', '15702']</msg>
<status status="PASS" starttime="20210729 14:20:35.547" endtime="20210729 14:20:35.547"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15685</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:35.553" level="INFO">Running command 'kill 15685 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:35.548" endtime="20210729 14:20:35.553"/>
</kw>
<status status="PASS" starttime="20210729 14:20:35.548" endtime="20210729 14:20:35.553"/>
</iter>
<iter>
<var name="${pid}">15692</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:35.556" level="INFO">Running command 'kill 15692 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:35.554" endtime="20210729 14:20:35.558"/>
</kw>
<status status="PASS" starttime="20210729 14:20:35.554" endtime="20210729 14:20:35.558"/>
</iter>
<iter>
<var name="${pid}">15702</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:35.563" level="INFO">Running command 'kill 15702 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:35.559" endtime="20210729 14:20:35.563"/>
</kw>
<status status="PASS" starttime="20210729 14:20:35.559" endtime="20210729 14:20:35.563"/>
</iter>
<status status="PASS" starttime="20210729 14:20:35.547" endtime="20210729 14:20:35.563"/>
</for>
<status status="PASS" starttime="20210729 14:20:35.546" endtime="20210729 14:20:35.563"/>
</branch>
<status status="PASS" starttime="20210729 14:20:35.546" endtime="20210729 14:20:35.563"/>
</if>
<status status="PASS" starttime="20210729 14:20:35.529" endtime="20210729 14:20:35.564"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCD0123'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:33.945" endtime="20210729 14:20:35.564">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t68" name="With Any Valid Token, Updating Password Of Each System User With ABCD0123ABCD0123ABCD01 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:35.569" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:35.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:35.584" level="INFO">${pids} = 15731</msg>
<status status="PASS" starttime="20210729 14:20:35.566" endtime="20210729 14:20:35.584"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:35.585" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:35.584" endtime="20210729 14:20:35.585"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:35.585" level="INFO">${pids} = ['15731']</msg>
<status status="PASS" starttime="20210729 14:20:35.585" endtime="20210729 14:20:35.585"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15731</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:35.589" level="INFO">Running command 'kill 15731 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:35.586" endtime="20210729 14:20:35.589"/>
</kw>
<status status="PASS" starttime="20210729 14:20:35.586" endtime="20210729 14:20:35.589"/>
</iter>
<status status="PASS" starttime="20210729 14:20:35.585" endtime="20210729 14:20:35.589"/>
</for>
<status status="PASS" starttime="20210729 14:20:35.585" endtime="20210729 14:20:35.589"/>
</branch>
<status status="PASS" starttime="20210729 14:20:35.585" endtime="20210729 14:20:35.589"/>
</if>
<status status="PASS" starttime="20210729 14:20:35.566" endtime="20210729 14:20:35.590"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:35.591" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:35.590" endtime="20210729 14:20:35.591"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:35.591" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:35.591" endtime="20210729 14:20:35.592"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:35.592" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:35.592" endtime="20210729 14:20:35.592"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:35.592" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:35.592" endtime="20210729 14:20:35.592"/>
</kw>
<msg timestamp="20210729 14:20:35.593" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:35.591" endtime="20210729 14:20:35.593"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:35.597" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:35.593" endtime="20210729 14:20:35.604"/>
</kw>
<status status="PASS" starttime="20210729 14:20:35.590" endtime="20210729 14:20:35.605"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:35.606" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:35.606" endtime="20210729 14:20:35.615"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:37.117" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:35.616" endtime="20210729 14:20:37.117"/>
</kw>
<status status="PASS" starttime="20210729 14:20:35.605" endtime="20210729 14:20:37.117"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:37.118" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:37.118" endtime="20210729 14:20:37.118"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:37.118" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:37.118" endtime="20210729 14:20:37.119"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:37.119" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:37.119" endtime="20210729 14:20:37.119"/>
</kw>
<msg timestamp="20210729 14:20:37.119" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:37.118" endtime="20210729 14:20:37.119"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:37.120" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:37.119" endtime="20210729 14:20:37.120"/>
</kw>
<status status="PASS" starttime="20210729 14:20:37.117" endtime="20210729 14:20:37.120"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:37.121" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:37.121" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:37.121" endtime="20210729 14:20:37.121"/>
</kw>
<status status="PASS" starttime="20210729 14:20:37.120" endtime="20210729 14:20:37.121"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:37.122" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:37.122" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:37.121" endtime="20210729 14:20:37.122"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:37.122" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:37.122" endtime="20210729 14:20:37.122"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:37.123" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:37.123" endtime="20210729 14:20:37.123"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:37.123" endtime="20210729 14:20:37.124"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:37.124" endtime="20210729 14:20:37.124"/>
</kw>
<status status="PASS" starttime="20210729 14:20:37.122" endtime="20210729 14:20:37.124"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:37.124" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:37.124" endtime="20210729 14:20:37.124"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:37.124" endtime="20210729 14:20:37.125"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:37.125" endtime="20210729 14:20:37.125"/>
</kw>
<status status="PASS" starttime="20210729 14:20:37.124" endtime="20210729 14:20:37.125"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:37.126" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:37.125" endtime="20210729 14:20:37.126"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:37.126" endtime="20210729 14:20:37.126"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:37.126" endtime="20210729 14:20:37.127"/>
</kw>
<status status="PASS" starttime="20210729 14:20:37.125" endtime="20210729 14:20:37.127"/>
</iter>
<status status="PASS" starttime="20210729 14:20:37.122" endtime="20210729 14:20:37.127"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:37.127" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:37.127" endtime="20210729 14:20:37.127"/>
</kw>
<status status="PASS" starttime="20210729 14:20:37.121" endtime="20210729 14:20:37.127"/>
</kw>
<status status="PASS" starttime="20210729 14:20:35.565" endtime="20210729 14:20:37.127"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCD0123ABCD0123ABCD01</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:37.128" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:37.128" endtime="20210729 14:20:37.128"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:37.129" level="INFO">${payload} = {'password': 'ABCD0123ABCD0123ABCD01'}</msg>
<status status="PASS" starttime="20210729 14:20:37.129" endtime="20210729 14:20:37.129"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:37.138" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:37.138" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:37.129" endtime="20210729 14:20:37.138"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:37.138" endtime="20210729 14:20:37.138"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:37.138" endtime="20210729 14:20:37.138"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:37.129" endtime="20210729 14:20:37.138"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:37.129" endtime="20210729 14:20:37.138"/>
</for>
<status status="FAIL" starttime="20210729 14:20:37.128" endtime="20210729 14:20:37.139"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:37.128" endtime="20210729 14:20:37.139"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCD0123ABCD0123ABCD01</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:37.140" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:37.139" endtime="20210729 14:20:37.140"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:37.140" level="INFO">${payload} = {'password': 'ABCD0123ABCD0123ABCD01'}</msg>
<status status="PASS" starttime="20210729 14:20:37.140" endtime="20210729 14:20:37.140"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:37.144" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:37.145" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:37.141" endtime="20210729 14:20:37.145"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:37.145" endtime="20210729 14:20:37.145"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:37.145" endtime="20210729 14:20:37.145"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:37.141" endtime="20210729 14:20:37.145"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:37.140" endtime="20210729 14:20:37.145"/>
</for>
<status status="FAIL" starttime="20210729 14:20:37.139" endtime="20210729 14:20:37.145"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:37.139" endtime="20210729 14:20:37.145"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCD0123ABCD0123ABCD01</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:37.146" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:37.146" endtime="20210729 14:20:37.146"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:37.147" level="INFO">${payload} = {'password': 'ABCD0123ABCD0123ABCD01'}</msg>
<status status="PASS" starttime="20210729 14:20:37.146" endtime="20210729 14:20:37.147"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:37.151" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:37.151" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:37.147" endtime="20210729 14:20:37.151"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:37.151" endtime="20210729 14:20:37.152"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:37.152" endtime="20210729 14:20:37.152"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:37.147" endtime="20210729 14:20:37.152"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:37.147" endtime="20210729 14:20:37.152"/>
</for>
<status status="FAIL" starttime="20210729 14:20:37.145" endtime="20210729 14:20:37.152"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:37.145" endtime="20210729 14:20:37.152"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:37.128" endtime="20210729 14:20:37.152"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:37.156" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:37.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:37.167" level="INFO">${pids} = 15754
15761
15766</msg>
<status status="PASS" starttime="20210729 14:20:37.153" endtime="20210729 14:20:37.167"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:37.168" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:37.168" endtime="20210729 14:20:37.168"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:37.169" level="INFO">${pids} = ['15754', '15761', '15766']</msg>
<status status="PASS" starttime="20210729 14:20:37.169" endtime="20210729 14:20:37.169"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15754</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:37.173" level="INFO">Running command 'kill 15754 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:37.169" endtime="20210729 14:20:37.173"/>
</kw>
<status status="PASS" starttime="20210729 14:20:37.169" endtime="20210729 14:20:37.173"/>
</iter>
<iter>
<var name="${pid}">15761</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:37.176" level="INFO">Running command 'kill 15761 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:37.173" endtime="20210729 14:20:37.177"/>
</kw>
<status status="PASS" starttime="20210729 14:20:37.173" endtime="20210729 14:20:37.178"/>
</iter>
<iter>
<var name="${pid}">15766</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:37.182" level="INFO">Running command 'kill 15766 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:37.178" endtime="20210729 14:20:37.182"/>
</kw>
<status status="PASS" starttime="20210729 14:20:37.178" endtime="20210729 14:20:37.182"/>
</iter>
<status status="PASS" starttime="20210729 14:20:37.169" endtime="20210729 14:20:37.182"/>
</for>
<status status="PASS" starttime="20210729 14:20:37.169" endtime="20210729 14:20:37.182"/>
</branch>
<status status="PASS" starttime="20210729 14:20:37.169" endtime="20210729 14:20:37.182"/>
</if>
<status status="PASS" starttime="20210729 14:20:37.152" endtime="20210729 14:20:37.183"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCD0123ABCD0123ABCD01'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:35.565" endtime="20210729 14:20:37.183">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t69" name="With Any Valid Token, Updating Password Of Each System User With ABCD!?. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:37.189" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:37.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:37.198" level="INFO">${pids} = 15797</msg>
<status status="PASS" starttime="20210729 14:20:37.185" endtime="20210729 14:20:37.198"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:37.200" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:37.199" endtime="20210729 14:20:37.200"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:37.200" level="INFO">${pids} = ['15797']</msg>
<status status="PASS" starttime="20210729 14:20:37.200" endtime="20210729 14:20:37.200"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15797</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:37.214" level="INFO">Running command 'kill 15797 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:37.201" endtime="20210729 14:20:37.215"/>
</kw>
<status status="PASS" starttime="20210729 14:20:37.201" endtime="20210729 14:20:37.215"/>
</iter>
<status status="PASS" starttime="20210729 14:20:37.200" endtime="20210729 14:20:37.215"/>
</for>
<status status="PASS" starttime="20210729 14:20:37.200" endtime="20210729 14:20:37.215"/>
</branch>
<status status="PASS" starttime="20210729 14:20:37.200" endtime="20210729 14:20:37.215"/>
</if>
<status status="PASS" starttime="20210729 14:20:37.184" endtime="20210729 14:20:37.216"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:37.217" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:37.216" endtime="20210729 14:20:37.217"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:37.217" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:37.217" endtime="20210729 14:20:37.217"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:37.218" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:37.218" endtime="20210729 14:20:37.218"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:37.218" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:37.218" endtime="20210729 14:20:37.218"/>
</kw>
<msg timestamp="20210729 14:20:37.218" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:37.217" endtime="20210729 14:20:37.218"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:37.221" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:37.218" endtime="20210729 14:20:37.223"/>
</kw>
<status status="PASS" starttime="20210729 14:20:37.216" endtime="20210729 14:20:37.223"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:37.224" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:37.224" endtime="20210729 14:20:37.227"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:38.730" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:37.228" endtime="20210729 14:20:38.730"/>
</kw>
<status status="PASS" starttime="20210729 14:20:37.223" endtime="20210729 14:20:38.730"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:38.732" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:38.732" endtime="20210729 14:20:38.732"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:38.733" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:38.733" endtime="20210729 14:20:38.733"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:38.733" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:38.733" endtime="20210729 14:20:38.733"/>
</kw>
<msg timestamp="20210729 14:20:38.734" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:38.731" endtime="20210729 14:20:38.734"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:38.734" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:38.734" endtime="20210729 14:20:38.734"/>
</kw>
<status status="PASS" starttime="20210729 14:20:38.731" endtime="20210729 14:20:38.735"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:38.735" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:38.735" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:38.735" endtime="20210729 14:20:38.735"/>
</kw>
<status status="PASS" starttime="20210729 14:20:38.735" endtime="20210729 14:20:38.735"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:38.736" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:38.736" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:38.736" endtime="20210729 14:20:38.736"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:38.737" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:38.736" endtime="20210729 14:20:38.737"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:38.737" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:38.737" endtime="20210729 14:20:38.737"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:38.737" endtime="20210729 14:20:38.738"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:38.738" endtime="20210729 14:20:38.738"/>
</kw>
<status status="PASS" starttime="20210729 14:20:38.737" endtime="20210729 14:20:38.738"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:38.739" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:38.738" endtime="20210729 14:20:38.739"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:38.739" endtime="20210729 14:20:38.739"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:38.739" endtime="20210729 14:20:38.740"/>
</kw>
<status status="PASS" starttime="20210729 14:20:38.738" endtime="20210729 14:20:38.740"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:38.740" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:38.740" endtime="20210729 14:20:38.740"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:38.740" endtime="20210729 14:20:38.741"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:38.741" endtime="20210729 14:20:38.741"/>
</kw>
<status status="PASS" starttime="20210729 14:20:38.740" endtime="20210729 14:20:38.741"/>
</iter>
<status status="PASS" starttime="20210729 14:20:38.737" endtime="20210729 14:20:38.741"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:38.742" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:38.741" endtime="20210729 14:20:38.742"/>
</kw>
<status status="PASS" starttime="20210729 14:20:38.736" endtime="20210729 14:20:38.742"/>
</kw>
<status status="PASS" starttime="20210729 14:20:37.184" endtime="20210729 14:20:38.742"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCD!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:38.743" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:38.743" endtime="20210729 14:20:38.743"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:38.744" level="INFO">${payload} = {'password': 'ABCD!?.'}</msg>
<status status="PASS" starttime="20210729 14:20:38.743" endtime="20210729 14:20:38.744"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:38.754" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:38.754" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:38.744" endtime="20210729 14:20:38.754"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:38.755" endtime="20210729 14:20:38.755"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:38.755" endtime="20210729 14:20:38.755"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:38.744" endtime="20210729 14:20:38.755"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:38.744" endtime="20210729 14:20:38.755"/>
</for>
<status status="FAIL" starttime="20210729 14:20:38.742" endtime="20210729 14:20:38.755"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:38.742" endtime="20210729 14:20:38.755"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCD!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:38.756" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:38.756" endtime="20210729 14:20:38.756"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:38.757" level="INFO">${payload} = {'password': 'ABCD!?.'}</msg>
<status status="PASS" starttime="20210729 14:20:38.757" endtime="20210729 14:20:38.757"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:38.761" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:38.762" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:38.757" endtime="20210729 14:20:38.762"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:38.762" endtime="20210729 14:20:38.762"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:38.762" endtime="20210729 14:20:38.762"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:38.757" endtime="20210729 14:20:38.762"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:38.757" endtime="20210729 14:20:38.762"/>
</for>
<status status="FAIL" starttime="20210729 14:20:38.755" endtime="20210729 14:20:38.762"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:38.755" endtime="20210729 14:20:38.762"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCD!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:38.763" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:38.763" endtime="20210729 14:20:38.764"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:38.764" level="INFO">${payload} = {'password': 'ABCD!?.'}</msg>
<status status="PASS" starttime="20210729 14:20:38.764" endtime="20210729 14:20:38.764"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:38.769" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:38.769" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:38.764" endtime="20210729 14:20:38.769"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:38.769" endtime="20210729 14:20:38.769"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:38.769" endtime="20210729 14:20:38.769"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:38.764" endtime="20210729 14:20:38.769"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:38.764" endtime="20210729 14:20:38.769"/>
</for>
<status status="FAIL" starttime="20210729 14:20:38.763" endtime="20210729 14:20:38.769"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:38.762" endtime="20210729 14:20:38.770"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:38.742" endtime="20210729 14:20:38.770"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:38.775" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:38.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:38.784" level="INFO">${pids} = 15820
15828
15832</msg>
<status status="PASS" starttime="20210729 14:20:38.771" endtime="20210729 14:20:38.784"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:38.785" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:38.784" endtime="20210729 14:20:38.785"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:38.785" level="INFO">${pids} = ['15820', '15828', '15832']</msg>
<status status="PASS" starttime="20210729 14:20:38.785" endtime="20210729 14:20:38.785"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15820</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:38.788" level="INFO">Running command 'kill 15820 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:38.786" endtime="20210729 14:20:38.789"/>
</kw>
<status status="PASS" starttime="20210729 14:20:38.786" endtime="20210729 14:20:38.789"/>
</iter>
<iter>
<var name="${pid}">15828</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:38.792" level="INFO">Running command 'kill 15828 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:38.789" endtime="20210729 14:20:38.793"/>
</kw>
<status status="PASS" starttime="20210729 14:20:38.789" endtime="20210729 14:20:38.793"/>
</iter>
<iter>
<var name="${pid}">15832</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:38.796" level="INFO">Running command 'kill 15832 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:38.793" endtime="20210729 14:20:38.797"/>
</kw>
<status status="PASS" starttime="20210729 14:20:38.793" endtime="20210729 14:20:38.797"/>
</iter>
<status status="PASS" starttime="20210729 14:20:38.785" endtime="20210729 14:20:38.797"/>
</for>
<status status="PASS" starttime="20210729 14:20:38.785" endtime="20210729 14:20:38.797"/>
</branch>
<status status="PASS" starttime="20210729 14:20:38.785" endtime="20210729 14:20:38.797"/>
</if>
<status status="PASS" starttime="20210729 14:20:38.770" endtime="20210729 14:20:38.797"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCD!?.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:37.183" endtime="20210729 14:20:38.797">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t70" name="With Any Valid Token, Updating Password Of Each System User With ABCD!?.. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:38.804" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:38.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:38.816" level="INFO">${pids} = 15861</msg>
<status status="PASS" starttime="20210729 14:20:38.800" endtime="20210729 14:20:38.817"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:38.818" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:38.817" endtime="20210729 14:20:38.818"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:38.820" level="INFO">${pids} = ['15861']</msg>
<status status="PASS" starttime="20210729 14:20:38.819" endtime="20210729 14:20:38.820"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15861</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:38.828" level="INFO">Running command 'kill 15861 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:38.820" endtime="20210729 14:20:38.829"/>
</kw>
<status status="PASS" starttime="20210729 14:20:38.820" endtime="20210729 14:20:38.829"/>
</iter>
<status status="PASS" starttime="20210729 14:20:38.820" endtime="20210729 14:20:38.829"/>
</for>
<status status="PASS" starttime="20210729 14:20:38.819" endtime="20210729 14:20:38.829"/>
</branch>
<status status="PASS" starttime="20210729 14:20:38.818" endtime="20210729 14:20:38.829"/>
</if>
<status status="PASS" starttime="20210729 14:20:38.800" endtime="20210729 14:20:38.830"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:38.832" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:38.831" endtime="20210729 14:20:38.832"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:38.832" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:38.832" endtime="20210729 14:20:38.832"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:38.833" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:38.832" endtime="20210729 14:20:38.833"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:38.833" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:38.833" endtime="20210729 14:20:38.833"/>
</kw>
<msg timestamp="20210729 14:20:38.833" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:38.832" endtime="20210729 14:20:38.833"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:38.837" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:38.834" endtime="20210729 14:20:38.839"/>
</kw>
<status status="PASS" starttime="20210729 14:20:38.830" endtime="20210729 14:20:38.839"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:38.841" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:38.840" endtime="20210729 14:20:38.845"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:40.346" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:38.845" endtime="20210729 14:20:40.346"/>
</kw>
<status status="PASS" starttime="20210729 14:20:38.839" endtime="20210729 14:20:40.346"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:40.348" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:40.348" endtime="20210729 14:20:40.348"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:40.348" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:40.348" endtime="20210729 14:20:40.348"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:40.349" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:40.348" endtime="20210729 14:20:40.349"/>
</kw>
<msg timestamp="20210729 14:20:40.349" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:40.347" endtime="20210729 14:20:40.349"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:40.349" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:40.349" endtime="20210729 14:20:40.350"/>
</kw>
<status status="PASS" starttime="20210729 14:20:40.347" endtime="20210729 14:20:40.350"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:40.350" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:40.350" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:40.350" endtime="20210729 14:20:40.351"/>
</kw>
<status status="PASS" starttime="20210729 14:20:40.350" endtime="20210729 14:20:40.351"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:40.351" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:40.351" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:40.351" endtime="20210729 14:20:40.351"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:40.352" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:40.352" endtime="20210729 14:20:40.352"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:40.352" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:40.352" endtime="20210729 14:20:40.352"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:40.352" endtime="20210729 14:20:40.353"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:40.353" endtime="20210729 14:20:40.353"/>
</kw>
<status status="PASS" starttime="20210729 14:20:40.352" endtime="20210729 14:20:40.353"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:40.354" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:40.353" endtime="20210729 14:20:40.354"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:40.354" endtime="20210729 14:20:40.354"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:40.354" endtime="20210729 14:20:40.355"/>
</kw>
<status status="PASS" starttime="20210729 14:20:40.353" endtime="20210729 14:20:40.355"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:40.355" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:40.355" endtime="20210729 14:20:40.355"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:40.355" endtime="20210729 14:20:40.356"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:40.356" endtime="20210729 14:20:40.356"/>
</kw>
<status status="PASS" starttime="20210729 14:20:40.355" endtime="20210729 14:20:40.356"/>
</iter>
<status status="PASS" starttime="20210729 14:20:40.352" endtime="20210729 14:20:40.356"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:40.357" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:40.357" endtime="20210729 14:20:40.357"/>
</kw>
<status status="PASS" starttime="20210729 14:20:40.351" endtime="20210729 14:20:40.357"/>
</kw>
<status status="PASS" starttime="20210729 14:20:38.799" endtime="20210729 14:20:40.357"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCD!?..</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:40.358" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:40.358" endtime="20210729 14:20:40.358"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:40.358" level="INFO">${payload} = {'password': 'ABCD!?..'}</msg>
<status status="PASS" starttime="20210729 14:20:40.358" endtime="20210729 14:20:40.359"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:40.368" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:40.369" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:40.359" endtime="20210729 14:20:40.369"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:40.369" endtime="20210729 14:20:40.369"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:40.369" endtime="20210729 14:20:40.369"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:40.359" endtime="20210729 14:20:40.369"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:40.359" endtime="20210729 14:20:40.369"/>
</for>
<status status="FAIL" starttime="20210729 14:20:40.357" endtime="20210729 14:20:40.369"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:40.357" endtime="20210729 14:20:40.370"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCD!?..</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:40.371" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:40.370" endtime="20210729 14:20:40.371"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:40.371" level="INFO">${payload} = {'password': 'ABCD!?..'}</msg>
<status status="PASS" starttime="20210729 14:20:40.371" endtime="20210729 14:20:40.371"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:40.375" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:40.375" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:40.371" endtime="20210729 14:20:40.375"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:40.375" endtime="20210729 14:20:40.375"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:40.375" endtime="20210729 14:20:40.376"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:40.371" endtime="20210729 14:20:40.376"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:40.371" endtime="20210729 14:20:40.376"/>
</for>
<status status="FAIL" starttime="20210729 14:20:40.370" endtime="20210729 14:20:40.376"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:40.370" endtime="20210729 14:20:40.376"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCD!?..</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:40.377" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:40.376" endtime="20210729 14:20:40.377"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:40.377" level="INFO">${payload} = {'password': 'ABCD!?..'}</msg>
<status status="PASS" starttime="20210729 14:20:40.377" endtime="20210729 14:20:40.377"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:40.381" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:40.382" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:40.377" endtime="20210729 14:20:40.382"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:40.382" endtime="20210729 14:20:40.382"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:40.382" endtime="20210729 14:20:40.382"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:40.377" endtime="20210729 14:20:40.382"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:40.377" endtime="20210729 14:20:40.382"/>
</for>
<status status="FAIL" starttime="20210729 14:20:40.376" endtime="20210729 14:20:40.382"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:40.376" endtime="20210729 14:20:40.382"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:40.357" endtime="20210729 14:20:40.382"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:40.388" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:40.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:40.397" level="INFO">${pids} = 15884
15891
15895</msg>
<status status="PASS" starttime="20210729 14:20:40.384" endtime="20210729 14:20:40.397"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:40.398" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:40.397" endtime="20210729 14:20:40.398"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:40.398" level="INFO">${pids} = ['15884', '15891', '15895']</msg>
<status status="PASS" starttime="20210729 14:20:40.398" endtime="20210729 14:20:40.399"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15884</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:40.402" level="INFO">Running command 'kill 15884 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:40.399" endtime="20210729 14:20:40.403"/>
</kw>
<status status="PASS" starttime="20210729 14:20:40.399" endtime="20210729 14:20:40.403"/>
</iter>
<iter>
<var name="${pid}">15891</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:40.412" level="INFO">Running command 'kill 15891 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:40.403" endtime="20210729 14:20:40.413"/>
</kw>
<status status="PASS" starttime="20210729 14:20:40.403" endtime="20210729 14:20:40.413"/>
</iter>
<iter>
<var name="${pid}">15895</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:40.418" level="INFO">Running command 'kill 15895 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:40.414" endtime="20210729 14:20:40.418"/>
</kw>
<status status="PASS" starttime="20210729 14:20:40.413" endtime="20210729 14:20:40.418"/>
</iter>
<status status="PASS" starttime="20210729 14:20:40.399" endtime="20210729 14:20:40.418"/>
</for>
<status status="PASS" starttime="20210729 14:20:40.398" endtime="20210729 14:20:40.418"/>
</branch>
<status status="PASS" starttime="20210729 14:20:40.398" endtime="20210729 14:20:40.418"/>
</if>
<status status="PASS" starttime="20210729 14:20:40.383" endtime="20210729 14:20:40.418"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCD!?..'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:38.798" endtime="20210729 14:20:40.419">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t71" name="With Any Valid Token, Updating Password Of Each System User With ABCD!?..ABCD!?..ABCD!? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:40.425" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:40.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:40.435" level="INFO">${pids} = 15925</msg>
<status status="PASS" starttime="20210729 14:20:40.421" endtime="20210729 14:20:40.435"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:40.436" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:40.435" endtime="20210729 14:20:40.436"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:40.437" level="INFO">${pids} = ['15925']</msg>
<status status="PASS" starttime="20210729 14:20:40.436" endtime="20210729 14:20:40.437"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15925</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:40.440" level="INFO">Running command 'kill 15925 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:40.437" endtime="20210729 14:20:40.441"/>
</kw>
<status status="PASS" starttime="20210729 14:20:40.437" endtime="20210729 14:20:40.441"/>
</iter>
<status status="PASS" starttime="20210729 14:20:40.437" endtime="20210729 14:20:40.441"/>
</for>
<status status="PASS" starttime="20210729 14:20:40.436" endtime="20210729 14:20:40.441"/>
</branch>
<status status="PASS" starttime="20210729 14:20:40.436" endtime="20210729 14:20:40.441"/>
</if>
<status status="PASS" starttime="20210729 14:20:40.421" endtime="20210729 14:20:40.441"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:40.442" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:40.442" endtime="20210729 14:20:40.442"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:40.443" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:40.443" endtime="20210729 14:20:40.443"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:40.443" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:40.443" endtime="20210729 14:20:40.443"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:40.444" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:40.443" endtime="20210729 14:20:40.444"/>
</kw>
<msg timestamp="20210729 14:20:40.444" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:40.442" endtime="20210729 14:20:40.444"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:40.449" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:40.444" endtime="20210729 14:20:40.452"/>
</kw>
<status status="PASS" starttime="20210729 14:20:40.442" endtime="20210729 14:20:40.452"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:40.454" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:40.453" endtime="20210729 14:20:40.458"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:41.959" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:40.458" endtime="20210729 14:20:41.960"/>
</kw>
<status status="PASS" starttime="20210729 14:20:40.453" endtime="20210729 14:20:41.961"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:41.964" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:41.964" endtime="20210729 14:20:41.965"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:41.965" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:41.965" endtime="20210729 14:20:41.965"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:41.966" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:41.965" endtime="20210729 14:20:41.966"/>
</kw>
<msg timestamp="20210729 14:20:41.966" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:41.963" endtime="20210729 14:20:41.966"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:41.967" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:41.967" endtime="20210729 14:20:41.967"/>
</kw>
<status status="PASS" starttime="20210729 14:20:41.961" endtime="20210729 14:20:41.967"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:41.968" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:41.968" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:41.968" endtime="20210729 14:20:41.968"/>
</kw>
<status status="PASS" starttime="20210729 14:20:41.968" endtime="20210729 14:20:41.968"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:41.969" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:41.969" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:41.969" endtime="20210729 14:20:41.969"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:41.970" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:41.969" endtime="20210729 14:20:41.970"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:41.970" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:41.970" endtime="20210729 14:20:41.970"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:41.970" endtime="20210729 14:20:41.971"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:41.971" endtime="20210729 14:20:41.971"/>
</kw>
<status status="PASS" starttime="20210729 14:20:41.970" endtime="20210729 14:20:41.971"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:41.972" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:41.972" endtime="20210729 14:20:41.972"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:41.972" endtime="20210729 14:20:41.972"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:41.973" endtime="20210729 14:20:41.973"/>
</kw>
<status status="PASS" starttime="20210729 14:20:41.971" endtime="20210729 14:20:41.973"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:41.973" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:41.973" endtime="20210729 14:20:41.973"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:41.973" endtime="20210729 14:20:41.974"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:41.974" endtime="20210729 14:20:41.974"/>
</kw>
<status status="PASS" starttime="20210729 14:20:41.973" endtime="20210729 14:20:41.974"/>
</iter>
<status status="PASS" starttime="20210729 14:20:41.970" endtime="20210729 14:20:41.974"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:41.975" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:41.974" endtime="20210729 14:20:41.975"/>
</kw>
<status status="PASS" starttime="20210729 14:20:41.968" endtime="20210729 14:20:41.975"/>
</kw>
<status status="PASS" starttime="20210729 14:20:40.420" endtime="20210729 14:20:41.975"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCD!?..ABCD!?..ABCD!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:41.976" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:41.976" endtime="20210729 14:20:41.976"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:41.976" level="INFO">${payload} = {'password': 'ABCD!?..ABCD!?..ABCD!?'}</msg>
<status status="PASS" starttime="20210729 14:20:41.976" endtime="20210729 14:20:41.976"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:41.986" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:41.986" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:41.977" endtime="20210729 14:20:41.986"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:41.986" endtime="20210729 14:20:41.986"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:41.986" endtime="20210729 14:20:41.986"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:41.977" endtime="20210729 14:20:41.986"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:41.976" endtime="20210729 14:20:41.987"/>
</for>
<status status="FAIL" starttime="20210729 14:20:41.975" endtime="20210729 14:20:41.987"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:41.975" endtime="20210729 14:20:41.987"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCD!?..ABCD!?..ABCD!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:41.988" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:41.988" endtime="20210729 14:20:41.988"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:41.988" level="INFO">${payload} = {'password': 'ABCD!?..ABCD!?..ABCD!?'}</msg>
<status status="PASS" starttime="20210729 14:20:41.988" endtime="20210729 14:20:41.988"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:41.992" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:41.993" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:41.989" endtime="20210729 14:20:41.993"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:41.993" endtime="20210729 14:20:41.993"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:41.993" endtime="20210729 14:20:41.993"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:41.989" endtime="20210729 14:20:41.993"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:41.988" endtime="20210729 14:20:41.993"/>
</for>
<status status="FAIL" starttime="20210729 14:20:41.987" endtime="20210729 14:20:41.993"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:41.987" endtime="20210729 14:20:41.993"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCD!?..ABCD!?..ABCD!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:41.994" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:41.994" endtime="20210729 14:20:41.994"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:41.995" level="INFO">${payload} = {'password': 'ABCD!?..ABCD!?..ABCD!?'}</msg>
<status status="PASS" starttime="20210729 14:20:41.994" endtime="20210729 14:20:41.995"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:41.999" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:41.999" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:41.995" endtime="20210729 14:20:41.999"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:41.999" endtime="20210729 14:20:41.999"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:41.999" endtime="20210729 14:20:41.999"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:41.995" endtime="20210729 14:20:41.999"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:41.995" endtime="20210729 14:20:41.999"/>
</for>
<status status="FAIL" starttime="20210729 14:20:41.993" endtime="20210729 14:20:42.000"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:41.993" endtime="20210729 14:20:42.000"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:41.975" endtime="20210729 14:20:42.000"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:42.005" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:42.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:42.015" level="INFO">${pids} = 15951
15958
15964</msg>
<status status="PASS" starttime="20210729 14:20:42.001" endtime="20210729 14:20:42.015"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:42.016" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:42.015" endtime="20210729 14:20:42.016"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:42.016" level="INFO">${pids} = ['15951', '15958', '15964']</msg>
<status status="PASS" starttime="20210729 14:20:42.016" endtime="20210729 14:20:42.016"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15951</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:42.020" level="INFO">Running command 'kill 15951 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:42.017" endtime="20210729 14:20:42.020"/>
</kw>
<status status="PASS" starttime="20210729 14:20:42.017" endtime="20210729 14:20:42.020"/>
</iter>
<iter>
<var name="${pid}">15958</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:42.026" level="INFO">Running command 'kill 15958 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:42.021" endtime="20210729 14:20:42.027"/>
</kw>
<status status="PASS" starttime="20210729 14:20:42.020" endtime="20210729 14:20:42.027"/>
</iter>
<iter>
<var name="${pid}">15964</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:42.030" level="INFO">Running command 'kill 15964 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:42.027" endtime="20210729 14:20:42.031"/>
</kw>
<status status="PASS" starttime="20210729 14:20:42.027" endtime="20210729 14:20:42.031"/>
</iter>
<status status="PASS" starttime="20210729 14:20:42.016" endtime="20210729 14:20:42.031"/>
</for>
<status status="PASS" starttime="20210729 14:20:42.016" endtime="20210729 14:20:42.031"/>
</branch>
<status status="PASS" starttime="20210729 14:20:42.016" endtime="20210729 14:20:42.031"/>
</if>
<status status="PASS" starttime="20210729 14:20:42.000" endtime="20210729 14:20:42.032"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCD!?..ABCD!?..ABCD!?'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:40.419" endtime="20210729 14:20:42.032">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t72" name="With Any Valid Token, Updating Password Of Each System User With 0123!?. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:42.038" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:42.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:42.047" level="INFO">${pids} = 15993</msg>
<status status="PASS" starttime="20210729 14:20:42.034" endtime="20210729 14:20:42.047"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:42.048" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:42.048" endtime="20210729 14:20:42.048"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:42.049" level="INFO">${pids} = ['15993']</msg>
<status status="PASS" starttime="20210729 14:20:42.049" endtime="20210729 14:20:42.049"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">15993</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:42.053" level="INFO">Running command 'kill 15993 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:42.049" endtime="20210729 14:20:42.054"/>
</kw>
<status status="PASS" starttime="20210729 14:20:42.049" endtime="20210729 14:20:42.054"/>
</iter>
<status status="PASS" starttime="20210729 14:20:42.049" endtime="20210729 14:20:42.054"/>
</for>
<status status="PASS" starttime="20210729 14:20:42.049" endtime="20210729 14:20:42.054"/>
</branch>
<status status="PASS" starttime="20210729 14:20:42.048" endtime="20210729 14:20:42.054"/>
</if>
<status status="PASS" starttime="20210729 14:20:42.033" endtime="20210729 14:20:42.054"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:42.056" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:42.055" endtime="20210729 14:20:42.056"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:42.056" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:42.056" endtime="20210729 14:20:42.056"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:42.057" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:42.056" endtime="20210729 14:20:42.057"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:42.057" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:42.057" endtime="20210729 14:20:42.057"/>
</kw>
<msg timestamp="20210729 14:20:42.057" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:42.056" endtime="20210729 14:20:42.057"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:42.060" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:42.057" endtime="20210729 14:20:42.062"/>
</kw>
<status status="PASS" starttime="20210729 14:20:42.055" endtime="20210729 14:20:42.062"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:42.064" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:42.063" endtime="20210729 14:20:42.070"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:43.571" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:42.070" endtime="20210729 14:20:43.571"/>
</kw>
<status status="PASS" starttime="20210729 14:20:42.063" endtime="20210729 14:20:43.572"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:43.573" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:43.573" endtime="20210729 14:20:43.573"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:43.573" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:43.573" endtime="20210729 14:20:43.573"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:43.574" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:43.574" endtime="20210729 14:20:43.574"/>
</kw>
<msg timestamp="20210729 14:20:43.574" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:43.572" endtime="20210729 14:20:43.575"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:43.575" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:43.575" endtime="20210729 14:20:43.576"/>
</kw>
<status status="PASS" starttime="20210729 14:20:43.572" endtime="20210729 14:20:43.576"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:43.578" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:43.578" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:43.578" endtime="20210729 14:20:43.579"/>
</kw>
<status status="PASS" starttime="20210729 14:20:43.576" endtime="20210729 14:20:43.579"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:43.581" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:43.581" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:43.580" endtime="20210729 14:20:43.581"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:43.581" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:43.581" endtime="20210729 14:20:43.581"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:43.582" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:43.582" endtime="20210729 14:20:43.582"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:43.582" endtime="20210729 14:20:43.583"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:43.583" endtime="20210729 14:20:43.583"/>
</kw>
<status status="PASS" starttime="20210729 14:20:43.582" endtime="20210729 14:20:43.583"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:43.583" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:43.583" endtime="20210729 14:20:43.583"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:43.584" endtime="20210729 14:20:43.585"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:43.585" endtime="20210729 14:20:43.585"/>
</kw>
<status status="PASS" starttime="20210729 14:20:43.583" endtime="20210729 14:20:43.585"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:43.585" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:43.585" endtime="20210729 14:20:43.585"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:43.585" endtime="20210729 14:20:43.586"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:43.586" endtime="20210729 14:20:43.586"/>
</kw>
<status status="PASS" starttime="20210729 14:20:43.585" endtime="20210729 14:20:43.586"/>
</iter>
<status status="PASS" starttime="20210729 14:20:43.581" endtime="20210729 14:20:43.586"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:43.587" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:43.586" endtime="20210729 14:20:43.587"/>
</kw>
<status status="PASS" starttime="20210729 14:20:43.580" endtime="20210729 14:20:43.587"/>
</kw>
<status status="PASS" starttime="20210729 14:20:42.033" endtime="20210729 14:20:43.587"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=0123!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:43.588" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:43.588" endtime="20210729 14:20:43.588"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:43.589" level="INFO">${payload} = {'password': '0123!?.'}</msg>
<status status="PASS" starttime="20210729 14:20:43.588" endtime="20210729 14:20:43.589"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:43.597" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:43.598" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:43.589" endtime="20210729 14:20:43.598"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:43.598" endtime="20210729 14:20:43.598"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:43.598" endtime="20210729 14:20:43.598"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:43.589" endtime="20210729 14:20:43.598"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:43.589" endtime="20210729 14:20:43.599"/>
</for>
<status status="FAIL" starttime="20210729 14:20:43.587" endtime="20210729 14:20:43.599"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:43.587" endtime="20210729 14:20:43.599"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=0123!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:43.601" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:43.600" endtime="20210729 14:20:43.601"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:43.601" level="INFO">${payload} = {'password': '0123!?.'}</msg>
<status status="PASS" starttime="20210729 14:20:43.601" endtime="20210729 14:20:43.601"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:43.605" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:43.606" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:43.601" endtime="20210729 14:20:43.606"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:43.606" endtime="20210729 14:20:43.606"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:43.606" endtime="20210729 14:20:43.606"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:43.601" endtime="20210729 14:20:43.606"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:43.601" endtime="20210729 14:20:43.606"/>
</for>
<status status="FAIL" starttime="20210729 14:20:43.600" endtime="20210729 14:20:43.606"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:43.600" endtime="20210729 14:20:43.606"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=0123!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:43.607" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:43.607" endtime="20210729 14:20:43.607"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:43.608" level="INFO">${payload} = {'password': '0123!?.'}</msg>
<status status="PASS" starttime="20210729 14:20:43.607" endtime="20210729 14:20:43.608"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:43.611" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:43.611" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:43.608" endtime="20210729 14:20:43.612"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:43.612" endtime="20210729 14:20:43.612"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:43.612" endtime="20210729 14:20:43.612"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:43.608" endtime="20210729 14:20:43.612"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:43.608" endtime="20210729 14:20:43.612"/>
</for>
<status status="FAIL" starttime="20210729 14:20:43.606" endtime="20210729 14:20:43.612"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:43.606" endtime="20210729 14:20:43.612"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:43.587" endtime="20210729 14:20:43.612"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:43.618" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:43.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:43.627" level="INFO">${pids} = 16016
16023
16040</msg>
<status status="PASS" starttime="20210729 14:20:43.614" endtime="20210729 14:20:43.627"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:43.628" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:43.628" endtime="20210729 14:20:43.628"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:43.629" level="INFO">${pids} = ['16016', '16023', '16040']</msg>
<status status="PASS" starttime="20210729 14:20:43.629" endtime="20210729 14:20:43.629"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16016</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:43.633" level="INFO">Running command 'kill 16016 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:43.629" endtime="20210729 14:20:43.633"/>
</kw>
<status status="PASS" starttime="20210729 14:20:43.629" endtime="20210729 14:20:43.633"/>
</iter>
<iter>
<var name="${pid}">16023</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:43.636" level="INFO">Running command 'kill 16023 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:43.634" endtime="20210729 14:20:43.637"/>
</kw>
<status status="PASS" starttime="20210729 14:20:43.633" endtime="20210729 14:20:43.637"/>
</iter>
<iter>
<var name="${pid}">16040</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:43.641" level="INFO">Running command 'kill 16040 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:43.637" endtime="20210729 14:20:43.641"/>
</kw>
<status status="PASS" starttime="20210729 14:20:43.637" endtime="20210729 14:20:43.641"/>
</iter>
<status status="PASS" starttime="20210729 14:20:43.629" endtime="20210729 14:20:43.641"/>
</for>
<status status="PASS" starttime="20210729 14:20:43.628" endtime="20210729 14:20:43.641"/>
</branch>
<status status="PASS" starttime="20210729 14:20:43.628" endtime="20210729 14:20:43.641"/>
</if>
<status status="PASS" starttime="20210729 14:20:43.613" endtime="20210729 14:20:43.642"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": '0123!?.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:42.032" endtime="20210729 14:20:43.642">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t73" name="With Any Valid Token, Updating Password Of Each System User With 0123!?.0 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:43.649" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:43.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:43.659" level="INFO">${pids} = 16069</msg>
<status status="PASS" starttime="20210729 14:20:43.644" endtime="20210729 14:20:43.659"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:43.660" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:43.660" endtime="20210729 14:20:43.660"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:43.661" level="INFO">${pids} = ['16069']</msg>
<status status="PASS" starttime="20210729 14:20:43.661" endtime="20210729 14:20:43.661"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16069</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:43.666" level="INFO">Running command 'kill 16069 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:43.661" endtime="20210729 14:20:43.667"/>
</kw>
<status status="PASS" starttime="20210729 14:20:43.661" endtime="20210729 14:20:43.667"/>
</iter>
<status status="PASS" starttime="20210729 14:20:43.661" endtime="20210729 14:20:43.667"/>
</for>
<status status="PASS" starttime="20210729 14:20:43.660" endtime="20210729 14:20:43.667"/>
</branch>
<status status="PASS" starttime="20210729 14:20:43.660" endtime="20210729 14:20:43.667"/>
</if>
<status status="PASS" starttime="20210729 14:20:43.644" endtime="20210729 14:20:43.667"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:43.669" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:43.668" endtime="20210729 14:20:43.669"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:43.669" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:43.669" endtime="20210729 14:20:43.669"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:43.670" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:43.669" endtime="20210729 14:20:43.670"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:43.670" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:43.670" endtime="20210729 14:20:43.670"/>
</kw>
<msg timestamp="20210729 14:20:43.670" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:43.669" endtime="20210729 14:20:43.671"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:43.677" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:43.671" endtime="20210729 14:20:43.679"/>
</kw>
<status status="PASS" starttime="20210729 14:20:43.668" endtime="20210729 14:20:43.679"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:43.681" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:43.681" endtime="20210729 14:20:43.685"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:45.196" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:43.686" endtime="20210729 14:20:45.199"/>
</kw>
<status status="PASS" starttime="20210729 14:20:43.680" endtime="20210729 14:20:45.200"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:45.201" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:45.201" endtime="20210729 14:20:45.201"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:45.202" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:45.201" endtime="20210729 14:20:45.202"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:45.202" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:45.202" endtime="20210729 14:20:45.202"/>
</kw>
<msg timestamp="20210729 14:20:45.202" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:45.201" endtime="20210729 14:20:45.202"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:45.203" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:45.202" endtime="20210729 14:20:45.203"/>
</kw>
<status status="PASS" starttime="20210729 14:20:45.200" endtime="20210729 14:20:45.203"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:45.204" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:45.204" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:45.204" endtime="20210729 14:20:45.204"/>
</kw>
<status status="PASS" starttime="20210729 14:20:45.203" endtime="20210729 14:20:45.204"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:45.205" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:45.205" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:45.204" endtime="20210729 14:20:45.205"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:45.205" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:45.205" endtime="20210729 14:20:45.205"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:45.206" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:45.205" endtime="20210729 14:20:45.206"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:45.206" endtime="20210729 14:20:45.206"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:45.206" endtime="20210729 14:20:45.207"/>
</kw>
<status status="PASS" starttime="20210729 14:20:45.205" endtime="20210729 14:20:45.207"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:45.207" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:45.207" endtime="20210729 14:20:45.207"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:45.207" endtime="20210729 14:20:45.208"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:45.208" endtime="20210729 14:20:45.208"/>
</kw>
<status status="PASS" starttime="20210729 14:20:45.207" endtime="20210729 14:20:45.208"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:45.209" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:45.208" endtime="20210729 14:20:45.209"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:45.209" endtime="20210729 14:20:45.209"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:45.209" endtime="20210729 14:20:45.210"/>
</kw>
<status status="PASS" starttime="20210729 14:20:45.208" endtime="20210729 14:20:45.210"/>
</iter>
<status status="PASS" starttime="20210729 14:20:45.205" endtime="20210729 14:20:45.210"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:45.210" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:45.210" endtime="20210729 14:20:45.210"/>
</kw>
<status status="PASS" starttime="20210729 14:20:45.204" endtime="20210729 14:20:45.210"/>
</kw>
<status status="PASS" starttime="20210729 14:20:43.643" endtime="20210729 14:20:45.210"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=0123!?.0</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:45.211" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:45.211" endtime="20210729 14:20:45.211"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:45.212" level="INFO">${payload} = {'password': '0123!?.0'}</msg>
<status status="PASS" starttime="20210729 14:20:45.212" endtime="20210729 14:20:45.212"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:45.221" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:45.221" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:45.212" endtime="20210729 14:20:45.221"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:45.221" endtime="20210729 14:20:45.221"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:45.221" endtime="20210729 14:20:45.221"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:45.212" endtime="20210729 14:20:45.221"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:45.212" endtime="20210729 14:20:45.221"/>
</for>
<status status="FAIL" starttime="20210729 14:20:45.211" endtime="20210729 14:20:45.222"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:45.211" endtime="20210729 14:20:45.222"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=0123!?.0</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:45.223" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:45.222" endtime="20210729 14:20:45.223"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:45.223" level="INFO">${payload} = {'password': '0123!?.0'}</msg>
<status status="PASS" starttime="20210729 14:20:45.223" endtime="20210729 14:20:45.223"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:45.227" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:45.227" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:45.224" endtime="20210729 14:20:45.227"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:45.227" endtime="20210729 14:20:45.227"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:45.227" endtime="20210729 14:20:45.227"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:45.223" endtime="20210729 14:20:45.228"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:45.223" endtime="20210729 14:20:45.228"/>
</for>
<status status="FAIL" starttime="20210729 14:20:45.222" endtime="20210729 14:20:45.228"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:45.222" endtime="20210729 14:20:45.228"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=0123!?.0</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:45.229" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:45.228" endtime="20210729 14:20:45.229"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:45.229" level="INFO">${payload} = {'password': '0123!?.0'}</msg>
<status status="PASS" starttime="20210729 14:20:45.229" endtime="20210729 14:20:45.229"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:45.233" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:45.233" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:45.229" endtime="20210729 14:20:45.234"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:45.234" endtime="20210729 14:20:45.234"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:45.234" endtime="20210729 14:20:45.234"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:45.229" endtime="20210729 14:20:45.234"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:45.229" endtime="20210729 14:20:45.234"/>
</for>
<status status="FAIL" starttime="20210729 14:20:45.228" endtime="20210729 14:20:45.234"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:45.228" endtime="20210729 14:20:45.234"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:45.210" endtime="20210729 14:20:45.234"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:45.243" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:45.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:45.252" level="INFO">${pids} = 16092
16099
16103</msg>
<status status="PASS" starttime="20210729 14:20:45.235" endtime="20210729 14:20:45.252"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:45.253" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:45.252" endtime="20210729 14:20:45.253"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:45.253" level="INFO">${pids} = ['16092', '16099', '16103']</msg>
<status status="PASS" starttime="20210729 14:20:45.253" endtime="20210729 14:20:45.254"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16092</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:45.257" level="INFO">Running command 'kill 16092 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:45.254" endtime="20210729 14:20:45.257"/>
</kw>
<status status="PASS" starttime="20210729 14:20:45.254" endtime="20210729 14:20:45.257"/>
</iter>
<iter>
<var name="${pid}">16099</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:45.261" level="INFO">Running command 'kill 16099 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:45.258" endtime="20210729 14:20:45.261"/>
</kw>
<status status="PASS" starttime="20210729 14:20:45.258" endtime="20210729 14:20:45.261"/>
</iter>
<iter>
<var name="${pid}">16103</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:45.266" level="INFO">Running command 'kill 16103 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:45.262" endtime="20210729 14:20:45.266"/>
</kw>
<status status="PASS" starttime="20210729 14:20:45.261" endtime="20210729 14:20:45.266"/>
</iter>
<status status="PASS" starttime="20210729 14:20:45.254" endtime="20210729 14:20:45.266"/>
</for>
<status status="PASS" starttime="20210729 14:20:45.253" endtime="20210729 14:20:45.266"/>
</branch>
<status status="PASS" starttime="20210729 14:20:45.253" endtime="20210729 14:20:45.267"/>
</if>
<status status="PASS" starttime="20210729 14:20:45.234" endtime="20210729 14:20:45.267"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": '0123!?.0'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:43.642" endtime="20210729 14:20:45.267">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t74" name="With Any Valid Token, Updating Password Of Each System User With 0123!?.00123!?.00123!? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:45.273" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:45.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:45.282" level="INFO">${pids} = 16132</msg>
<status status="PASS" starttime="20210729 14:20:45.269" endtime="20210729 14:20:45.282"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:45.283" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:45.282" endtime="20210729 14:20:45.283"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:45.284" level="INFO">${pids} = ['16132']</msg>
<status status="PASS" starttime="20210729 14:20:45.284" endtime="20210729 14:20:45.284"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16132</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:45.287" level="INFO">Running command 'kill 16132 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:45.284" endtime="20210729 14:20:45.287"/>
</kw>
<status status="PASS" starttime="20210729 14:20:45.284" endtime="20210729 14:20:45.288"/>
</iter>
<status status="PASS" starttime="20210729 14:20:45.284" endtime="20210729 14:20:45.288"/>
</for>
<status status="PASS" starttime="20210729 14:20:45.283" endtime="20210729 14:20:45.288"/>
</branch>
<status status="PASS" starttime="20210729 14:20:45.283" endtime="20210729 14:20:45.288"/>
</if>
<status status="PASS" starttime="20210729 14:20:45.269" endtime="20210729 14:20:45.288"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:45.289" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:45.288" endtime="20210729 14:20:45.289"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:45.289" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:45.289" endtime="20210729 14:20:45.289"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:45.290" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:45.289" endtime="20210729 14:20:45.290"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:45.290" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:45.290" endtime="20210729 14:20:45.290"/>
</kw>
<msg timestamp="20210729 14:20:45.290" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:45.289" endtime="20210729 14:20:45.290"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:45.293" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:45.290" endtime="20210729 14:20:45.295"/>
</kw>
<status status="PASS" starttime="20210729 14:20:45.288" endtime="20210729 14:20:45.296"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:45.297" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:45.296" endtime="20210729 14:20:45.302"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:46.802" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:45.302" endtime="20210729 14:20:46.803"/>
</kw>
<status status="PASS" starttime="20210729 14:20:45.296" endtime="20210729 14:20:46.803"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:46.804" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:46.804" endtime="20210729 14:20:46.804"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:46.804" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:46.804" endtime="20210729 14:20:46.804"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:46.805" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:46.804" endtime="20210729 14:20:46.805"/>
</kw>
<msg timestamp="20210729 14:20:46.805" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:46.803" endtime="20210729 14:20:46.805"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:46.805" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:46.805" endtime="20210729 14:20:46.806"/>
</kw>
<status status="PASS" starttime="20210729 14:20:46.803" endtime="20210729 14:20:46.806"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:46.806" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:46.806" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:46.806" endtime="20210729 14:20:46.807"/>
</kw>
<status status="PASS" starttime="20210729 14:20:46.806" endtime="20210729 14:20:46.807"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:46.808" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:46.808" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:46.807" endtime="20210729 14:20:46.808"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:46.808" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:46.808" endtime="20210729 14:20:46.808"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:46.809" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:46.808" endtime="20210729 14:20:46.809"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:46.809" endtime="20210729 14:20:46.809"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:46.809" endtime="20210729 14:20:46.810"/>
</kw>
<status status="PASS" starttime="20210729 14:20:46.808" endtime="20210729 14:20:46.810"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:46.810" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:46.810" endtime="20210729 14:20:46.810"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:46.810" endtime="20210729 14:20:46.811"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:46.811" endtime="20210729 14:20:46.811"/>
</kw>
<status status="PASS" starttime="20210729 14:20:46.810" endtime="20210729 14:20:46.811"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:46.812" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:46.811" endtime="20210729 14:20:46.812"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:46.812" endtime="20210729 14:20:46.812"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:46.812" endtime="20210729 14:20:46.813"/>
</kw>
<status status="PASS" starttime="20210729 14:20:46.811" endtime="20210729 14:20:46.813"/>
</iter>
<status status="PASS" starttime="20210729 14:20:46.808" endtime="20210729 14:20:46.813"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:46.813" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:46.813" endtime="20210729 14:20:46.813"/>
</kw>
<status status="PASS" starttime="20210729 14:20:46.807" endtime="20210729 14:20:46.813"/>
</kw>
<status status="PASS" starttime="20210729 14:20:45.268" endtime="20210729 14:20:46.813"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=0123!?.00123!?.00123!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:46.815" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:46.814" endtime="20210729 14:20:46.815"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:46.815" level="INFO">${payload} = {'password': '0123!?.00123!?.00123!?'}</msg>
<status status="PASS" starttime="20210729 14:20:46.815" endtime="20210729 14:20:46.815"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:46.824" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:46.824" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:46.816" endtime="20210729 14:20:46.824"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:46.824" endtime="20210729 14:20:46.824"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:46.824" endtime="20210729 14:20:46.824"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:46.815" endtime="20210729 14:20:46.825"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:46.815" endtime="20210729 14:20:46.825"/>
</for>
<status status="FAIL" starttime="20210729 14:20:46.814" endtime="20210729 14:20:46.825"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:46.814" endtime="20210729 14:20:46.825"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=0123!?.00123!?.00123!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:46.826" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:46.825" endtime="20210729 14:20:46.826"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:46.826" level="INFO">${payload} = {'password': '0123!?.00123!?.00123!?'}</msg>
<status status="PASS" starttime="20210729 14:20:46.826" endtime="20210729 14:20:46.826"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:46.831" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:46.831" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:46.827" endtime="20210729 14:20:46.831"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:46.831" endtime="20210729 14:20:46.832"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:46.832" endtime="20210729 14:20:46.832"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:46.826" endtime="20210729 14:20:46.832"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:46.826" endtime="20210729 14:20:46.832"/>
</for>
<status status="FAIL" starttime="20210729 14:20:46.825" endtime="20210729 14:20:46.832"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:46.825" endtime="20210729 14:20:46.832"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=0123!?.00123!?.00123!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:46.833" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:46.833" endtime="20210729 14:20:46.833"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:46.834" level="INFO">${payload} = {'password': '0123!?.00123!?.00123!?'}</msg>
<status status="PASS" starttime="20210729 14:20:46.833" endtime="20210729 14:20:46.834"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:46.838" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:46.838" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:46.834" endtime="20210729 14:20:46.838"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:46.838" endtime="20210729 14:20:46.838"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:46.838" endtime="20210729 14:20:46.838"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:46.834" endtime="20210729 14:20:46.838"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:46.834" endtime="20210729 14:20:46.839"/>
</for>
<status status="FAIL" starttime="20210729 14:20:46.832" endtime="20210729 14:20:46.839"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:46.832" endtime="20210729 14:20:46.839"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:46.813" endtime="20210729 14:20:46.839"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:46.843" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:46.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:46.853" level="INFO">${pids} = 16155
16162
16172</msg>
<status status="PASS" starttime="20210729 14:20:46.840" endtime="20210729 14:20:46.853"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:46.854" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:46.854" endtime="20210729 14:20:46.854"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:46.855" level="INFO">${pids} = ['16155', '16162', '16172']</msg>
<status status="PASS" starttime="20210729 14:20:46.855" endtime="20210729 14:20:46.855"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16155</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:46.858" level="INFO">Running command 'kill 16155 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:46.855" endtime="20210729 14:20:46.859"/>
</kw>
<status status="PASS" starttime="20210729 14:20:46.855" endtime="20210729 14:20:46.859"/>
</iter>
<iter>
<var name="${pid}">16162</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:46.862" level="INFO">Running command 'kill 16162 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:46.859" endtime="20210729 14:20:46.862"/>
</kw>
<status status="PASS" starttime="20210729 14:20:46.859" endtime="20210729 14:20:46.862"/>
</iter>
<iter>
<var name="${pid}">16172</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:46.866" level="INFO">Running command 'kill 16172 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:46.863" endtime="20210729 14:20:46.867"/>
</kw>
<status status="PASS" starttime="20210729 14:20:46.863" endtime="20210729 14:20:46.867"/>
</iter>
<status status="PASS" starttime="20210729 14:20:46.855" endtime="20210729 14:20:46.867"/>
</for>
<status status="PASS" starttime="20210729 14:20:46.855" endtime="20210729 14:20:46.867"/>
</branch>
<status status="PASS" starttime="20210729 14:20:46.854" endtime="20210729 14:20:46.867"/>
</if>
<status status="PASS" starttime="20210729 14:20:46.839" endtime="20210729 14:20:46.867"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": '0123!?.00123!?.00123!?'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:45.268" endtime="20210729 14:20:46.868">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t75" name="With Any Valid Token, Updating Password Of Each System User With abcdAB9 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:46.877" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:46.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:46.887" level="INFO">${pids} = 16201</msg>
<status status="PASS" starttime="20210729 14:20:46.869" endtime="20210729 14:20:46.887"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:46.888" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:46.888" endtime="20210729 14:20:46.888"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:46.889" level="INFO">${pids} = ['16201']</msg>
<status status="PASS" starttime="20210729 14:20:46.889" endtime="20210729 14:20:46.889"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16201</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:46.893" level="INFO">Running command 'kill 16201 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:46.889" endtime="20210729 14:20:46.893"/>
</kw>
<status status="PASS" starttime="20210729 14:20:46.889" endtime="20210729 14:20:46.894"/>
</iter>
<status status="PASS" starttime="20210729 14:20:46.889" endtime="20210729 14:20:46.894"/>
</for>
<status status="PASS" starttime="20210729 14:20:46.889" endtime="20210729 14:20:46.894"/>
</branch>
<status status="PASS" starttime="20210729 14:20:46.888" endtime="20210729 14:20:46.894"/>
</if>
<status status="PASS" starttime="20210729 14:20:46.869" endtime="20210729 14:20:46.894"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:46.895" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:46.895" endtime="20210729 14:20:46.895"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:46.896" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:46.896" endtime="20210729 14:20:46.896"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:46.897" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:46.896" endtime="20210729 14:20:46.897"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:46.897" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:46.897" endtime="20210729 14:20:46.897"/>
</kw>
<msg timestamp="20210729 14:20:46.897" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:46.895" endtime="20210729 14:20:46.897"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:46.902" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:46.898" endtime="20210729 14:20:46.903"/>
</kw>
<status status="PASS" starttime="20210729 14:20:46.894" endtime="20210729 14:20:46.904"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:46.905" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:46.905" endtime="20210729 14:20:46.909"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:48.411" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:46.909" endtime="20210729 14:20:48.412"/>
</kw>
<status status="PASS" starttime="20210729 14:20:46.904" endtime="20210729 14:20:48.413"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:48.419" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:48.418" endtime="20210729 14:20:48.419"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:48.420" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:48.419" endtime="20210729 14:20:48.420"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:48.421" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:48.420" endtime="20210729 14:20:48.421"/>
</kw>
<msg timestamp="20210729 14:20:48.422" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:48.416" endtime="20210729 14:20:48.422"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:48.423" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:48.422" endtime="20210729 14:20:48.424"/>
</kw>
<status status="PASS" starttime="20210729 14:20:48.414" endtime="20210729 14:20:48.424"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:48.425" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:48.425" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:48.425" endtime="20210729 14:20:48.426"/>
</kw>
<status status="PASS" starttime="20210729 14:20:48.424" endtime="20210729 14:20:48.426"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:48.427" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:48.428" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:48.427" endtime="20210729 14:20:48.428"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:48.428" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:48.428" endtime="20210729 14:20:48.428"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:48.430" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:48.429" endtime="20210729 14:20:48.430"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:48.430" endtime="20210729 14:20:48.431"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:48.431" endtime="20210729 14:20:48.432"/>
</kw>
<status status="PASS" starttime="20210729 14:20:48.429" endtime="20210729 14:20:48.432"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:48.432" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:48.432" endtime="20210729 14:20:48.432"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:48.432" endtime="20210729 14:20:48.433"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:48.433" endtime="20210729 14:20:48.434"/>
</kw>
<status status="PASS" starttime="20210729 14:20:48.432" endtime="20210729 14:20:48.434"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:48.434" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:48.434" endtime="20210729 14:20:48.434"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:48.434" endtime="20210729 14:20:48.435"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:48.435" endtime="20210729 14:20:48.435"/>
</kw>
<status status="PASS" starttime="20210729 14:20:48.434" endtime="20210729 14:20:48.435"/>
</iter>
<status status="PASS" starttime="20210729 14:20:48.428" endtime="20210729 14:20:48.435"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:48.436" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:48.436" endtime="20210729 14:20:48.436"/>
</kw>
<status status="PASS" starttime="20210729 14:20:48.426" endtime="20210729 14:20:48.436"/>
</kw>
<status status="PASS" starttime="20210729 14:20:46.869" endtime="20210729 14:20:48.436"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdAB9</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:48.437" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:48.437" endtime="20210729 14:20:48.437"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:48.438" level="INFO">${payload} = {'password': 'abcdAB9'}</msg>
<status status="PASS" starttime="20210729 14:20:48.437" endtime="20210729 14:20:48.438"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:48.446" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:48.446" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:48.438" endtime="20210729 14:20:48.446"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:48.446" endtime="20210729 14:20:48.447"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:48.447" endtime="20210729 14:20:48.447"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:48.438" endtime="20210729 14:20:48.447"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:48.438" endtime="20210729 14:20:48.447"/>
</for>
<status status="FAIL" starttime="20210729 14:20:48.437" endtime="20210729 14:20:48.447"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:48.437" endtime="20210729 14:20:48.447"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdAB9</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:48.449" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:48.448" endtime="20210729 14:20:48.449"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:48.449" level="INFO">${payload} = {'password': 'abcdAB9'}</msg>
<status status="PASS" starttime="20210729 14:20:48.449" endtime="20210729 14:20:48.449"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:48.454" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:48.454" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:48.450" endtime="20210729 14:20:48.454"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:48.454" endtime="20210729 14:20:48.454"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:48.454" endtime="20210729 14:20:48.454"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:48.450" endtime="20210729 14:20:48.454"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:48.449" endtime="20210729 14:20:48.454"/>
</for>
<status status="FAIL" starttime="20210729 14:20:48.448" endtime="20210729 14:20:48.454"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:48.447" endtime="20210729 14:20:48.454"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdAB9</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:48.456" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:48.455" endtime="20210729 14:20:48.456"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:48.456" level="INFO">${payload} = {'password': 'abcdAB9'}</msg>
<status status="PASS" starttime="20210729 14:20:48.456" endtime="20210729 14:20:48.456"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:48.460" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:48.460" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:48.456" endtime="20210729 14:20:48.460"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:48.460" endtime="20210729 14:20:48.460"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:48.460" endtime="20210729 14:20:48.460"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:48.456" endtime="20210729 14:20:48.460"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:48.456" endtime="20210729 14:20:48.460"/>
</for>
<status status="FAIL" starttime="20210729 14:20:48.455" endtime="20210729 14:20:48.461"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:48.455" endtime="20210729 14:20:48.461"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:48.436" endtime="20210729 14:20:48.461"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:48.465" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:48.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:48.475" level="INFO">${pids} = 16224
16231
16237</msg>
<status status="PASS" starttime="20210729 14:20:48.462" endtime="20210729 14:20:48.475"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:48.476" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:48.476" endtime="20210729 14:20:48.476"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:48.477" level="INFO">${pids} = ['16224', '16231', '16237']</msg>
<status status="PASS" starttime="20210729 14:20:48.476" endtime="20210729 14:20:48.477"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16224</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:48.480" level="INFO">Running command 'kill 16224 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:48.477" endtime="20210729 14:20:48.481"/>
</kw>
<status status="PASS" starttime="20210729 14:20:48.477" endtime="20210729 14:20:48.481"/>
</iter>
<iter>
<var name="${pid}">16231</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:48.485" level="INFO">Running command 'kill 16231 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:48.482" endtime="20210729 14:20:48.485"/>
</kw>
<status status="PASS" starttime="20210729 14:20:48.481" endtime="20210729 14:20:48.485"/>
</iter>
<iter>
<var name="${pid}">16237</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:48.488" level="INFO">Running command 'kill 16237 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:48.486" endtime="20210729 14:20:48.488"/>
</kw>
<status status="PASS" starttime="20210729 14:20:48.485" endtime="20210729 14:20:48.489"/>
</iter>
<status status="PASS" starttime="20210729 14:20:48.477" endtime="20210729 14:20:48.489"/>
</for>
<status status="PASS" starttime="20210729 14:20:48.476" endtime="20210729 14:20:48.489"/>
</branch>
<status status="PASS" starttime="20210729 14:20:48.476" endtime="20210729 14:20:48.489"/>
</if>
<status status="PASS" starttime="20210729 14:20:48.461" endtime="20210729 14:20:48.489"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdAB9'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:46.868" endtime="20210729 14:20:48.489">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t76" name="With Any Valid Token, Updating Password Of Each System User With abcdAB90 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:48.494" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:48.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:48.504" level="INFO">${pids} = 16266</msg>
<status status="PASS" starttime="20210729 14:20:48.491" endtime="20210729 14:20:48.504"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:48.505" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:48.504" endtime="20210729 14:20:48.505"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:48.505" level="INFO">${pids} = ['16266']</msg>
<status status="PASS" starttime="20210729 14:20:48.505" endtime="20210729 14:20:48.505"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16266</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:48.510" level="INFO">Running command 'kill 16266 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:48.506" endtime="20210729 14:20:48.511"/>
</kw>
<status status="PASS" starttime="20210729 14:20:48.506" endtime="20210729 14:20:48.511"/>
</iter>
<status status="PASS" starttime="20210729 14:20:48.505" endtime="20210729 14:20:48.511"/>
</for>
<status status="PASS" starttime="20210729 14:20:48.505" endtime="20210729 14:20:48.511"/>
</branch>
<status status="PASS" starttime="20210729 14:20:48.505" endtime="20210729 14:20:48.511"/>
</if>
<status status="PASS" starttime="20210729 14:20:48.491" endtime="20210729 14:20:48.511"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:48.512" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:48.512" endtime="20210729 14:20:48.512"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:48.513" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:48.513" endtime="20210729 14:20:48.513"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:48.514" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:48.513" endtime="20210729 14:20:48.514"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:48.514" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:48.514" endtime="20210729 14:20:48.514"/>
</kw>
<msg timestamp="20210729 14:20:48.514" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:48.513" endtime="20210729 14:20:48.514"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:48.526" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:48.514" endtime="20210729 14:20:48.528"/>
</kw>
<status status="PASS" starttime="20210729 14:20:48.511" endtime="20210729 14:20:48.528"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:48.530" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:48.529" endtime="20210729 14:20:48.534"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:50.036" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:48.535" endtime="20210729 14:20:50.036"/>
</kw>
<status status="PASS" starttime="20210729 14:20:48.528" endtime="20210729 14:20:50.036"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:50.038" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:50.037" endtime="20210729 14:20:50.038"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:50.038" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:50.038" endtime="20210729 14:20:50.038"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:50.039" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:50.038" endtime="20210729 14:20:50.039"/>
</kw>
<msg timestamp="20210729 14:20:50.039" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:50.037" endtime="20210729 14:20:50.039"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:50.039" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:50.039" endtime="20210729 14:20:50.040"/>
</kw>
<status status="PASS" starttime="20210729 14:20:50.037" endtime="20210729 14:20:50.040"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:50.041" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:50.041" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:50.041" endtime="20210729 14:20:50.041"/>
</kw>
<status status="PASS" starttime="20210729 14:20:50.040" endtime="20210729 14:20:50.041"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:50.042" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:50.042" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:50.042" endtime="20210729 14:20:50.043"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:50.043" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:50.043" endtime="20210729 14:20:50.043"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:50.043" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:50.043" endtime="20210729 14:20:50.043"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:50.044" endtime="20210729 14:20:50.044"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:50.044" endtime="20210729 14:20:50.045"/>
</kw>
<status status="PASS" starttime="20210729 14:20:50.043" endtime="20210729 14:20:50.045"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:50.045" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:50.045" endtime="20210729 14:20:50.045"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:50.045" endtime="20210729 14:20:50.046"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:50.046" endtime="20210729 14:20:50.047"/>
</kw>
<status status="PASS" starttime="20210729 14:20:50.045" endtime="20210729 14:20:50.047"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:50.047" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:50.047" endtime="20210729 14:20:50.047"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:50.047" endtime="20210729 14:20:50.048"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:50.048" endtime="20210729 14:20:50.049"/>
</kw>
<status status="PASS" starttime="20210729 14:20:50.047" endtime="20210729 14:20:50.049"/>
</iter>
<status status="PASS" starttime="20210729 14:20:50.043" endtime="20210729 14:20:50.049"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:50.049" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:50.049" endtime="20210729 14:20:50.049"/>
</kw>
<status status="PASS" starttime="20210729 14:20:50.042" endtime="20210729 14:20:50.049"/>
</kw>
<status status="PASS" starttime="20210729 14:20:48.490" endtime="20210729 14:20:50.049"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdAB90</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:50.050" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:50.050" endtime="20210729 14:20:50.051"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:50.051" level="INFO">${payload} = {'password': 'abcdAB90'}</msg>
<status status="PASS" starttime="20210729 14:20:50.051" endtime="20210729 14:20:50.051"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:50.059" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:50.059" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:50.051" endtime="20210729 14:20:50.059"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:50.060" endtime="20210729 14:20:50.060"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:50.060" endtime="20210729 14:20:50.060"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:50.051" endtime="20210729 14:20:50.060"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:50.051" endtime="20210729 14:20:50.060"/>
</for>
<status status="FAIL" starttime="20210729 14:20:50.050" endtime="20210729 14:20:50.060"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:50.050" endtime="20210729 14:20:50.060"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdAB90</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:50.061" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:50.061" endtime="20210729 14:20:50.061"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:50.062" level="INFO">${payload} = {'password': 'abcdAB90'}</msg>
<status status="PASS" starttime="20210729 14:20:50.061" endtime="20210729 14:20:50.062"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:50.066" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:50.066" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:50.062" endtime="20210729 14:20:50.066"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:50.066" endtime="20210729 14:20:50.066"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:50.066" endtime="20210729 14:20:50.066"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:50.062" endtime="20210729 14:20:50.066"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:50.062" endtime="20210729 14:20:50.066"/>
</for>
<status status="FAIL" starttime="20210729 14:20:50.060" endtime="20210729 14:20:50.066"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:50.060" endtime="20210729 14:20:50.067"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdAB90</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:50.068" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:50.067" endtime="20210729 14:20:50.068"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:50.068" level="INFO">${payload} = {'password': 'abcdAB90'}</msg>
<status status="PASS" starttime="20210729 14:20:50.068" endtime="20210729 14:20:50.068"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:50.072" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:50.072" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:50.068" endtime="20210729 14:20:50.072"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:50.073" endtime="20210729 14:20:50.073"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:50.073" endtime="20210729 14:20:50.073"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:50.068" endtime="20210729 14:20:50.073"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:50.068" endtime="20210729 14:20:50.073"/>
</for>
<status status="FAIL" starttime="20210729 14:20:50.067" endtime="20210729 14:20:50.073"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:50.067" endtime="20210729 14:20:50.073"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:50.049" endtime="20210729 14:20:50.073"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:50.077" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:50.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:50.087" level="INFO">${pids} = 16289
16296
16300</msg>
<status status="PASS" starttime="20210729 14:20:50.074" endtime="20210729 14:20:50.087"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:50.088" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:50.087" endtime="20210729 14:20:50.088"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:50.089" level="INFO">${pids} = ['16289', '16296', '16300']</msg>
<status status="PASS" starttime="20210729 14:20:50.088" endtime="20210729 14:20:50.089"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16289</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:50.092" level="INFO">Running command 'kill 16289 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:50.089" endtime="20210729 14:20:50.092"/>
</kw>
<status status="PASS" starttime="20210729 14:20:50.089" endtime="20210729 14:20:50.093"/>
</iter>
<iter>
<var name="${pid}">16296</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:50.096" level="INFO">Running command 'kill 16296 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:50.093" endtime="20210729 14:20:50.096"/>
</kw>
<status status="PASS" starttime="20210729 14:20:50.093" endtime="20210729 14:20:50.097"/>
</iter>
<iter>
<var name="${pid}">16300</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:50.101" level="INFO">Running command 'kill 16300 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:50.097" endtime="20210729 14:20:50.101"/>
</kw>
<status status="PASS" starttime="20210729 14:20:50.097" endtime="20210729 14:20:50.101"/>
</iter>
<status status="PASS" starttime="20210729 14:20:50.089" endtime="20210729 14:20:50.102"/>
</for>
<status status="PASS" starttime="20210729 14:20:50.088" endtime="20210729 14:20:50.102"/>
</branch>
<status status="PASS" starttime="20210729 14:20:50.088" endtime="20210729 14:20:50.102"/>
</if>
<status status="PASS" starttime="20210729 14:20:50.073" endtime="20210729 14:20:50.102"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdAB90'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:48.490" endtime="20210729 14:20:50.102">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t77" name="With Any Valid Token, Updating Password Of Each System User With abcdAB90abcdAB90abcdAB Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:50.106" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:50.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:50.117" level="INFO">${pids} = 16329</msg>
<status status="PASS" starttime="20210729 14:20:50.104" endtime="20210729 14:20:50.117"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:50.118" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:50.117" endtime="20210729 14:20:50.118"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:50.118" level="INFO">${pids} = ['16329']</msg>
<status status="PASS" starttime="20210729 14:20:50.118" endtime="20210729 14:20:50.119"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16329</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:50.122" level="INFO">Running command 'kill 16329 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:50.119" endtime="20210729 14:20:50.122"/>
</kw>
<status status="PASS" starttime="20210729 14:20:50.119" endtime="20210729 14:20:50.122"/>
</iter>
<status status="PASS" starttime="20210729 14:20:50.119" endtime="20210729 14:20:50.123"/>
</for>
<status status="PASS" starttime="20210729 14:20:50.118" endtime="20210729 14:20:50.123"/>
</branch>
<status status="PASS" starttime="20210729 14:20:50.118" endtime="20210729 14:20:50.123"/>
</if>
<status status="PASS" starttime="20210729 14:20:50.103" endtime="20210729 14:20:50.123"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:50.124" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:50.124" endtime="20210729 14:20:50.124"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:50.125" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:50.124" endtime="20210729 14:20:50.125"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:50.125" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:50.125" endtime="20210729 14:20:50.125"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:50.125" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:50.125" endtime="20210729 14:20:50.125"/>
</kw>
<msg timestamp="20210729 14:20:50.126" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:50.124" endtime="20210729 14:20:50.126"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:50.135" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:50.126" endtime="20210729 14:20:50.137"/>
</kw>
<status status="PASS" starttime="20210729 14:20:50.123" endtime="20210729 14:20:50.138"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:50.139" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:50.138" endtime="20210729 14:20:50.143"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:51.650" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:50.143" endtime="20210729 14:20:51.651"/>
</kw>
<status status="PASS" starttime="20210729 14:20:50.138" endtime="20210729 14:20:51.651"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:51.652" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:51.652" endtime="20210729 14:20:51.652"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:51.652" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:51.652" endtime="20210729 14:20:51.652"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:51.652" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:51.652" endtime="20210729 14:20:51.653"/>
</kw>
<msg timestamp="20210729 14:20:51.653" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:51.651" endtime="20210729 14:20:51.653"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:51.653" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:51.653" endtime="20210729 14:20:51.654"/>
</kw>
<status status="PASS" starttime="20210729 14:20:51.651" endtime="20210729 14:20:51.654"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:51.655" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:51.655" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:51.654" endtime="20210729 14:20:51.655"/>
</kw>
<status status="PASS" starttime="20210729 14:20:51.654" endtime="20210729 14:20:51.655"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:51.656" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:51.656" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:51.655" endtime="20210729 14:20:51.656"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:51.656" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:51.656" endtime="20210729 14:20:51.656"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:51.657" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:51.656" endtime="20210729 14:20:51.657"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:51.657" endtime="20210729 14:20:51.657"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:51.657" endtime="20210729 14:20:51.658"/>
</kw>
<status status="PASS" starttime="20210729 14:20:51.656" endtime="20210729 14:20:51.658"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:51.658" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:51.658" endtime="20210729 14:20:51.658"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:51.658" endtime="20210729 14:20:51.659"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:51.659" endtime="20210729 14:20:51.659"/>
</kw>
<status status="PASS" starttime="20210729 14:20:51.658" endtime="20210729 14:20:51.659"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:51.659" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:51.659" endtime="20210729 14:20:51.659"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:51.659" endtime="20210729 14:20:51.660"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:51.660" endtime="20210729 14:20:51.660"/>
</kw>
<status status="PASS" starttime="20210729 14:20:51.659" endtime="20210729 14:20:51.661"/>
</iter>
<status status="PASS" starttime="20210729 14:20:51.656" endtime="20210729 14:20:51.661"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:51.661" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:51.661" endtime="20210729 14:20:51.661"/>
</kw>
<status status="PASS" starttime="20210729 14:20:51.655" endtime="20210729 14:20:51.661"/>
</kw>
<status status="PASS" starttime="20210729 14:20:50.103" endtime="20210729 14:20:51.661"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdAB90abcdAB90abcdAB</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:51.662" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:51.662" endtime="20210729 14:20:51.662"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:51.663" level="INFO">${payload} = {'password': 'abcdAB90abcdAB90abcdAB'}</msg>
<status status="PASS" starttime="20210729 14:20:51.663" endtime="20210729 14:20:51.663"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:51.672" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:51.672" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:51.663" endtime="20210729 14:20:51.672"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:51.672" endtime="20210729 14:20:51.672"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:51.672" endtime="20210729 14:20:51.672"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:51.663" endtime="20210729 14:20:51.673"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:51.663" endtime="20210729 14:20:51.673"/>
</for>
<status status="FAIL" starttime="20210729 14:20:51.662" endtime="20210729 14:20:51.673"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:51.662" endtime="20210729 14:20:51.673"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdAB90abcdAB90abcdAB</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:51.674" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:51.674" endtime="20210729 14:20:51.674"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:51.674" level="INFO">${payload} = {'password': 'abcdAB90abcdAB90abcdAB'}</msg>
<status status="PASS" starttime="20210729 14:20:51.674" endtime="20210729 14:20:51.674"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:51.678" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:51.679" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:51.675" endtime="20210729 14:20:51.679"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:51.679" endtime="20210729 14:20:51.679"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:51.679" endtime="20210729 14:20:51.679"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:51.674" endtime="20210729 14:20:51.679"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:51.674" endtime="20210729 14:20:51.679"/>
</for>
<status status="FAIL" starttime="20210729 14:20:51.673" endtime="20210729 14:20:51.679"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:51.673" endtime="20210729 14:20:51.679"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abcdAB90abcdAB90abcdAB</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:51.680" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:51.680" endtime="20210729 14:20:51.680"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:51.681" level="INFO">${payload} = {'password': 'abcdAB90abcdAB90abcdAB'}</msg>
<status status="PASS" starttime="20210729 14:20:51.681" endtime="20210729 14:20:51.681"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:51.685" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:51.685" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:51.681" endtime="20210729 14:20:51.686"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:51.686" endtime="20210729 14:20:51.686"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:51.686" endtime="20210729 14:20:51.686"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:51.681" endtime="20210729 14:20:51.686"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:51.681" endtime="20210729 14:20:51.686"/>
</for>
<status status="FAIL" starttime="20210729 14:20:51.679" endtime="20210729 14:20:51.686"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:51.679" endtime="20210729 14:20:51.686"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:51.661" endtime="20210729 14:20:51.686"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:51.692" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:51.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:51.702" level="INFO">${pids} = 16352
16359
16369</msg>
<status status="PASS" starttime="20210729 14:20:51.687" endtime="20210729 14:20:51.702"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:51.703" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:51.702" endtime="20210729 14:20:51.703"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:51.703" level="INFO">${pids} = ['16352', '16359', '16369']</msg>
<status status="PASS" starttime="20210729 14:20:51.703" endtime="20210729 14:20:51.703"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16352</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:51.706" level="INFO">Running command 'kill 16352 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:51.704" endtime="20210729 14:20:51.707"/>
</kw>
<status status="PASS" starttime="20210729 14:20:51.704" endtime="20210729 14:20:51.707"/>
</iter>
<iter>
<var name="${pid}">16359</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:51.710" level="INFO">Running command 'kill 16359 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:51.707" endtime="20210729 14:20:51.712"/>
</kw>
<status status="PASS" starttime="20210729 14:20:51.707" endtime="20210729 14:20:51.712"/>
</iter>
<iter>
<var name="${pid}">16369</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:51.716" level="INFO">Running command 'kill 16369 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:51.712" endtime="20210729 14:20:51.717"/>
</kw>
<status status="PASS" starttime="20210729 14:20:51.712" endtime="20210729 14:20:51.717"/>
</iter>
<status status="PASS" starttime="20210729 14:20:51.703" endtime="20210729 14:20:51.717"/>
</for>
<status status="PASS" starttime="20210729 14:20:51.703" endtime="20210729 14:20:51.717"/>
</branch>
<status status="PASS" starttime="20210729 14:20:51.703" endtime="20210729 14:20:51.717"/>
</if>
<status status="PASS" starttime="20210729 14:20:51.686" endtime="20210729 14:20:51.717"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abcdAB90abcdAB90abcdAB'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:50.102" endtime="20210729 14:20:51.717">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t78" name="With Any Valid Token, Updating Password Of Each System User With ABCabc! Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:51.724" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:51.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:51.734" level="INFO">${pids} = 16398</msg>
<status status="PASS" starttime="20210729 14:20:51.719" endtime="20210729 14:20:51.734"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:51.735" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:51.735" endtime="20210729 14:20:51.735"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:51.736" level="INFO">${pids} = ['16398']</msg>
<status status="PASS" starttime="20210729 14:20:51.736" endtime="20210729 14:20:51.736"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16398</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:51.746" level="INFO">Running command 'kill 16398 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:51.736" endtime="20210729 14:20:51.748"/>
</kw>
<status status="PASS" starttime="20210729 14:20:51.736" endtime="20210729 14:20:51.748"/>
</iter>
<status status="PASS" starttime="20210729 14:20:51.736" endtime="20210729 14:20:51.748"/>
</for>
<status status="PASS" starttime="20210729 14:20:51.736" endtime="20210729 14:20:51.748"/>
</branch>
<status status="PASS" starttime="20210729 14:20:51.735" endtime="20210729 14:20:51.748"/>
</if>
<status status="PASS" starttime="20210729 14:20:51.719" endtime="20210729 14:20:51.749"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:51.750" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:51.750" endtime="20210729 14:20:51.750"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:51.751" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:51.751" endtime="20210729 14:20:51.751"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:51.751" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:51.751" endtime="20210729 14:20:51.752"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:51.752" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:51.752" endtime="20210729 14:20:51.752"/>
</kw>
<msg timestamp="20210729 14:20:51.752" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:51.751" endtime="20210729 14:20:51.752"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:51.756" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:51.752" endtime="20210729 14:20:51.757"/>
</kw>
<status status="PASS" starttime="20210729 14:20:51.749" endtime="20210729 14:20:51.757"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:51.759" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:51.758" endtime="20210729 14:20:51.763"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:53.264" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:51.763" endtime="20210729 14:20:53.264"/>
</kw>
<status status="PASS" starttime="20210729 14:20:51.758" endtime="20210729 14:20:53.264"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:53.266" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:53.265" endtime="20210729 14:20:53.266"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:53.266" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:53.266" endtime="20210729 14:20:53.266"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:53.267" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:53.266" endtime="20210729 14:20:53.267"/>
</kw>
<msg timestamp="20210729 14:20:53.267" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:53.265" endtime="20210729 14:20:53.267"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:53.268" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:53.267" endtime="20210729 14:20:53.268"/>
</kw>
<status status="PASS" starttime="20210729 14:20:53.265" endtime="20210729 14:20:53.268"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:53.269" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:53.269" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:53.269" endtime="20210729 14:20:53.269"/>
</kw>
<status status="PASS" starttime="20210729 14:20:53.268" endtime="20210729 14:20:53.269"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:53.270" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:53.270" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:53.269" endtime="20210729 14:20:53.270"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:53.270" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:53.270" endtime="20210729 14:20:53.270"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:53.271" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:53.271" endtime="20210729 14:20:53.271"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:53.271" endtime="20210729 14:20:53.272"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:53.272" endtime="20210729 14:20:53.272"/>
</kw>
<status status="PASS" starttime="20210729 14:20:53.271" endtime="20210729 14:20:53.272"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:53.272" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:53.272" endtime="20210729 14:20:53.272"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:53.273" endtime="20210729 14:20:53.273"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:53.273" endtime="20210729 14:20:53.273"/>
</kw>
<status status="PASS" starttime="20210729 14:20:53.272" endtime="20210729 14:20:53.273"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:53.274" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:53.274" endtime="20210729 14:20:53.274"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:53.274" endtime="20210729 14:20:53.274"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:53.275" endtime="20210729 14:20:53.275"/>
</kw>
<status status="PASS" starttime="20210729 14:20:53.273" endtime="20210729 14:20:53.275"/>
</iter>
<status status="PASS" starttime="20210729 14:20:53.270" endtime="20210729 14:20:53.275"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:53.275" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:53.275" endtime="20210729 14:20:53.275"/>
</kw>
<status status="PASS" starttime="20210729 14:20:53.269" endtime="20210729 14:20:53.275"/>
</kw>
<status status="PASS" starttime="20210729 14:20:51.718" endtime="20210729 14:20:53.276"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCabc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:53.277" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:53.276" endtime="20210729 14:20:53.277"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:53.277" level="INFO">${payload} = {'password': 'ABCabc!'}</msg>
<status status="PASS" starttime="20210729 14:20:53.277" endtime="20210729 14:20:53.277"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:53.286" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:53.286" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:53.277" endtime="20210729 14:20:53.286"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:53.286" endtime="20210729 14:20:53.286"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:53.287" endtime="20210729 14:20:53.287"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:53.277" endtime="20210729 14:20:53.287"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:53.277" endtime="20210729 14:20:53.287"/>
</for>
<status status="FAIL" starttime="20210729 14:20:53.276" endtime="20210729 14:20:53.287"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:53.276" endtime="20210729 14:20:53.287"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCabc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:53.288" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:53.288" endtime="20210729 14:20:53.288"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:53.289" level="INFO">${payload} = {'password': 'ABCabc!'}</msg>
<status status="PASS" starttime="20210729 14:20:53.288" endtime="20210729 14:20:53.289"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:53.293" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:53.293" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:53.289" endtime="20210729 14:20:53.293"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:53.293" endtime="20210729 14:20:53.293"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:53.293" endtime="20210729 14:20:53.293"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:53.289" endtime="20210729 14:20:53.293"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:53.289" endtime="20210729 14:20:53.293"/>
</for>
<status status="FAIL" starttime="20210729 14:20:53.287" endtime="20210729 14:20:53.293"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:53.287" endtime="20210729 14:20:53.293"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCabc!</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:53.294" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:53.294" endtime="20210729 14:20:53.294"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:53.295" level="INFO">${payload} = {'password': 'ABCabc!'}</msg>
<status status="PASS" starttime="20210729 14:20:53.294" endtime="20210729 14:20:53.295"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:53.300" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:53.300" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:53.295" endtime="20210729 14:20:53.301"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:53.301" endtime="20210729 14:20:53.301"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:53.301" endtime="20210729 14:20:53.301"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:53.295" endtime="20210729 14:20:53.301"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:53.295" endtime="20210729 14:20:53.301"/>
</for>
<status status="FAIL" starttime="20210729 14:20:53.294" endtime="20210729 14:20:53.301"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:53.293" endtime="20210729 14:20:53.301"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:53.276" endtime="20210729 14:20:53.301"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:53.307" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:53.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:53.317" level="INFO">${pids} = 16421
16428
16434</msg>
<status status="PASS" starttime="20210729 14:20:53.302" endtime="20210729 14:20:53.317"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:53.318" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:53.317" endtime="20210729 14:20:53.318"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:53.318" level="INFO">${pids} = ['16421', '16428', '16434']</msg>
<status status="PASS" starttime="20210729 14:20:53.318" endtime="20210729 14:20:53.318"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16421</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:53.322" level="INFO">Running command 'kill 16421 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:53.319" endtime="20210729 14:20:53.322"/>
</kw>
<status status="PASS" starttime="20210729 14:20:53.318" endtime="20210729 14:20:53.322"/>
</iter>
<iter>
<var name="${pid}">16428</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:53.326" level="INFO">Running command 'kill 16428 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:53.323" endtime="20210729 14:20:53.326"/>
</kw>
<status status="PASS" starttime="20210729 14:20:53.323" endtime="20210729 14:20:53.326"/>
</iter>
<iter>
<var name="${pid}">16434</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:53.332" level="INFO">Running command 'kill 16434 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:53.327" endtime="20210729 14:20:53.333"/>
</kw>
<status status="PASS" starttime="20210729 14:20:53.327" endtime="20210729 14:20:53.333"/>
</iter>
<status status="PASS" starttime="20210729 14:20:53.318" endtime="20210729 14:20:53.333"/>
</for>
<status status="PASS" starttime="20210729 14:20:53.318" endtime="20210729 14:20:53.333"/>
</branch>
<status status="PASS" starttime="20210729 14:20:53.318" endtime="20210729 14:20:53.333"/>
</if>
<status status="PASS" starttime="20210729 14:20:53.302" endtime="20210729 14:20:53.334"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCabc!'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:51.718" endtime="20210729 14:20:53.334">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t79" name="With Any Valid Token, Updating Password Of Each System User With ABCabc!? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:53.339" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:53.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:53.348" level="INFO">${pids} = 16463</msg>
<status status="PASS" starttime="20210729 14:20:53.336" endtime="20210729 14:20:53.348"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:53.349" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:53.348" endtime="20210729 14:20:53.349"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:53.349" level="INFO">${pids} = ['16463']</msg>
<status status="PASS" starttime="20210729 14:20:53.349" endtime="20210729 14:20:53.349"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16463</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:53.355" level="INFO">Running command 'kill 16463 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:53.350" endtime="20210729 14:20:53.356"/>
</kw>
<status status="PASS" starttime="20210729 14:20:53.349" endtime="20210729 14:20:53.356"/>
</iter>
<status status="PASS" starttime="20210729 14:20:53.349" endtime="20210729 14:20:53.356"/>
</for>
<status status="PASS" starttime="20210729 14:20:53.349" endtime="20210729 14:20:53.356"/>
</branch>
<status status="PASS" starttime="20210729 14:20:53.349" endtime="20210729 14:20:53.356"/>
</if>
<status status="PASS" starttime="20210729 14:20:53.336" endtime="20210729 14:20:53.356"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:53.357" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:53.357" endtime="20210729 14:20:53.357"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:53.358" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:53.358" endtime="20210729 14:20:53.358"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:53.358" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:53.358" endtime="20210729 14:20:53.358"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:53.359" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:53.358" endtime="20210729 14:20:53.359"/>
</kw>
<msg timestamp="20210729 14:20:53.359" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:53.357" endtime="20210729 14:20:53.359"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:53.362" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:53.359" endtime="20210729 14:20:53.364"/>
</kw>
<status status="PASS" starttime="20210729 14:20:53.356" endtime="20210729 14:20:53.365"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:53.366" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:53.365" endtime="20210729 14:20:53.372"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:54.874" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:53.373" endtime="20210729 14:20:54.874"/>
</kw>
<status status="PASS" starttime="20210729 14:20:53.365" endtime="20210729 14:20:54.874"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:54.875" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:54.875" endtime="20210729 14:20:54.875"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:54.875" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:54.875" endtime="20210729 14:20:54.876"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:54.876" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:54.876" endtime="20210729 14:20:54.876"/>
</kw>
<msg timestamp="20210729 14:20:54.876" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:54.875" endtime="20210729 14:20:54.876"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:54.877" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:54.876" endtime="20210729 14:20:54.877"/>
</kw>
<status status="PASS" starttime="20210729 14:20:54.874" endtime="20210729 14:20:54.877"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:54.878" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:54.878" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:54.877" endtime="20210729 14:20:54.878"/>
</kw>
<status status="PASS" starttime="20210729 14:20:54.877" endtime="20210729 14:20:54.878"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:54.879" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:54.879" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:54.878" endtime="20210729 14:20:54.879"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:54.879" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:54.879" endtime="20210729 14:20:54.879"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:54.880" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:54.879" endtime="20210729 14:20:54.880"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:54.880" endtime="20210729 14:20:54.881"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:54.881" endtime="20210729 14:20:54.881"/>
</kw>
<status status="PASS" starttime="20210729 14:20:54.879" endtime="20210729 14:20:54.881"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:54.882" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:54.882" endtime="20210729 14:20:54.882"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:54.882" endtime="20210729 14:20:54.883"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:54.883" endtime="20210729 14:20:54.883"/>
</kw>
<status status="PASS" starttime="20210729 14:20:54.881" endtime="20210729 14:20:54.883"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:54.884" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:54.883" endtime="20210729 14:20:54.884"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:54.884" endtime="20210729 14:20:54.884"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:54.884" endtime="20210729 14:20:54.885"/>
</kw>
<status status="PASS" starttime="20210729 14:20:54.883" endtime="20210729 14:20:54.885"/>
</iter>
<status status="PASS" starttime="20210729 14:20:54.879" endtime="20210729 14:20:54.885"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:54.885" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:54.885" endtime="20210729 14:20:54.885"/>
</kw>
<status status="PASS" starttime="20210729 14:20:54.878" endtime="20210729 14:20:54.885"/>
</kw>
<status status="PASS" starttime="20210729 14:20:53.336" endtime="20210729 14:20:54.885"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCabc!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:54.887" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:54.886" endtime="20210729 14:20:54.887"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:54.887" level="INFO">${payload} = {'password': 'ABCabc!?'}</msg>
<status status="PASS" starttime="20210729 14:20:54.887" endtime="20210729 14:20:54.887"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:54.896" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:54.896" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:54.888" endtime="20210729 14:20:54.896"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:54.897" endtime="20210729 14:20:54.897"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:54.897" endtime="20210729 14:20:54.897"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:54.888" endtime="20210729 14:20:54.897"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:54.887" endtime="20210729 14:20:54.897"/>
</for>
<status status="FAIL" starttime="20210729 14:20:54.886" endtime="20210729 14:20:54.897"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:54.886" endtime="20210729 14:20:54.897"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCabc!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:54.898" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:54.898" endtime="20210729 14:20:54.898"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:54.899" level="INFO">${payload} = {'password': 'ABCabc!?'}</msg>
<status status="PASS" starttime="20210729 14:20:54.898" endtime="20210729 14:20:54.899"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:54.903" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:54.904" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:54.899" endtime="20210729 14:20:54.904"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:54.904" endtime="20210729 14:20:54.904"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:54.904" endtime="20210729 14:20:54.904"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:54.899" endtime="20210729 14:20:54.904"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:54.899" endtime="20210729 14:20:54.904"/>
</for>
<status status="FAIL" starttime="20210729 14:20:54.897" endtime="20210729 14:20:54.904"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:54.897" endtime="20210729 14:20:54.904"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCabc!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:54.905" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:54.905" endtime="20210729 14:20:54.905"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:54.906" level="INFO">${payload} = {'password': 'ABCabc!?'}</msg>
<status status="PASS" starttime="20210729 14:20:54.905" endtime="20210729 14:20:54.906"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:54.910" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:54.910" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:54.906" endtime="20210729 14:20:54.910"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:54.910" endtime="20210729 14:20:54.910"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:54.910" endtime="20210729 14:20:54.910"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:54.906" endtime="20210729 14:20:54.910"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:54.906" endtime="20210729 14:20:54.910"/>
</for>
<status status="FAIL" starttime="20210729 14:20:54.904" endtime="20210729 14:20:54.910"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:54.904" endtime="20210729 14:20:54.910"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:54.886" endtime="20210729 14:20:54.911"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:54.916" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:54.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:54.925" level="INFO">${pids} = 16486
16493
16497</msg>
<status status="PASS" starttime="20210729 14:20:54.912" endtime="20210729 14:20:54.925"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:54.926" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:54.925" endtime="20210729 14:20:54.926"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:54.926" level="INFO">${pids} = ['16486', '16493', '16497']</msg>
<status status="PASS" starttime="20210729 14:20:54.926" endtime="20210729 14:20:54.926"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16486</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:54.931" level="INFO">Running command 'kill 16486 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:54.927" endtime="20210729 14:20:54.932"/>
</kw>
<status status="PASS" starttime="20210729 14:20:54.927" endtime="20210729 14:20:54.932"/>
</iter>
<iter>
<var name="${pid}">16493</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:54.938" level="INFO">Running command 'kill 16493 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:54.932" endtime="20210729 14:20:54.940"/>
</kw>
<status status="PASS" starttime="20210729 14:20:54.932" endtime="20210729 14:20:54.940"/>
</iter>
<iter>
<var name="${pid}">16497</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:54.944" level="INFO">Running command 'kill 16497 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:54.941" endtime="20210729 14:20:54.944"/>
</kw>
<status status="PASS" starttime="20210729 14:20:54.940" endtime="20210729 14:20:54.944"/>
</iter>
<status status="PASS" starttime="20210729 14:20:54.927" endtime="20210729 14:20:54.944"/>
</for>
<status status="PASS" starttime="20210729 14:20:54.926" endtime="20210729 14:20:54.944"/>
</branch>
<status status="PASS" starttime="20210729 14:20:54.926" endtime="20210729 14:20:54.944"/>
</if>
<status status="PASS" starttime="20210729 14:20:54.911" endtime="20210729 14:20:54.945"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCabc!?'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:53.335" endtime="20210729 14:20:54.945">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t80" name="With Any Valid Token, Updating Password Of Each System User With ABCabc!?ABCabc!?ABCab. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:54.950" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:54.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:54.959" level="INFO">${pids} = 16526</msg>
<status status="PASS" starttime="20210729 14:20:54.947" endtime="20210729 14:20:54.959"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:54.960" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:54.960" endtime="20210729 14:20:54.960"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:54.961" level="INFO">${pids} = ['16526']</msg>
<status status="PASS" starttime="20210729 14:20:54.961" endtime="20210729 14:20:54.961"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16526</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:54.965" level="INFO">Running command 'kill 16526 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:54.961" endtime="20210729 14:20:54.965"/>
</kw>
<status status="PASS" starttime="20210729 14:20:54.961" endtime="20210729 14:20:54.965"/>
</iter>
<status status="PASS" starttime="20210729 14:20:54.961" endtime="20210729 14:20:54.965"/>
</for>
<status status="PASS" starttime="20210729 14:20:54.961" endtime="20210729 14:20:54.965"/>
</branch>
<status status="PASS" starttime="20210729 14:20:54.960" endtime="20210729 14:20:54.965"/>
</if>
<status status="PASS" starttime="20210729 14:20:54.946" endtime="20210729 14:20:54.966"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:54.967" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:54.966" endtime="20210729 14:20:54.967"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:54.968" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:54.967" endtime="20210729 14:20:54.968"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:54.968" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:54.968" endtime="20210729 14:20:54.968"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:54.969" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:54.969" endtime="20210729 14:20:54.969"/>
</kw>
<msg timestamp="20210729 14:20:54.969" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:54.967" endtime="20210729 14:20:54.969"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:54.972" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:54.969" endtime="20210729 14:20:54.974"/>
</kw>
<status status="PASS" starttime="20210729 14:20:54.966" endtime="20210729 14:20:54.974"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:54.976" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:54.975" endtime="20210729 14:20:54.980"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:56.482" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:54.981" endtime="20210729 14:20:56.483"/>
</kw>
<status status="PASS" starttime="20210729 14:20:54.975" endtime="20210729 14:20:56.484"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:56.485" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:56.485" endtime="20210729 14:20:56.485"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:56.486" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:56.486" endtime="20210729 14:20:56.486"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:56.486" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:56.486" endtime="20210729 14:20:56.486"/>
</kw>
<msg timestamp="20210729 14:20:56.486" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:56.485" endtime="20210729 14:20:56.486"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:56.487" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:56.486" endtime="20210729 14:20:56.487"/>
</kw>
<status status="PASS" starttime="20210729 14:20:56.485" endtime="20210729 14:20:56.487"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:56.488" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:56.488" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:56.488" endtime="20210729 14:20:56.488"/>
</kw>
<status status="PASS" starttime="20210729 14:20:56.487" endtime="20210729 14:20:56.488"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:56.489" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:56.489" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:56.489" endtime="20210729 14:20:56.489"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:56.490" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:56.489" endtime="20210729 14:20:56.490"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:56.491" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:56.490" endtime="20210729 14:20:56.491"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:56.491" endtime="20210729 14:20:56.491"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:56.491" endtime="20210729 14:20:56.492"/>
</kw>
<status status="PASS" starttime="20210729 14:20:56.490" endtime="20210729 14:20:56.492"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:56.492" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:56.492" endtime="20210729 14:20:56.492"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:56.492" endtime="20210729 14:20:56.493"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:56.493" endtime="20210729 14:20:56.493"/>
</kw>
<status status="PASS" starttime="20210729 14:20:56.492" endtime="20210729 14:20:56.493"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:56.493" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:56.493" endtime="20210729 14:20:56.493"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:56.494" endtime="20210729 14:20:56.494"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:56.494" endtime="20210729 14:20:56.494"/>
</kw>
<status status="PASS" starttime="20210729 14:20:56.493" endtime="20210729 14:20:56.495"/>
</iter>
<status status="PASS" starttime="20210729 14:20:56.490" endtime="20210729 14:20:56.495"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:56.495" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:56.495" endtime="20210729 14:20:56.495"/>
</kw>
<status status="PASS" starttime="20210729 14:20:56.488" endtime="20210729 14:20:56.495"/>
</kw>
<status status="PASS" starttime="20210729 14:20:54.946" endtime="20210729 14:20:56.495"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCabc!?ABCabc!?ABCab.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:56.497" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:56.496" endtime="20210729 14:20:56.497"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:56.497" level="INFO">${payload} = {'password': 'ABCabc!?ABCabc!?ABCab.'}</msg>
<status status="PASS" starttime="20210729 14:20:56.497" endtime="20210729 14:20:56.497"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:56.506" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:56.507" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:56.497" endtime="20210729 14:20:56.507"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:56.507" endtime="20210729 14:20:56.507"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:56.507" endtime="20210729 14:20:56.507"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:56.497" endtime="20210729 14:20:56.507"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:56.497" endtime="20210729 14:20:56.507"/>
</for>
<status status="FAIL" starttime="20210729 14:20:56.496" endtime="20210729 14:20:56.507"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:56.496" endtime="20210729 14:20:56.507"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCabc!?ABCabc!?ABCab.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:56.508" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:56.508" endtime="20210729 14:20:56.508"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:56.509" level="INFO">${payload} = {'password': 'ABCabc!?ABCabc!?ABCab.'}</msg>
<status status="PASS" starttime="20210729 14:20:56.508" endtime="20210729 14:20:56.509"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:56.513" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:56.513" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:56.509" endtime="20210729 14:20:56.513"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:56.514" endtime="20210729 14:20:56.514"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:56.514" endtime="20210729 14:20:56.514"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:56.509" endtime="20210729 14:20:56.514"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:56.509" endtime="20210729 14:20:56.514"/>
</for>
<status status="FAIL" starttime="20210729 14:20:56.507" endtime="20210729 14:20:56.514"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:56.507" endtime="20210729 14:20:56.514"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABCabc!?ABCabc!?ABCab.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:56.515" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:56.515" endtime="20210729 14:20:56.515"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:56.516" level="INFO">${payload} = {'password': 'ABCabc!?ABCabc!?ABCab.'}</msg>
<status status="PASS" starttime="20210729 14:20:56.516" endtime="20210729 14:20:56.516"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:56.520" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:56.520" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:56.516" endtime="20210729 14:20:56.520"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:56.520" endtime="20210729 14:20:56.520"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:56.520" endtime="20210729 14:20:56.520"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:56.516" endtime="20210729 14:20:56.520"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:56.516" endtime="20210729 14:20:56.521"/>
</for>
<status status="FAIL" starttime="20210729 14:20:56.514" endtime="20210729 14:20:56.521"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:56.514" endtime="20210729 14:20:56.521"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:56.495" endtime="20210729 14:20:56.521"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:56.525" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:56.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:56.535" level="INFO">${pids} = 16549
16556
16567</msg>
<status status="PASS" starttime="20210729 14:20:56.522" endtime="20210729 14:20:56.535"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:56.536" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:56.536" endtime="20210729 14:20:56.536"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:56.537" level="INFO">${pids} = ['16549', '16556', '16567']</msg>
<status status="PASS" starttime="20210729 14:20:56.537" endtime="20210729 14:20:56.537"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16549</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:56.540" level="INFO">Running command 'kill 16549 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:56.537" endtime="20210729 14:20:56.541"/>
</kw>
<status status="PASS" starttime="20210729 14:20:56.537" endtime="20210729 14:20:56.541"/>
</iter>
<iter>
<var name="${pid}">16556</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:56.544" level="INFO">Running command 'kill 16556 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:56.541" endtime="20210729 14:20:56.544"/>
</kw>
<status status="PASS" starttime="20210729 14:20:56.541" endtime="20210729 14:20:56.544"/>
</iter>
<iter>
<var name="${pid}">16567</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:56.549" level="INFO">Running command 'kill 16567 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:56.545" endtime="20210729 14:20:56.549"/>
</kw>
<status status="PASS" starttime="20210729 14:20:56.544" endtime="20210729 14:20:56.549"/>
</iter>
<status status="PASS" starttime="20210729 14:20:56.537" endtime="20210729 14:20:56.549"/>
</for>
<status status="PASS" starttime="20210729 14:20:56.537" endtime="20210729 14:20:56.549"/>
</branch>
<status status="PASS" starttime="20210729 14:20:56.536" endtime="20210729 14:20:56.549"/>
</if>
<status status="PASS" starttime="20210729 14:20:56.521" endtime="20210729 14:20:56.550"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABCabc!?ABCabc!?ABCab.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:54.945" endtime="20210729 14:20:56.550">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t81" name="With Any Valid Token, Updating Password Of Each System User With abc012. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:56.557" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:56.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:56.567" level="INFO">${pids} = 16596</msg>
<status status="PASS" starttime="20210729 14:20:56.552" endtime="20210729 14:20:56.567"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:56.568" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:56.568" endtime="20210729 14:20:56.568"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:56.569" level="INFO">${pids} = ['16596']</msg>
<status status="PASS" starttime="20210729 14:20:56.569" endtime="20210729 14:20:56.569"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16596</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:56.580" level="INFO">Running command 'kill 16596 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:56.569" endtime="20210729 14:20:56.582"/>
</kw>
<status status="PASS" starttime="20210729 14:20:56.569" endtime="20210729 14:20:56.582"/>
</iter>
<status status="PASS" starttime="20210729 14:20:56.569" endtime="20210729 14:20:56.582"/>
</for>
<status status="PASS" starttime="20210729 14:20:56.569" endtime="20210729 14:20:56.582"/>
</branch>
<status status="PASS" starttime="20210729 14:20:56.568" endtime="20210729 14:20:56.582"/>
</if>
<status status="PASS" starttime="20210729 14:20:56.551" endtime="20210729 14:20:56.583"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:56.588" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:56.585" endtime="20210729 14:20:56.588"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:56.589" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:56.589" endtime="20210729 14:20:56.590"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:56.590" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:56.590" endtime="20210729 14:20:56.590"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:56.591" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:56.591" endtime="20210729 14:20:56.591"/>
</kw>
<msg timestamp="20210729 14:20:56.591" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:56.588" endtime="20210729 14:20:56.591"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:56.596" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:56.591" endtime="20210729 14:20:56.598"/>
</kw>
<status status="PASS" starttime="20210729 14:20:56.583" endtime="20210729 14:20:56.598"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:56.600" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:56.599" endtime="20210729 14:20:56.620"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:58.126" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:56.621" endtime="20210729 14:20:58.126"/>
</kw>
<status status="PASS" starttime="20210729 14:20:56.599" endtime="20210729 14:20:58.126"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:58.128" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:58.127" endtime="20210729 14:20:58.128"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:58.128" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:58.128" endtime="20210729 14:20:58.128"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:58.128" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:58.128" endtime="20210729 14:20:58.128"/>
</kw>
<msg timestamp="20210729 14:20:58.129" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:58.127" endtime="20210729 14:20:58.129"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:58.129" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:58.129" endtime="20210729 14:20:58.130"/>
</kw>
<status status="PASS" starttime="20210729 14:20:58.126" endtime="20210729 14:20:58.130"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:58.130" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:58.131" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:58.130" endtime="20210729 14:20:58.131"/>
</kw>
<status status="PASS" starttime="20210729 14:20:58.130" endtime="20210729 14:20:58.131"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:58.132" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:58.132" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:58.132" endtime="20210729 14:20:58.132"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:58.133" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:58.132" endtime="20210729 14:20:58.133"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:58.133" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:58.133" endtime="20210729 14:20:58.133"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:58.133" endtime="20210729 14:20:58.134"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:58.134" endtime="20210729 14:20:58.134"/>
</kw>
<status status="PASS" starttime="20210729 14:20:58.133" endtime="20210729 14:20:58.134"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:58.135" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:58.134" endtime="20210729 14:20:58.135"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:58.135" endtime="20210729 14:20:58.135"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:58.135" endtime="20210729 14:20:58.136"/>
</kw>
<status status="PASS" starttime="20210729 14:20:58.134" endtime="20210729 14:20:58.136"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:58.136" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:58.136" endtime="20210729 14:20:58.136"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:58.136" endtime="20210729 14:20:58.137"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:58.137" endtime="20210729 14:20:58.137"/>
</kw>
<status status="PASS" starttime="20210729 14:20:58.136" endtime="20210729 14:20:58.137"/>
</iter>
<status status="PASS" starttime="20210729 14:20:58.133" endtime="20210729 14:20:58.137"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:58.137" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:58.137" endtime="20210729 14:20:58.137"/>
</kw>
<status status="PASS" starttime="20210729 14:20:58.131" endtime="20210729 14:20:58.138"/>
</kw>
<status status="PASS" starttime="20210729 14:20:56.551" endtime="20210729 14:20:58.138"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc012.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:58.139" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:58.138" endtime="20210729 14:20:58.139"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:58.139" level="INFO">${payload} = {'password': 'abc012.'}</msg>
<status status="PASS" starttime="20210729 14:20:58.139" endtime="20210729 14:20:58.139"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:58.149" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:58.149" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:58.139" endtime="20210729 14:20:58.149"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:58.149" endtime="20210729 14:20:58.149"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:58.149" endtime="20210729 14:20:58.149"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:58.139" endtime="20210729 14:20:58.150"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:58.139" endtime="20210729 14:20:58.150"/>
</for>
<status status="FAIL" starttime="20210729 14:20:58.138" endtime="20210729 14:20:58.150"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:58.138" endtime="20210729 14:20:58.150"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc012.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:58.152" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:58.151" endtime="20210729 14:20:58.152"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:58.152" level="INFO">${payload} = {'password': 'abc012.'}</msg>
<status status="PASS" starttime="20210729 14:20:58.152" endtime="20210729 14:20:58.152"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:58.156" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:58.156" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:58.152" endtime="20210729 14:20:58.156"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:58.157" endtime="20210729 14:20:58.157"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:58.157" endtime="20210729 14:20:58.157"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:58.152" endtime="20210729 14:20:58.157"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:58.152" endtime="20210729 14:20:58.157"/>
</for>
<status status="FAIL" starttime="20210729 14:20:58.150" endtime="20210729 14:20:58.157"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:58.150" endtime="20210729 14:20:58.157"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc012.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:58.158" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:58.158" endtime="20210729 14:20:58.158"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:58.158" level="INFO">${payload} = {'password': 'abc012.'}</msg>
<status status="PASS" starttime="20210729 14:20:58.158" endtime="20210729 14:20:58.158"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:58.162" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:58.162" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:58.159" endtime="20210729 14:20:58.163"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:58.163" endtime="20210729 14:20:58.163"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:58.163" endtime="20210729 14:20:58.163"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:58.158" endtime="20210729 14:20:58.163"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:58.158" endtime="20210729 14:20:58.163"/>
</for>
<status status="FAIL" starttime="20210729 14:20:58.157" endtime="20210729 14:20:58.163"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:58.157" endtime="20210729 14:20:58.163"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:58.138" endtime="20210729 14:20:58.163"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:58.170" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:58.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:58.178" level="INFO">${pids} = 16619
16626
16631</msg>
<status status="PASS" starttime="20210729 14:20:58.164" endtime="20210729 14:20:58.178"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:58.179" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:58.179" endtime="20210729 14:20:58.180"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:58.181" level="INFO">${pids} = ['16619', '16626', '16631']</msg>
<status status="PASS" starttime="20210729 14:20:58.180" endtime="20210729 14:20:58.181"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16619</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:58.184" level="INFO">Running command 'kill 16619 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:58.181" endtime="20210729 14:20:58.185"/>
</kw>
<status status="PASS" starttime="20210729 14:20:58.181" endtime="20210729 14:20:58.185"/>
</iter>
<iter>
<var name="${pid}">16626</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:58.188" level="INFO">Running command 'kill 16626 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:58.185" endtime="20210729 14:20:58.188"/>
</kw>
<status status="PASS" starttime="20210729 14:20:58.185" endtime="20210729 14:20:58.188"/>
</iter>
<iter>
<var name="${pid}">16631</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:58.192" level="INFO">Running command 'kill 16631 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:58.189" endtime="20210729 14:20:58.193"/>
</kw>
<status status="PASS" starttime="20210729 14:20:58.188" endtime="20210729 14:20:58.193"/>
</iter>
<status status="PASS" starttime="20210729 14:20:58.181" endtime="20210729 14:20:58.193"/>
</for>
<status status="PASS" starttime="20210729 14:20:58.180" endtime="20210729 14:20:58.193"/>
</branch>
<status status="PASS" starttime="20210729 14:20:58.180" endtime="20210729 14:20:58.193"/>
</if>
<status status="PASS" starttime="20210729 14:20:58.164" endtime="20210729 14:20:58.193"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc012.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:56.550" endtime="20210729 14:20:58.193">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t82" name="With Any Valid Token, Updating Password Of Each System User With abc012!? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:58.204" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:58.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:58.213" level="INFO">${pids} = 16660</msg>
<status status="PASS" starttime="20210729 14:20:58.196" endtime="20210729 14:20:58.213"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:58.214" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:58.213" endtime="20210729 14:20:58.214"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:58.215" level="INFO">${pids} = ['16660']</msg>
<status status="PASS" starttime="20210729 14:20:58.214" endtime="20210729 14:20:58.215"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16660</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:58.228" level="INFO">Running command 'kill 16660 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:58.216" endtime="20210729 14:20:58.228"/>
</kw>
<status status="PASS" starttime="20210729 14:20:58.215" endtime="20210729 14:20:58.228"/>
</iter>
<status status="PASS" starttime="20210729 14:20:58.215" endtime="20210729 14:20:58.229"/>
</for>
<status status="PASS" starttime="20210729 14:20:58.214" endtime="20210729 14:20:58.229"/>
</branch>
<status status="PASS" starttime="20210729 14:20:58.214" endtime="20210729 14:20:58.229"/>
</if>
<status status="PASS" starttime="20210729 14:20:58.195" endtime="20210729 14:20:58.229"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:58.230" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:58.230" endtime="20210729 14:20:58.230"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:58.232" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:58.231" endtime="20210729 14:20:58.232"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:58.233" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:58.232" endtime="20210729 14:20:58.233"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:58.234" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:58.233" endtime="20210729 14:20:58.234"/>
</kw>
<msg timestamp="20210729 14:20:58.234" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:58.231" endtime="20210729 14:20:58.234"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:58.238" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:58.234" endtime="20210729 14:20:58.239"/>
</kw>
<status status="PASS" starttime="20210729 14:20:58.229" endtime="20210729 14:20:58.239"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:58.241" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:58.240" endtime="20210729 14:20:58.244"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:20:59.747" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:58.244" endtime="20210729 14:20:59.747"/>
</kw>
<status status="PASS" starttime="20210729 14:20:58.240" endtime="20210729 14:20:59.748"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:59.749" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:59.749" endtime="20210729 14:20:59.749"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:59.749" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:59.749" endtime="20210729 14:20:59.749"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:59.750" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:59.749" endtime="20210729 14:20:59.750"/>
</kw>
<msg timestamp="20210729 14:20:59.750" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:59.748" endtime="20210729 14:20:59.750"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:20:59.751" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:20:59.750" endtime="20210729 14:20:59.751"/>
</kw>
<status status="PASS" starttime="20210729 14:20:59.748" endtime="20210729 14:20:59.751"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:20:59.752" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:20:59.752" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:20:59.752" endtime="20210729 14:20:59.752"/>
</kw>
<status status="PASS" starttime="20210729 14:20:59.752" endtime="20210729 14:20:59.752"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:20:59.753" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:20:59.753" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:20:59.753" endtime="20210729 14:20:59.753"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:20:59.753" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:20:59.753" endtime="20210729 14:20:59.753"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:59.754" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:59.754" endtime="20210729 14:20:59.754"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:59.754" endtime="20210729 14:20:59.755"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:59.755" endtime="20210729 14:20:59.755"/>
</kw>
<status status="PASS" starttime="20210729 14:20:59.754" endtime="20210729 14:20:59.755"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:59.755" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:59.755" endtime="20210729 14:20:59.755"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:59.756" endtime="20210729 14:20:59.756"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:59.756" endtime="20210729 14:20:59.756"/>
</kw>
<status status="PASS" starttime="20210729 14:20:59.755" endtime="20210729 14:20:59.756"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:59.757" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:20:59.757" endtime="20210729 14:20:59.757"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:20:59.757" endtime="20210729 14:20:59.758"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:20:59.758" endtime="20210729 14:20:59.758"/>
</kw>
<status status="PASS" starttime="20210729 14:20:59.756" endtime="20210729 14:20:59.758"/>
</iter>
<status status="PASS" starttime="20210729 14:20:59.753" endtime="20210729 14:20:59.758"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:20:59.758" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:20:59.758" endtime="20210729 14:20:59.758"/>
</kw>
<status status="PASS" starttime="20210729 14:20:59.752" endtime="20210729 14:20:59.758"/>
</kw>
<status status="PASS" starttime="20210729 14:20:58.195" endtime="20210729 14:20:59.758"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc012!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:59.760" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:20:59.759" endtime="20210729 14:20:59.760"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:59.760" level="INFO">${payload} = {'password': 'abc012!?'}</msg>
<status status="PASS" starttime="20210729 14:20:59.760" endtime="20210729 14:20:59.760"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:59.770" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:59.770" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:59.760" endtime="20210729 14:20:59.770"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:59.771" endtime="20210729 14:20:59.771"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:59.771" endtime="20210729 14:20:59.771"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:59.760" endtime="20210729 14:20:59.771"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:59.760" endtime="20210729 14:20:59.771"/>
</for>
<status status="FAIL" starttime="20210729 14:20:59.759" endtime="20210729 14:20:59.771"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:59.759" endtime="20210729 14:20:59.771"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc012!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:59.772" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:20:59.772" endtime="20210729 14:20:59.772"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:59.773" level="INFO">${payload} = {'password': 'abc012!?'}</msg>
<status status="PASS" starttime="20210729 14:20:59.772" endtime="20210729 14:20:59.773"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:59.777" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:59.777" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:59.773" endtime="20210729 14:20:59.777"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:59.777" endtime="20210729 14:20:59.777"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:59.777" endtime="20210729 14:20:59.777"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:59.773" endtime="20210729 14:20:59.777"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:59.773" endtime="20210729 14:20:59.777"/>
</for>
<status status="FAIL" starttime="20210729 14:20:59.771" endtime="20210729 14:20:59.777"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:59.771" endtime="20210729 14:20:59.777"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc012!?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:59.778" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:20:59.778" endtime="20210729 14:20:59.778"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:20:59.779" level="INFO">${payload} = {'password': 'abc012!?'}</msg>
<status status="PASS" starttime="20210729 14:20:59.778" endtime="20210729 14:20:59.779"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:20:59.783" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:20:59.784" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:20:59.779" endtime="20210729 14:20:59.784"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:20:59.784" endtime="20210729 14:20:59.784"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:20:59.784" endtime="20210729 14:20:59.784"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:59.779" endtime="20210729 14:20:59.784"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:59.779" endtime="20210729 14:20:59.784"/>
</for>
<status status="FAIL" starttime="20210729 14:20:59.777" endtime="20210729 14:20:59.784"/>
</kw>
<status status="FAIL" starttime="20210729 14:20:59.777" endtime="20210729 14:20:59.785"/>
</iter>
<status status="FAIL" starttime="20210729 14:20:59.759" endtime="20210729 14:20:59.785"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:59.790" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:59.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:59.799" level="INFO">${pids} = 16683
16690
16694</msg>
<status status="PASS" starttime="20210729 14:20:59.786" endtime="20210729 14:20:59.799"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:59.800" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:59.800" endtime="20210729 14:20:59.800"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:59.801" level="INFO">${pids} = ['16683', '16690', '16694']</msg>
<status status="PASS" starttime="20210729 14:20:59.801" endtime="20210729 14:20:59.801"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16683</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:59.804" level="INFO">Running command 'kill 16683 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:59.801" endtime="20210729 14:20:59.804"/>
</kw>
<status status="PASS" starttime="20210729 14:20:59.801" endtime="20210729 14:20:59.804"/>
</iter>
<iter>
<var name="${pid}">16690</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:59.807" level="INFO">Running command 'kill 16690 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:59.805" endtime="20210729 14:20:59.808"/>
</kw>
<status status="PASS" starttime="20210729 14:20:59.805" endtime="20210729 14:20:59.808"/>
</iter>
<iter>
<var name="${pid}">16694</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:59.811" level="INFO">Running command 'kill 16694 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:59.808" endtime="20210729 14:20:59.812"/>
</kw>
<status status="PASS" starttime="20210729 14:20:59.808" endtime="20210729 14:20:59.812"/>
</iter>
<status status="PASS" starttime="20210729 14:20:59.801" endtime="20210729 14:20:59.812"/>
</for>
<status status="PASS" starttime="20210729 14:20:59.800" endtime="20210729 14:20:59.812"/>
</branch>
<status status="PASS" starttime="20210729 14:20:59.800" endtime="20210729 14:20:59.812"/>
</if>
<status status="PASS" starttime="20210729 14:20:59.785" endtime="20210729 14:20:59.812"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc012!?'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:58.194" endtime="20210729 14:20:59.812">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t83" name="With Any Valid Token, Updating Password Of Each System User With abc012!?abc012!?abc012 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:20:59.819" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:20:59.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:20:59.831" level="INFO">${pids} = 16723</msg>
<status status="PASS" starttime="20210729 14:20:59.815" endtime="20210729 14:20:59.831"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:59.832" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:20:59.832" endtime="20210729 14:20:59.832"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:20:59.833" level="INFO">${pids} = ['16723']</msg>
<status status="PASS" starttime="20210729 14:20:59.833" endtime="20210729 14:20:59.833"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16723</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:59.842" level="INFO">Running command 'kill 16723 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:59.835" endtime="20210729 14:20:59.842"/>
</kw>
<status status="PASS" starttime="20210729 14:20:59.835" endtime="20210729 14:20:59.842"/>
</iter>
<status status="PASS" starttime="20210729 14:20:59.835" endtime="20210729 14:20:59.842"/>
</for>
<status status="PASS" starttime="20210729 14:20:59.833" endtime="20210729 14:20:59.842"/>
</branch>
<status status="PASS" starttime="20210729 14:20:59.832" endtime="20210729 14:20:59.842"/>
</if>
<status status="PASS" starttime="20210729 14:20:59.814" endtime="20210729 14:20:59.843"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:59.844" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:59.844" endtime="20210729 14:20:59.844"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:59.845" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:20:59.845" endtime="20210729 14:20:59.845"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:20:59.845" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:20:59.845" endtime="20210729 14:20:59.845"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:20:59.846" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:59.846" endtime="20210729 14:20:59.846"/>
</kw>
<msg timestamp="20210729 14:20:59.846" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:20:59.844" endtime="20210729 14:20:59.846"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:20:59.850" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:20:59.846" endtime="20210729 14:20:59.852"/>
</kw>
<status status="PASS" starttime="20210729 14:20:59.843" endtime="20210729 14:20:59.852"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:20:59.853" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:20:59.853" endtime="20210729 14:20:59.857"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:21:01.359" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:20:59.858" endtime="20210729 14:21:01.359"/>
</kw>
<status status="PASS" starttime="20210729 14:20:59.852" endtime="20210729 14:21:01.359"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:01.360" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:01.360" endtime="20210729 14:21:01.361"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:01.361" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:01.361" endtime="20210729 14:21:01.361"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:01.361" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:01.361" endtime="20210729 14:21:01.361"/>
</kw>
<msg timestamp="20210729 14:21:01.361" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:01.360" endtime="20210729 14:21:01.361"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:21:01.362" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:21:01.362" endtime="20210729 14:21:01.362"/>
</kw>
<status status="PASS" starttime="20210729 14:21:01.359" endtime="20210729 14:21:01.362"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:21:01.363" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:21:01.363" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:21:01.363" endtime="20210729 14:21:01.363"/>
</kw>
<status status="PASS" starttime="20210729 14:21:01.362" endtime="20210729 14:21:01.363"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:21:01.364" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:21:01.364" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:21:01.364" endtime="20210729 14:21:01.364"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:21:01.365" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:21:01.364" endtime="20210729 14:21:01.365"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:01.365" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:01.365" endtime="20210729 14:21:01.365"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:01.365" endtime="20210729 14:21:01.367"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:01.367" endtime="20210729 14:21:01.367"/>
</kw>
<status status="PASS" starttime="20210729 14:21:01.365" endtime="20210729 14:21:01.367"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:01.368" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:01.368" endtime="20210729 14:21:01.368"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:01.368" endtime="20210729 14:21:01.369"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:01.369" endtime="20210729 14:21:01.369"/>
</kw>
<status status="PASS" starttime="20210729 14:21:01.368" endtime="20210729 14:21:01.369"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:01.369" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:01.369" endtime="20210729 14:21:01.370"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:01.370" endtime="20210729 14:21:01.370"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:01.370" endtime="20210729 14:21:01.371"/>
</kw>
<status status="PASS" starttime="20210729 14:21:01.369" endtime="20210729 14:21:01.371"/>
</iter>
<status status="PASS" starttime="20210729 14:21:01.365" endtime="20210729 14:21:01.371"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:21:01.371" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:21:01.371" endtime="20210729 14:21:01.371"/>
</kw>
<status status="PASS" starttime="20210729 14:21:01.363" endtime="20210729 14:21:01.371"/>
</kw>
<status status="PASS" starttime="20210729 14:20:59.814" endtime="20210729 14:21:01.371"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc012!?abc012!?abc012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:01.373" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:21:01.372" endtime="20210729 14:21:01.373"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:01.373" level="INFO">${payload} = {'password': 'abc012!?abc012!?abc012'}</msg>
<status status="PASS" starttime="20210729 14:21:01.373" endtime="20210729 14:21:01.373"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:01.382" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:01.383" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:01.373" endtime="20210729 14:21:01.383"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:01.383" endtime="20210729 14:21:01.383"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:01.383" endtime="20210729 14:21:01.383"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:01.373" endtime="20210729 14:21:01.383"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:01.373" endtime="20210729 14:21:01.383"/>
</for>
<status status="FAIL" starttime="20210729 14:21:01.372" endtime="20210729 14:21:01.384"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:01.372" endtime="20210729 14:21:01.384"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc012!?abc012!?abc012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:01.385" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:21:01.384" endtime="20210729 14:21:01.385"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:01.385" level="INFO">${payload} = {'password': 'abc012!?abc012!?abc012'}</msg>
<status status="PASS" starttime="20210729 14:21:01.385" endtime="20210729 14:21:01.385"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:01.389" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:01.389" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:01.385" endtime="20210729 14:21:01.389"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:01.389" endtime="20210729 14:21:01.389"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:01.390" endtime="20210729 14:21:01.390"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:01.385" endtime="20210729 14:21:01.390"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:01.385" endtime="20210729 14:21:01.390"/>
</for>
<status status="FAIL" starttime="20210729 14:21:01.384" endtime="20210729 14:21:01.390"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:01.384" endtime="20210729 14:21:01.390"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc012!?abc012!?abc012</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:01.391" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:21:01.391" endtime="20210729 14:21:01.391"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:01.391" level="INFO">${payload} = {'password': 'abc012!?abc012!?abc012'}</msg>
<status status="PASS" starttime="20210729 14:21:01.391" endtime="20210729 14:21:01.391"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:01.395" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:01.395" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:01.392" endtime="20210729 14:21:01.395"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:01.396" endtime="20210729 14:21:01.396"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:01.396" endtime="20210729 14:21:01.396"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:01.392" endtime="20210729 14:21:01.396"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:01.391" endtime="20210729 14:21:01.396"/>
</for>
<status status="FAIL" starttime="20210729 14:21:01.390" endtime="20210729 14:21:01.396"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:01.390" endtime="20210729 14:21:01.396"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:01.372" endtime="20210729 14:21:01.396"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:01.401" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:01.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:01.411" level="INFO">${pids} = 16746
16753
16763</msg>
<status status="PASS" starttime="20210729 14:21:01.397" endtime="20210729 14:21:01.411"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:01.412" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:01.411" endtime="20210729 14:21:01.412"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:01.413" level="INFO">${pids} = ['16746', '16753', '16763']</msg>
<status status="PASS" starttime="20210729 14:21:01.412" endtime="20210729 14:21:01.413"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16746</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:01.417" level="INFO">Running command 'kill 16746 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:01.413" endtime="20210729 14:21:01.417"/>
</kw>
<status status="PASS" starttime="20210729 14:21:01.413" endtime="20210729 14:21:01.417"/>
</iter>
<iter>
<var name="${pid}">16753</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:01.420" level="INFO">Running command 'kill 16753 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:01.418" endtime="20210729 14:21:01.421"/>
</kw>
<status status="PASS" starttime="20210729 14:21:01.417" endtime="20210729 14:21:01.421"/>
</iter>
<iter>
<var name="${pid}">16763</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:01.424" level="INFO">Running command 'kill 16763 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:01.421" endtime="20210729 14:21:01.425"/>
</kw>
<status status="PASS" starttime="20210729 14:21:01.421" endtime="20210729 14:21:01.425"/>
</iter>
<status status="PASS" starttime="20210729 14:21:01.413" endtime="20210729 14:21:01.425"/>
</for>
<status status="PASS" starttime="20210729 14:21:01.412" endtime="20210729 14:21:01.425"/>
</branch>
<status status="PASS" starttime="20210729 14:21:01.412" endtime="20210729 14:21:01.425"/>
</if>
<status status="PASS" starttime="20210729 14:21:01.396" endtime="20210729 14:21:01.425"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc012!?abc012!?abc012'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:20:59.813" endtime="20210729 14:21:01.425">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t84" name="With Any Valid Token, Updating Password Of Each System User With abc!?.Z Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:01.430" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:01.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:01.443" level="INFO">${pids} = 16792</msg>
<status status="PASS" starttime="20210729 14:21:01.427" endtime="20210729 14:21:01.443"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:01.444" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:01.444" endtime="20210729 14:21:01.444"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:01.445" level="INFO">${pids} = ['16792']</msg>
<status status="PASS" starttime="20210729 14:21:01.445" endtime="20210729 14:21:01.445"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16792</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:01.451" level="INFO">Running command 'kill 16792 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:01.445" endtime="20210729 14:21:01.452"/>
</kw>
<status status="PASS" starttime="20210729 14:21:01.445" endtime="20210729 14:21:01.452"/>
</iter>
<status status="PASS" starttime="20210729 14:21:01.445" endtime="20210729 14:21:01.452"/>
</for>
<status status="PASS" starttime="20210729 14:21:01.445" endtime="20210729 14:21:01.452"/>
</branch>
<status status="PASS" starttime="20210729 14:21:01.444" endtime="20210729 14:21:01.452"/>
</if>
<status status="PASS" starttime="20210729 14:21:01.427" endtime="20210729 14:21:01.452"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:01.453" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:01.453" endtime="20210729 14:21:01.453"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:01.454" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:01.454" endtime="20210729 14:21:01.454"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:01.454" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:01.454" endtime="20210729 14:21:01.454"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:01.455" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:01.454" endtime="20210729 14:21:01.455"/>
</kw>
<msg timestamp="20210729 14:21:01.455" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:01.453" endtime="20210729 14:21:01.455"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:01.462" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:01.455" endtime="20210729 14:21:01.465"/>
</kw>
<status status="PASS" starttime="20210729 14:21:01.452" endtime="20210729 14:21:01.465"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:21:01.467" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:21:01.466" endtime="20210729 14:21:01.472"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:21:02.973" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:21:01.472" endtime="20210729 14:21:02.973"/>
</kw>
<status status="PASS" starttime="20210729 14:21:01.465" endtime="20210729 14:21:02.974"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:02.975" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:02.975" endtime="20210729 14:21:02.975"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:02.976" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:02.976" endtime="20210729 14:21:02.976"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:02.976" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:02.976" endtime="20210729 14:21:02.976"/>
</kw>
<msg timestamp="20210729 14:21:02.976" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:02.975" endtime="20210729 14:21:02.976"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:21:02.977" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:21:02.977" endtime="20210729 14:21:02.977"/>
</kw>
<status status="PASS" starttime="20210729 14:21:02.974" endtime="20210729 14:21:02.977"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:21:02.978" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:21:02.978" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:21:02.978" endtime="20210729 14:21:02.978"/>
</kw>
<status status="PASS" starttime="20210729 14:21:02.977" endtime="20210729 14:21:02.978"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:21:02.979" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:21:02.979" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:21:02.978" endtime="20210729 14:21:02.979"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:21:02.979" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:21:02.979" endtime="20210729 14:21:02.979"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:02.980" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:02.979" endtime="20210729 14:21:02.980"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:02.980" endtime="20210729 14:21:02.981"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:02.981" endtime="20210729 14:21:02.981"/>
</kw>
<status status="PASS" starttime="20210729 14:21:02.979" endtime="20210729 14:21:02.981"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:02.982" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:02.982" endtime="20210729 14:21:02.982"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:02.982" endtime="20210729 14:21:02.983"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:02.983" endtime="20210729 14:21:02.983"/>
</kw>
<status status="PASS" starttime="20210729 14:21:02.981" endtime="20210729 14:21:02.983"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:02.983" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:02.983" endtime="20210729 14:21:02.983"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:02.983" endtime="20210729 14:21:02.984"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:02.984" endtime="20210729 14:21:02.984"/>
</kw>
<status status="PASS" starttime="20210729 14:21:02.983" endtime="20210729 14:21:02.984"/>
</iter>
<status status="PASS" starttime="20210729 14:21:02.979" endtime="20210729 14:21:02.984"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:21:02.985" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:21:02.985" endtime="20210729 14:21:02.985"/>
</kw>
<status status="PASS" starttime="20210729 14:21:02.978" endtime="20210729 14:21:02.985"/>
</kw>
<status status="PASS" starttime="20210729 14:21:01.426" endtime="20210729 14:21:02.985"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc!?.Z</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:02.986" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:21:02.986" endtime="20210729 14:21:02.986"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:02.987" level="INFO">${payload} = {'password': 'abc!?.Z'}</msg>
<status status="PASS" starttime="20210729 14:21:02.987" endtime="20210729 14:21:02.987"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:02.997" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:02.997" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:02.987" endtime="20210729 14:21:02.997"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:02.997" endtime="20210729 14:21:02.997"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:02.997" endtime="20210729 14:21:02.997"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:02.987" endtime="20210729 14:21:02.997"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:02.987" endtime="20210729 14:21:02.998"/>
</for>
<status status="FAIL" starttime="20210729 14:21:02.986" endtime="20210729 14:21:02.998"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:02.986" endtime="20210729 14:21:02.998"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc!?.Z</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:02.999" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:21:02.999" endtime="20210729 14:21:02.999"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:02.999" level="INFO">${payload} = {'password': 'abc!?.Z'}</msg>
<status status="PASS" starttime="20210729 14:21:02.999" endtime="20210729 14:21:02.999"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:03.004" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:03.004" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:03.000" endtime="20210729 14:21:03.004"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:03.004" endtime="20210729 14:21:03.004"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:03.004" endtime="20210729 14:21:03.004"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:03.000" endtime="20210729 14:21:03.004"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:02.999" endtime="20210729 14:21:03.004"/>
</for>
<status status="FAIL" starttime="20210729 14:21:02.998" endtime="20210729 14:21:03.005"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:02.998" endtime="20210729 14:21:03.005"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc!?.Z</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:03.006" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:21:03.005" endtime="20210729 14:21:03.006"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:03.006" level="INFO">${payload} = {'password': 'abc!?.Z'}</msg>
<status status="PASS" starttime="20210729 14:21:03.006" endtime="20210729 14:21:03.006"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:03.010" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:03.010" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:03.006" endtime="20210729 14:21:03.010"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:03.010" endtime="20210729 14:21:03.010"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:03.010" endtime="20210729 14:21:03.011"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:03.006" endtime="20210729 14:21:03.011"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:03.006" endtime="20210729 14:21:03.011"/>
</for>
<status status="FAIL" starttime="20210729 14:21:03.005" endtime="20210729 14:21:03.011"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:03.005" endtime="20210729 14:21:03.011"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:02.985" endtime="20210729 14:21:03.011"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:03.018" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:03.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:03.027" level="INFO">${pids} = 16815
16822
16827</msg>
<status status="PASS" starttime="20210729 14:21:03.012" endtime="20210729 14:21:03.027"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:03.028" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:03.027" endtime="20210729 14:21:03.028"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:03.028" level="INFO">${pids} = ['16815', '16822', '16827']</msg>
<status status="PASS" starttime="20210729 14:21:03.028" endtime="20210729 14:21:03.028"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16815</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:03.033" level="INFO">Running command 'kill 16815 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:03.029" endtime="20210729 14:21:03.034"/>
</kw>
<status status="PASS" starttime="20210729 14:21:03.029" endtime="20210729 14:21:03.034"/>
</iter>
<iter>
<var name="${pid}">16822</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:03.039" level="INFO">Running command 'kill 16822 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:03.035" endtime="20210729 14:21:03.040"/>
</kw>
<status status="PASS" starttime="20210729 14:21:03.034" endtime="20210729 14:21:03.040"/>
</iter>
<iter>
<var name="${pid}">16827</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:03.044" level="INFO">Running command 'kill 16827 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:03.040" endtime="20210729 14:21:03.045"/>
</kw>
<status status="PASS" starttime="20210729 14:21:03.040" endtime="20210729 14:21:03.045"/>
</iter>
<status status="PASS" starttime="20210729 14:21:03.029" endtime="20210729 14:21:03.045"/>
</for>
<status status="PASS" starttime="20210729 14:21:03.028" endtime="20210729 14:21:03.045"/>
</branch>
<status status="PASS" starttime="20210729 14:21:03.028" endtime="20210729 14:21:03.045"/>
</if>
<status status="PASS" starttime="20210729 14:21:03.011" endtime="20210729 14:21:03.045"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc!?.Z'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:21:01.426" endtime="20210729 14:21:03.045">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t85" name="With Any Valid Token, Updating Password Of Each System User With abc!?.ZA Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:03.053" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:03.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:03.062" level="INFO">${pids} = 16856</msg>
<status status="PASS" starttime="20210729 14:21:03.049" endtime="20210729 14:21:03.062"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:03.062" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:03.062" endtime="20210729 14:21:03.063"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:03.063" level="INFO">${pids} = ['16856']</msg>
<status status="PASS" starttime="20210729 14:21:03.063" endtime="20210729 14:21:03.064"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16856</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:03.067" level="INFO">Running command 'kill 16856 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:03.064" endtime="20210729 14:21:03.068"/>
</kw>
<status status="PASS" starttime="20210729 14:21:03.064" endtime="20210729 14:21:03.068"/>
</iter>
<status status="PASS" starttime="20210729 14:21:03.064" endtime="20210729 14:21:03.068"/>
</for>
<status status="PASS" starttime="20210729 14:21:03.063" endtime="20210729 14:21:03.068"/>
</branch>
<status status="PASS" starttime="20210729 14:21:03.063" endtime="20210729 14:21:03.068"/>
</if>
<status status="PASS" starttime="20210729 14:21:03.049" endtime="20210729 14:21:03.068"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:03.069" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:03.069" endtime="20210729 14:21:03.069"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:03.070" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:03.070" endtime="20210729 14:21:03.070"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:03.070" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:03.070" endtime="20210729 14:21:03.070"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:03.071" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:03.071" endtime="20210729 14:21:03.071"/>
</kw>
<msg timestamp="20210729 14:21:03.071" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:03.069" endtime="20210729 14:21:03.071"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:03.076" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:03.071" endtime="20210729 14:21:03.082"/>
</kw>
<status status="PASS" starttime="20210729 14:21:03.069" endtime="20210729 14:21:03.082"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:21:03.083" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:21:03.083" endtime="20210729 14:21:03.088"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:21:04.589" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:21:03.088" endtime="20210729 14:21:04.590"/>
</kw>
<status status="PASS" starttime="20210729 14:21:03.082" endtime="20210729 14:21:04.590"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:04.591" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:04.591" endtime="20210729 14:21:04.591"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:04.592" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:04.591" endtime="20210729 14:21:04.592"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:04.592" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:04.592" endtime="20210729 14:21:04.592"/>
</kw>
<msg timestamp="20210729 14:21:04.592" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:04.591" endtime="20210729 14:21:04.592"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:21:04.593" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:21:04.592" endtime="20210729 14:21:04.593"/>
</kw>
<status status="PASS" starttime="20210729 14:21:04.590" endtime="20210729 14:21:04.593"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:21:04.594" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:21:04.594" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:21:04.593" endtime="20210729 14:21:04.594"/>
</kw>
<status status="PASS" starttime="20210729 14:21:04.593" endtime="20210729 14:21:04.594"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:21:04.595" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:21:04.595" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:21:04.594" endtime="20210729 14:21:04.595"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:21:04.595" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:21:04.595" endtime="20210729 14:21:04.595"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:04.596" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:04.596" endtime="20210729 14:21:04.596"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:04.596" endtime="20210729 14:21:04.597"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:04.597" endtime="20210729 14:21:04.601"/>
</kw>
<status status="PASS" starttime="20210729 14:21:04.596" endtime="20210729 14:21:04.601"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:04.601" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:04.601" endtime="20210729 14:21:04.602"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:04.602" endtime="20210729 14:21:04.603"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:04.603" endtime="20210729 14:21:04.604"/>
</kw>
<status status="PASS" starttime="20210729 14:21:04.601" endtime="20210729 14:21:04.604"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:04.605" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:04.605" endtime="20210729 14:21:04.605"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:04.605" endtime="20210729 14:21:04.606"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:04.606" endtime="20210729 14:21:04.606"/>
</kw>
<status status="PASS" starttime="20210729 14:21:04.604" endtime="20210729 14:21:04.606"/>
</iter>
<status status="PASS" starttime="20210729 14:21:04.595" endtime="20210729 14:21:04.606"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:21:04.607" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:21:04.606" endtime="20210729 14:21:04.607"/>
</kw>
<status status="PASS" starttime="20210729 14:21:04.594" endtime="20210729 14:21:04.607"/>
</kw>
<status status="PASS" starttime="20210729 14:21:03.048" endtime="20210729 14:21:04.607"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc!?.ZA</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:04.608" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:21:04.608" endtime="20210729 14:21:04.608"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:04.608" level="INFO">${payload} = {'password': 'abc!?.ZA'}</msg>
<status status="PASS" starttime="20210729 14:21:04.608" endtime="20210729 14:21:04.608"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:04.618" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:04.618" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:04.609" endtime="20210729 14:21:04.618"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:04.618" endtime="20210729 14:21:04.618"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:04.618" endtime="20210729 14:21:04.618"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:04.608" endtime="20210729 14:21:04.618"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:04.608" endtime="20210729 14:21:04.618"/>
</for>
<status status="FAIL" starttime="20210729 14:21:04.607" endtime="20210729 14:21:04.619"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:04.607" endtime="20210729 14:21:04.619"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc!?.ZA</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:04.620" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:21:04.619" endtime="20210729 14:21:04.620"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:04.620" level="INFO">${payload} = {'password': 'abc!?.ZA'}</msg>
<status status="PASS" starttime="20210729 14:21:04.620" endtime="20210729 14:21:04.620"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:04.624" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:04.625" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:04.621" endtime="20210729 14:21:04.625"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:04.625" endtime="20210729 14:21:04.625"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:04.625" endtime="20210729 14:21:04.625"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:04.621" endtime="20210729 14:21:04.625"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:04.620" endtime="20210729 14:21:04.625"/>
</for>
<status status="FAIL" starttime="20210729 14:21:04.619" endtime="20210729 14:21:04.625"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:04.619" endtime="20210729 14:21:04.625"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc!?.ZA</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:04.626" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:21:04.626" endtime="20210729 14:21:04.626"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:04.627" level="INFO">${payload} = {'password': 'abc!?.ZA'}</msg>
<status status="PASS" starttime="20210729 14:21:04.626" endtime="20210729 14:21:04.627"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:04.631" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:04.631" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:04.627" endtime="20210729 14:21:04.631"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:04.631" endtime="20210729 14:21:04.632"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:04.632" endtime="20210729 14:21:04.632"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:04.627" endtime="20210729 14:21:04.632"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:04.627" endtime="20210729 14:21:04.632"/>
</for>
<status status="FAIL" starttime="20210729 14:21:04.625" endtime="20210729 14:21:04.632"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:04.625" endtime="20210729 14:21:04.632"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:04.607" endtime="20210729 14:21:04.632"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:04.640" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:04.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:04.649" level="INFO">${pids} = 16879
16886
16891</msg>
<status status="PASS" starttime="20210729 14:21:04.633" endtime="20210729 14:21:04.649"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:04.649" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:04.649" endtime="20210729 14:21:04.649"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:04.650" level="INFO">${pids} = ['16879', '16886', '16891']</msg>
<status status="PASS" starttime="20210729 14:21:04.650" endtime="20210729 14:21:04.650"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16879</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:04.654" level="INFO">Running command 'kill 16879 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:04.650" endtime="20210729 14:21:04.654"/>
</kw>
<status status="PASS" starttime="20210729 14:21:04.650" endtime="20210729 14:21:04.654"/>
</iter>
<iter>
<var name="${pid}">16886</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:04.657" level="INFO">Running command 'kill 16886 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:04.654" endtime="20210729 14:21:04.659"/>
</kw>
<status status="PASS" starttime="20210729 14:21:04.654" endtime="20210729 14:21:04.659"/>
</iter>
<iter>
<var name="${pid}">16891</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:04.662" level="INFO">Running command 'kill 16891 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:04.659" endtime="20210729 14:21:04.663"/>
</kw>
<status status="PASS" starttime="20210729 14:21:04.659" endtime="20210729 14:21:04.663"/>
</iter>
<status status="PASS" starttime="20210729 14:21:04.650" endtime="20210729 14:21:04.663"/>
</for>
<status status="PASS" starttime="20210729 14:21:04.650" endtime="20210729 14:21:04.663"/>
</branch>
<status status="PASS" starttime="20210729 14:21:04.650" endtime="20210729 14:21:04.663"/>
</if>
<status status="PASS" starttime="20210729 14:21:04.633" endtime="20210729 14:21:04.663"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc!?.ZA'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:21:03.046" endtime="20210729 14:21:04.664">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t86" name="With Any Valid Token, Updating Password Of Each System User With abc!?.ZAabc!?.ZAabc!?. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:04.672" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:04.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:04.681" level="INFO">${pids} = 16920</msg>
<status status="PASS" starttime="20210729 14:21:04.668" endtime="20210729 14:21:04.681"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:04.682" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:04.681" endtime="20210729 14:21:04.682"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:04.683" level="INFO">${pids} = ['16920']</msg>
<status status="PASS" starttime="20210729 14:21:04.683" endtime="20210729 14:21:04.683"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16920</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:04.686" level="INFO">Running command 'kill 16920 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:04.683" endtime="20210729 14:21:04.687"/>
</kw>
<status status="PASS" starttime="20210729 14:21:04.683" endtime="20210729 14:21:04.687"/>
</iter>
<status status="PASS" starttime="20210729 14:21:04.683" endtime="20210729 14:21:04.687"/>
</for>
<status status="PASS" starttime="20210729 14:21:04.682" endtime="20210729 14:21:04.687"/>
</branch>
<status status="PASS" starttime="20210729 14:21:04.682" endtime="20210729 14:21:04.687"/>
</if>
<status status="PASS" starttime="20210729 14:21:04.668" endtime="20210729 14:21:04.687"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:04.688" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:04.688" endtime="20210729 14:21:04.688"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:04.689" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:04.689" endtime="20210729 14:21:04.689"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:04.689" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:04.689" endtime="20210729 14:21:04.689"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:04.690" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:04.690" endtime="20210729 14:21:04.690"/>
</kw>
<msg timestamp="20210729 14:21:04.690" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:04.688" endtime="20210729 14:21:04.690"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:04.694" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:04.690" endtime="20210729 14:21:04.699"/>
</kw>
<status status="PASS" starttime="20210729 14:21:04.688" endtime="20210729 14:21:04.700"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:21:04.701" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:21:04.701" endtime="20210729 14:21:04.705"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:21:06.216" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:21:04.706" endtime="20210729 14:21:06.216"/>
</kw>
<status status="PASS" starttime="20210729 14:21:04.700" endtime="20210729 14:21:06.216"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:06.217" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:06.217" endtime="20210729 14:21:06.217"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:06.218" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:06.218" endtime="20210729 14:21:06.218"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:06.218" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:06.218" endtime="20210729 14:21:06.218"/>
</kw>
<msg timestamp="20210729 14:21:06.218" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:06.217" endtime="20210729 14:21:06.218"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:21:06.219" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:21:06.219" endtime="20210729 14:21:06.219"/>
</kw>
<status status="PASS" starttime="20210729 14:21:06.217" endtime="20210729 14:21:06.219"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:21:06.220" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:21:06.220" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:21:06.220" endtime="20210729 14:21:06.220"/>
</kw>
<status status="PASS" starttime="20210729 14:21:06.220" endtime="20210729 14:21:06.220"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:21:06.221" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:21:06.221" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:21:06.221" endtime="20210729 14:21:06.221"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:21:06.222" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:21:06.221" endtime="20210729 14:21:06.222"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:06.222" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:06.222" endtime="20210729 14:21:06.222"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:06.222" endtime="20210729 14:21:06.223"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:06.223" endtime="20210729 14:21:06.223"/>
</kw>
<status status="PASS" starttime="20210729 14:21:06.222" endtime="20210729 14:21:06.223"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:06.224" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:06.223" endtime="20210729 14:21:06.224"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:06.224" endtime="20210729 14:21:06.224"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:06.224" endtime="20210729 14:21:06.225"/>
</kw>
<status status="PASS" starttime="20210729 14:21:06.223" endtime="20210729 14:21:06.225"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:06.225" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:06.225" endtime="20210729 14:21:06.225"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:06.225" endtime="20210729 14:21:06.226"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:06.226" endtime="20210729 14:21:06.226"/>
</kw>
<status status="PASS" starttime="20210729 14:21:06.225" endtime="20210729 14:21:06.226"/>
</iter>
<status status="PASS" starttime="20210729 14:21:06.222" endtime="20210729 14:21:06.226"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:21:06.226" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:21:06.226" endtime="20210729 14:21:06.227"/>
</kw>
<status status="PASS" starttime="20210729 14:21:06.220" endtime="20210729 14:21:06.227"/>
</kw>
<status status="PASS" starttime="20210729 14:21:04.667" endtime="20210729 14:21:06.227"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc!?.ZAabc!?.ZAabc!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:06.228" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:21:06.228" endtime="20210729 14:21:06.228"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:06.228" level="INFO">${payload} = {'password': 'abc!?.ZAabc!?.ZAabc!?.'}</msg>
<status status="PASS" starttime="20210729 14:21:06.228" endtime="20210729 14:21:06.228"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:06.238" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:06.238" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:06.229" endtime="20210729 14:21:06.238"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:06.238" endtime="20210729 14:21:06.239"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:06.239" endtime="20210729 14:21:06.239"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:06.229" endtime="20210729 14:21:06.239"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:06.228" endtime="20210729 14:21:06.239"/>
</for>
<status status="FAIL" starttime="20210729 14:21:06.227" endtime="20210729 14:21:06.239"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:06.227" endtime="20210729 14:21:06.239"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc!?.ZAabc!?.ZAabc!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:06.240" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:21:06.240" endtime="20210729 14:21:06.240"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:06.241" level="INFO">${payload} = {'password': 'abc!?.ZAabc!?.ZAabc!?.'}</msg>
<status status="PASS" starttime="20210729 14:21:06.240" endtime="20210729 14:21:06.241"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:06.244" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:06.245" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:06.241" endtime="20210729 14:21:06.245"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:06.245" endtime="20210729 14:21:06.245"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:06.245" endtime="20210729 14:21:06.245"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:06.241" endtime="20210729 14:21:06.245"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:06.241" endtime="20210729 14:21:06.245"/>
</for>
<status status="FAIL" starttime="20210729 14:21:06.239" endtime="20210729 14:21:06.245"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:06.239" endtime="20210729 14:21:06.245"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc!?.ZAabc!?.ZAabc!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:06.246" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:21:06.246" endtime="20210729 14:21:06.246"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:06.247" level="INFO">${payload} = {'password': 'abc!?.ZAabc!?.ZAabc!?.'}</msg>
<status status="PASS" starttime="20210729 14:21:06.246" endtime="20210729 14:21:06.247"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:06.251" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:06.251" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:06.247" endtime="20210729 14:21:06.251"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:06.252" endtime="20210729 14:21:06.252"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:06.252" endtime="20210729 14:21:06.252"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:06.247" endtime="20210729 14:21:06.252"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:06.247" endtime="20210729 14:21:06.252"/>
</for>
<status status="FAIL" starttime="20210729 14:21:06.245" endtime="20210729 14:21:06.252"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:06.245" endtime="20210729 14:21:06.252"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:06.227" endtime="20210729 14:21:06.252"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:06.275" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:06.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:06.284" level="INFO">${pids} = 16943
16950
16960</msg>
<status status="PASS" starttime="20210729 14:21:06.271" endtime="20210729 14:21:06.284"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:06.285" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:06.285" endtime="20210729 14:21:06.285"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:06.286" level="INFO">${pids} = ['16943', '16950', '16960']</msg>
<status status="PASS" starttime="20210729 14:21:06.286" endtime="20210729 14:21:06.286"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16943</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:06.289" level="INFO">Running command 'kill 16943 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:06.286" endtime="20210729 14:21:06.290"/>
</kw>
<status status="PASS" starttime="20210729 14:21:06.286" endtime="20210729 14:21:06.290"/>
</iter>
<iter>
<var name="${pid}">16950</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:06.296" level="INFO">Running command 'kill 16950 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:06.291" endtime="20210729 14:21:06.297"/>
</kw>
<status status="PASS" starttime="20210729 14:21:06.291" endtime="20210729 14:21:06.297"/>
</iter>
<iter>
<var name="${pid}">16960</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:06.302" level="INFO">Running command 'kill 16960 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:06.298" endtime="20210729 14:21:06.303"/>
</kw>
<status status="PASS" starttime="20210729 14:21:06.297" endtime="20210729 14:21:06.303"/>
</iter>
<status status="PASS" starttime="20210729 14:21:06.286" endtime="20210729 14:21:06.303"/>
</for>
<status status="PASS" starttime="20210729 14:21:06.286" endtime="20210729 14:21:06.303"/>
</branch>
<status status="PASS" starttime="20210729 14:21:06.285" endtime="20210729 14:21:06.303"/>
</if>
<status status="PASS" starttime="20210729 14:21:06.253" endtime="20210729 14:21:06.303"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc!?.ZAabc!?.ZAabc!?.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:21:04.666" endtime="20210729 14:21:06.303">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t87" name="With Any Valid Token, Updating Password Of Each System User With abc!?.6 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:06.318" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:06.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:06.352" level="INFO">${pids} = 16989</msg>
<status status="PASS" starttime="20210729 14:21:06.305" endtime="20210729 14:21:06.352"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:06.353" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:06.353" endtime="20210729 14:21:06.353"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:06.354" level="INFO">${pids} = ['16989']</msg>
<status status="PASS" starttime="20210729 14:21:06.354" endtime="20210729 14:21:06.354"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">16989</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:06.359" level="INFO">Running command 'kill 16989 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:06.355" endtime="20210729 14:21:06.360"/>
</kw>
<status status="PASS" starttime="20210729 14:21:06.355" endtime="20210729 14:21:06.360"/>
</iter>
<status status="PASS" starttime="20210729 14:21:06.354" endtime="20210729 14:21:06.360"/>
</for>
<status status="PASS" starttime="20210729 14:21:06.354" endtime="20210729 14:21:06.360"/>
</branch>
<status status="PASS" starttime="20210729 14:21:06.354" endtime="20210729 14:21:06.360"/>
</if>
<status status="PASS" starttime="20210729 14:21:06.305" endtime="20210729 14:21:06.361"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:06.362" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:06.362" endtime="20210729 14:21:06.362"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:06.363" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:06.363" endtime="20210729 14:21:06.363"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:06.364" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:06.363" endtime="20210729 14:21:06.364"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:06.365" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:06.364" endtime="20210729 14:21:06.365"/>
</kw>
<msg timestamp="20210729 14:21:06.365" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:06.362" endtime="20210729 14:21:06.365"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:06.369" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:06.366" endtime="20210729 14:21:06.371"/>
</kw>
<status status="PASS" starttime="20210729 14:21:06.361" endtime="20210729 14:21:06.372"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:21:06.373" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:21:06.372" endtime="20210729 14:21:06.377"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:21:07.884" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:21:06.377" endtime="20210729 14:21:07.884"/>
</kw>
<status status="PASS" starttime="20210729 14:21:06.372" endtime="20210729 14:21:07.884"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:07.885" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:07.885" endtime="20210729 14:21:07.885"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:07.885" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:07.885" endtime="20210729 14:21:07.885"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:07.886" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:07.885" endtime="20210729 14:21:07.886"/>
</kw>
<msg timestamp="20210729 14:21:07.886" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:07.884" endtime="20210729 14:21:07.886"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:21:07.886" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:21:07.886" endtime="20210729 14:21:07.887"/>
</kw>
<status status="PASS" starttime="20210729 14:21:07.884" endtime="20210729 14:21:07.887"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:21:07.887" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:21:07.887" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:21:07.887" endtime="20210729 14:21:07.887"/>
</kw>
<status status="PASS" starttime="20210729 14:21:07.887" endtime="20210729 14:21:07.888"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:21:07.888" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:21:07.888" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:21:07.888" endtime="20210729 14:21:07.888"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:21:07.888" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:21:07.888" endtime="20210729 14:21:07.888"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:07.889" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:07.889" endtime="20210729 14:21:07.889"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:07.889" endtime="20210729 14:21:07.890"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:07.890" endtime="20210729 14:21:07.890"/>
</kw>
<status status="PASS" starttime="20210729 14:21:07.889" endtime="20210729 14:21:07.890"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:07.891" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:07.891" endtime="20210729 14:21:07.891"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:07.891" endtime="20210729 14:21:07.892"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:07.892" endtime="20210729 14:21:07.892"/>
</kw>
<status status="PASS" starttime="20210729 14:21:07.890" endtime="20210729 14:21:07.892"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:07.892" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:07.892" endtime="20210729 14:21:07.892"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:07.892" endtime="20210729 14:21:07.893"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:07.893" endtime="20210729 14:21:07.893"/>
</kw>
<status status="PASS" starttime="20210729 14:21:07.892" endtime="20210729 14:21:07.893"/>
</iter>
<status status="PASS" starttime="20210729 14:21:07.889" endtime="20210729 14:21:07.893"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:21:07.894" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:21:07.893" endtime="20210729 14:21:07.894"/>
</kw>
<status status="PASS" starttime="20210729 14:21:07.888" endtime="20210729 14:21:07.894"/>
</kw>
<status status="PASS" starttime="20210729 14:21:06.305" endtime="20210729 14:21:07.894"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc!?.6</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:07.895" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:21:07.895" endtime="20210729 14:21:07.895"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:07.895" level="INFO">${payload} = {'password': 'abc!?.6'}</msg>
<status status="PASS" starttime="20210729 14:21:07.895" endtime="20210729 14:21:07.895"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:07.905" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:07.905" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:07.896" endtime="20210729 14:21:07.905"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:07.905" endtime="20210729 14:21:07.905"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:07.905" endtime="20210729 14:21:07.905"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:07.896" endtime="20210729 14:21:07.905"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:07.895" endtime="20210729 14:21:07.906"/>
</for>
<status status="FAIL" starttime="20210729 14:21:07.894" endtime="20210729 14:21:07.906"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:07.894" endtime="20210729 14:21:07.906"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc!?.6</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:07.907" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:21:07.906" endtime="20210729 14:21:07.907"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:07.908" level="INFO">${payload} = {'password': 'abc!?.6'}</msg>
<status status="PASS" starttime="20210729 14:21:07.907" endtime="20210729 14:21:07.908"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:07.912" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:07.912" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:07.908" endtime="20210729 14:21:07.912"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:07.912" endtime="20210729 14:21:07.912"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:07.913" endtime="20210729 14:21:07.913"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:07.908" endtime="20210729 14:21:07.913"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:07.908" endtime="20210729 14:21:07.913"/>
</for>
<status status="FAIL" starttime="20210729 14:21:07.906" endtime="20210729 14:21:07.913"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:07.906" endtime="20210729 14:21:07.913"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc!?.6</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:07.915" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:21:07.914" endtime="20210729 14:21:07.915"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:07.915" level="INFO">${payload} = {'password': 'abc!?.6'}</msg>
<status status="PASS" starttime="20210729 14:21:07.915" endtime="20210729 14:21:07.915"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:07.919" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:07.919" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:07.916" endtime="20210729 14:21:07.920"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:07.920" endtime="20210729 14:21:07.920"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:07.920" endtime="20210729 14:21:07.920"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:07.915" endtime="20210729 14:21:07.920"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:07.915" endtime="20210729 14:21:07.920"/>
</for>
<status status="FAIL" starttime="20210729 14:21:07.913" endtime="20210729 14:21:07.920"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:07.913" endtime="20210729 14:21:07.920"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:07.894" endtime="20210729 14:21:07.920"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:07.924" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:07.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:07.934" level="INFO">${pids} = 17012
17019
17027</msg>
<status status="PASS" starttime="20210729 14:21:07.921" endtime="20210729 14:21:07.934"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:07.935" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:07.934" endtime="20210729 14:21:07.935"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:07.935" level="INFO">${pids} = ['17012', '17019', '17027']</msg>
<status status="PASS" starttime="20210729 14:21:07.935" endtime="20210729 14:21:07.935"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17012</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:07.938" level="INFO">Running command 'kill 17012 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:07.936" endtime="20210729 14:21:07.939"/>
</kw>
<status status="PASS" starttime="20210729 14:21:07.936" endtime="20210729 14:21:07.939"/>
</iter>
<iter>
<var name="${pid}">17019</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:07.942" level="INFO">Running command 'kill 17019 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:07.939" endtime="20210729 14:21:07.942"/>
</kw>
<status status="PASS" starttime="20210729 14:21:07.939" endtime="20210729 14:21:07.942"/>
</iter>
<iter>
<var name="${pid}">17027</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:07.945" level="INFO">Running command 'kill 17027 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:07.943" endtime="20210729 14:21:07.946"/>
</kw>
<status status="PASS" starttime="20210729 14:21:07.942" endtime="20210729 14:21:07.946"/>
</iter>
<status status="PASS" starttime="20210729 14:21:07.935" endtime="20210729 14:21:07.946"/>
</for>
<status status="PASS" starttime="20210729 14:21:07.935" endtime="20210729 14:21:07.946"/>
</branch>
<status status="PASS" starttime="20210729 14:21:07.935" endtime="20210729 14:21:07.946"/>
</if>
<status status="PASS" starttime="20210729 14:21:07.920" endtime="20210729 14:21:07.946"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc!?.6'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:21:06.304" endtime="20210729 14:21:07.947">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t88" name="With Any Valid Token, Updating Password Of Each System User With abc!?.67 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:07.952" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:07.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:07.962" level="INFO">${pids} = 17056</msg>
<status status="PASS" starttime="20210729 14:21:07.949" endtime="20210729 14:21:07.962"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:07.963" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:07.963" endtime="20210729 14:21:07.963"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:07.964" level="INFO">${pids} = ['17056']</msg>
<status status="PASS" starttime="20210729 14:21:07.964" endtime="20210729 14:21:07.964"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17056</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:07.968" level="INFO">Running command 'kill 17056 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:07.964" endtime="20210729 14:21:07.969"/>
</kw>
<status status="PASS" starttime="20210729 14:21:07.964" endtime="20210729 14:21:07.969"/>
</iter>
<status status="PASS" starttime="20210729 14:21:07.964" endtime="20210729 14:21:07.969"/>
</for>
<status status="PASS" starttime="20210729 14:21:07.964" endtime="20210729 14:21:07.969"/>
</branch>
<status status="PASS" starttime="20210729 14:21:07.964" endtime="20210729 14:21:07.969"/>
</if>
<status status="PASS" starttime="20210729 14:21:07.949" endtime="20210729 14:21:07.969"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:07.972" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:07.971" endtime="20210729 14:21:07.972"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:07.973" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:07.973" endtime="20210729 14:21:07.973"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:07.973" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:07.973" endtime="20210729 14:21:07.973"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:07.974" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:07.973" endtime="20210729 14:21:07.974"/>
</kw>
<msg timestamp="20210729 14:21:07.978" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:07.972" endtime="20210729 14:21:07.978"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:07.984" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:07.979" endtime="20210729 14:21:07.986"/>
</kw>
<status status="PASS" starttime="20210729 14:21:07.970" endtime="20210729 14:21:07.986"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:21:07.987" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:21:07.987" endtime="20210729 14:21:07.991"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:21:09.497" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:21:07.992" endtime="20210729 14:21:09.498"/>
</kw>
<status status="PASS" starttime="20210729 14:21:07.986" endtime="20210729 14:21:09.498"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:09.500" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:09.499" endtime="20210729 14:21:09.500"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:09.500" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:09.500" endtime="20210729 14:21:09.500"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:09.501" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:09.500" endtime="20210729 14:21:09.501"/>
</kw>
<msg timestamp="20210729 14:21:09.501" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:09.499" endtime="20210729 14:21:09.501"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:21:09.501" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:21:09.501" endtime="20210729 14:21:09.502"/>
</kw>
<status status="PASS" starttime="20210729 14:21:09.498" endtime="20210729 14:21:09.502"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:21:09.502" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:21:09.502" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:21:09.502" endtime="20210729 14:21:09.503"/>
</kw>
<status status="PASS" starttime="20210729 14:21:09.502" endtime="20210729 14:21:09.503"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:21:09.503" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:21:09.503" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:21:09.503" endtime="20210729 14:21:09.503"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:21:09.504" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:21:09.504" endtime="20210729 14:21:09.504"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:09.504" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:09.504" endtime="20210729 14:21:09.504"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:09.504" endtime="20210729 14:21:09.505"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:09.505" endtime="20210729 14:21:09.505"/>
</kw>
<status status="PASS" starttime="20210729 14:21:09.504" endtime="20210729 14:21:09.505"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:09.506" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:09.505" endtime="20210729 14:21:09.506"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:09.506" endtime="20210729 14:21:09.506"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:09.507" endtime="20210729 14:21:09.507"/>
</kw>
<status status="PASS" starttime="20210729 14:21:09.505" endtime="20210729 14:21:09.507"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:09.507" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:09.507" endtime="20210729 14:21:09.507"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:09.507" endtime="20210729 14:21:09.508"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:09.508" endtime="20210729 14:21:09.508"/>
</kw>
<status status="PASS" starttime="20210729 14:21:09.507" endtime="20210729 14:21:09.508"/>
</iter>
<status status="PASS" starttime="20210729 14:21:09.504" endtime="20210729 14:21:09.508"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:21:09.509" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:21:09.508" endtime="20210729 14:21:09.509"/>
</kw>
<status status="PASS" starttime="20210729 14:21:09.503" endtime="20210729 14:21:09.509"/>
</kw>
<status status="PASS" starttime="20210729 14:21:07.948" endtime="20210729 14:21:09.509"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc!?.67</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:09.510" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:21:09.510" endtime="20210729 14:21:09.510"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:09.511" level="INFO">${payload} = {'password': 'abc!?.67'}</msg>
<status status="PASS" starttime="20210729 14:21:09.510" endtime="20210729 14:21:09.511"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:09.520" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:09.521" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:09.511" endtime="20210729 14:21:09.521"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:09.521" endtime="20210729 14:21:09.521"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:09.521" endtime="20210729 14:21:09.521"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:09.511" endtime="20210729 14:21:09.521"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:09.511" endtime="20210729 14:21:09.521"/>
</for>
<status status="FAIL" starttime="20210729 14:21:09.509" endtime="20210729 14:21:09.521"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:09.509" endtime="20210729 14:21:09.521"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc!?.67</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:09.522" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:21:09.522" endtime="20210729 14:21:09.522"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:09.523" level="INFO">${payload} = {'password': 'abc!?.67'}</msg>
<status status="PASS" starttime="20210729 14:21:09.522" endtime="20210729 14:21:09.523"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:09.527" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:09.527" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:09.523" endtime="20210729 14:21:09.527"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:09.527" endtime="20210729 14:21:09.527"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:09.527" endtime="20210729 14:21:09.527"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:09.523" endtime="20210729 14:21:09.527"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:09.523" endtime="20210729 14:21:09.527"/>
</for>
<status status="FAIL" starttime="20210729 14:21:09.521" endtime="20210729 14:21:09.527"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:09.521" endtime="20210729 14:21:09.528"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc!?.67</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:09.528" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:21:09.528" endtime="20210729 14:21:09.529"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:09.529" level="INFO">${payload} = {'password': 'abc!?.67'}</msg>
<status status="PASS" starttime="20210729 14:21:09.529" endtime="20210729 14:21:09.529"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:09.533" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:09.534" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:09.529" endtime="20210729 14:21:09.534"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:09.534" endtime="20210729 14:21:09.534"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:09.534" endtime="20210729 14:21:09.534"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:09.529" endtime="20210729 14:21:09.534"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:09.529" endtime="20210729 14:21:09.534"/>
</for>
<status status="FAIL" starttime="20210729 14:21:09.528" endtime="20210729 14:21:09.534"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:09.528" endtime="20210729 14:21:09.534"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:09.509" endtime="20210729 14:21:09.534"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:09.539" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:09.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:09.549" level="INFO">${pids} = 17079
17086
17090</msg>
<status status="PASS" starttime="20210729 14:21:09.535" endtime="20210729 14:21:09.549"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:09.550" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:09.549" endtime="20210729 14:21:09.550"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:09.551" level="INFO">${pids} = ['17079', '17086', '17090']</msg>
<status status="PASS" starttime="20210729 14:21:09.551" endtime="20210729 14:21:09.551"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17079</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:09.555" level="INFO">Running command 'kill 17079 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:09.552" endtime="20210729 14:21:09.555"/>
</kw>
<status status="PASS" starttime="20210729 14:21:09.552" endtime="20210729 14:21:09.555"/>
</iter>
<iter>
<var name="${pid}">17086</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:09.560" level="INFO">Running command 'kill 17086 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:09.556" endtime="20210729 14:21:09.561"/>
</kw>
<status status="PASS" starttime="20210729 14:21:09.555" endtime="20210729 14:21:09.561"/>
</iter>
<iter>
<var name="${pid}">17090</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:09.565" level="INFO">Running command 'kill 17090 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:09.562" endtime="20210729 14:21:09.566"/>
</kw>
<status status="PASS" starttime="20210729 14:21:09.562" endtime="20210729 14:21:09.566"/>
</iter>
<status status="PASS" starttime="20210729 14:21:09.552" endtime="20210729 14:21:09.566"/>
</for>
<status status="PASS" starttime="20210729 14:21:09.550" endtime="20210729 14:21:09.566"/>
</branch>
<status status="PASS" starttime="20210729 14:21:09.550" endtime="20210729 14:21:09.566"/>
</if>
<status status="PASS" starttime="20210729 14:21:09.535" endtime="20210729 14:21:09.566"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc!?.67'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:21:07.947" endtime="20210729 14:21:09.567">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t89" name="With Any Valid Token, Updating Password Of Each System User With abc!?.67abc!?.67abc!?. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:09.574" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:09.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:09.583" level="INFO">${pids} = 17119</msg>
<status status="PASS" starttime="20210729 14:21:09.569" endtime="20210729 14:21:09.584"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:09.584" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:09.584" endtime="20210729 14:21:09.584"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:09.585" level="INFO">${pids} = ['17119']</msg>
<status status="PASS" starttime="20210729 14:21:09.585" endtime="20210729 14:21:09.585"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17119</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:09.589" level="INFO">Running command 'kill 17119 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:09.586" endtime="20210729 14:21:09.589"/>
</kw>
<status status="PASS" starttime="20210729 14:21:09.585" endtime="20210729 14:21:09.589"/>
</iter>
<status status="PASS" starttime="20210729 14:21:09.585" endtime="20210729 14:21:09.589"/>
</for>
<status status="PASS" starttime="20210729 14:21:09.585" endtime="20210729 14:21:09.589"/>
</branch>
<status status="PASS" starttime="20210729 14:21:09.585" endtime="20210729 14:21:09.589"/>
</if>
<status status="PASS" starttime="20210729 14:21:09.568" endtime="20210729 14:21:09.589"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:09.590" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:09.590" endtime="20210729 14:21:09.590"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:09.591" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:09.591" endtime="20210729 14:21:09.591"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:09.591" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:09.591" endtime="20210729 14:21:09.591"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:09.592" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:09.592" endtime="20210729 14:21:09.592"/>
</kw>
<msg timestamp="20210729 14:21:09.592" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:09.591" endtime="20210729 14:21:09.592"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:09.595" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:09.592" endtime="20210729 14:21:09.596"/>
</kw>
<status status="PASS" starttime="20210729 14:21:09.590" endtime="20210729 14:21:09.597"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:21:09.598" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:21:09.598" endtime="20210729 14:21:09.607"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:21:11.109" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:21:09.607" endtime="20210729 14:21:11.109"/>
</kw>
<status status="PASS" starttime="20210729 14:21:09.597" endtime="20210729 14:21:11.109"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:11.110" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:11.110" endtime="20210729 14:21:11.110"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:11.111" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:11.110" endtime="20210729 14:21:11.111"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:11.111" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:11.111" endtime="20210729 14:21:11.111"/>
</kw>
<msg timestamp="20210729 14:21:11.111" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:11.110" endtime="20210729 14:21:11.111"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:21:11.112" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:21:11.111" endtime="20210729 14:21:11.112"/>
</kw>
<status status="PASS" starttime="20210729 14:21:11.109" endtime="20210729 14:21:11.112"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:21:11.113" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:21:11.113" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:21:11.113" endtime="20210729 14:21:11.113"/>
</kw>
<status status="PASS" starttime="20210729 14:21:11.112" endtime="20210729 14:21:11.113"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:21:11.114" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:21:11.114" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:21:11.114" endtime="20210729 14:21:11.114"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:21:11.115" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:21:11.114" endtime="20210729 14:21:11.115"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:11.115" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:11.115" endtime="20210729 14:21:11.115"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:11.116" endtime="20210729 14:21:11.116"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:11.116" endtime="20210729 14:21:11.117"/>
</kw>
<status status="PASS" starttime="20210729 14:21:11.115" endtime="20210729 14:21:11.117"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:11.117" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:11.117" endtime="20210729 14:21:11.117"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:11.117" endtime="20210729 14:21:11.118"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:11.118" endtime="20210729 14:21:11.118"/>
</kw>
<status status="PASS" starttime="20210729 14:21:11.117" endtime="20210729 14:21:11.118"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:11.118" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:11.118" endtime="20210729 14:21:11.118"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:11.119" endtime="20210729 14:21:11.119"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:11.119" endtime="20210729 14:21:11.119"/>
</kw>
<status status="PASS" starttime="20210729 14:21:11.118" endtime="20210729 14:21:11.119"/>
</iter>
<status status="PASS" starttime="20210729 14:21:11.115" endtime="20210729 14:21:11.119"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:21:11.120" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:21:11.120" endtime="20210729 14:21:11.120"/>
</kw>
<status status="PASS" starttime="20210729 14:21:11.113" endtime="20210729 14:21:11.120"/>
</kw>
<status status="PASS" starttime="20210729 14:21:09.568" endtime="20210729 14:21:11.120"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc!?.67abc!?.67abc!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:11.121" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:21:11.121" endtime="20210729 14:21:11.121"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:11.122" level="INFO">${payload} = {'password': 'abc!?.67abc!?.67abc!?.'}</msg>
<status status="PASS" starttime="20210729 14:21:11.122" endtime="20210729 14:21:11.122"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:11.130" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:11.131" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:11.122" endtime="20210729 14:21:11.131"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:11.131" endtime="20210729 14:21:11.131"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:11.131" endtime="20210729 14:21:11.131"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:11.122" endtime="20210729 14:21:11.131"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:11.122" endtime="20210729 14:21:11.131"/>
</for>
<status status="FAIL" starttime="20210729 14:21:11.121" endtime="20210729 14:21:11.132"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:11.121" endtime="20210729 14:21:11.132"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc!?.67abc!?.67abc!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:11.133" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:21:11.133" endtime="20210729 14:21:11.133"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:11.133" level="INFO">${payload} = {'password': 'abc!?.67abc!?.67abc!?.'}</msg>
<status status="PASS" starttime="20210729 14:21:11.133" endtime="20210729 14:21:11.133"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:11.138" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:11.138" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:11.134" endtime="20210729 14:21:11.138"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:11.138" endtime="20210729 14:21:11.139"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:11.139" endtime="20210729 14:21:11.139"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:11.134" endtime="20210729 14:21:11.139"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:11.133" endtime="20210729 14:21:11.139"/>
</for>
<status status="FAIL" starttime="20210729 14:21:11.132" endtime="20210729 14:21:11.139"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:11.132" endtime="20210729 14:21:11.139"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=abc!?.67abc!?.67abc!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:11.140" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:21:11.140" endtime="20210729 14:21:11.140"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:11.141" level="INFO">${payload} = {'password': 'abc!?.67abc!?.67abc!?.'}</msg>
<status status="PASS" starttime="20210729 14:21:11.140" endtime="20210729 14:21:11.141"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:11.145" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:11.145" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:11.141" endtime="20210729 14:21:11.145"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:11.146" endtime="20210729 14:21:11.146"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:11.146" endtime="20210729 14:21:11.146"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:11.141" endtime="20210729 14:21:11.146"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:11.141" endtime="20210729 14:21:11.146"/>
</for>
<status status="FAIL" starttime="20210729 14:21:11.139" endtime="20210729 14:21:11.146"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:11.139" endtime="20210729 14:21:11.146"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:11.120" endtime="20210729 14:21:11.146"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:11.166" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:11.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:11.177" level="INFO">${pids} = 17142
17149
17160</msg>
<status status="PASS" starttime="20210729 14:21:11.147" endtime="20210729 14:21:11.177"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:11.178" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:11.177" endtime="20210729 14:21:11.178"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:11.179" level="INFO">${pids} = ['17142', '17149', '17160']</msg>
<status status="PASS" starttime="20210729 14:21:11.178" endtime="20210729 14:21:11.179"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17142</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:11.186" level="INFO">Running command 'kill 17142 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:11.179" endtime="20210729 14:21:11.186"/>
</kw>
<status status="PASS" starttime="20210729 14:21:11.179" endtime="20210729 14:21:11.186"/>
</iter>
<iter>
<var name="${pid}">17149</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:11.190" level="INFO">Running command 'kill 17149 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:11.187" endtime="20210729 14:21:11.191"/>
</kw>
<status status="PASS" starttime="20210729 14:21:11.187" endtime="20210729 14:21:11.191"/>
</iter>
<iter>
<var name="${pid}">17160</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:11.194" level="INFO">Running command 'kill 17160 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:11.192" endtime="20210729 14:21:11.195"/>
</kw>
<status status="PASS" starttime="20210729 14:21:11.191" endtime="20210729 14:21:11.195"/>
</iter>
<status status="PASS" starttime="20210729 14:21:11.179" endtime="20210729 14:21:11.195"/>
</for>
<status status="PASS" starttime="20210729 14:21:11.178" endtime="20210729 14:21:11.195"/>
</branch>
<status status="PASS" starttime="20210729 14:21:11.178" endtime="20210729 14:21:11.195"/>
</if>
<status status="PASS" starttime="20210729 14:21:11.146" endtime="20210729 14:21:11.195"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'abc!?.67abc!?.67abc!?.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:21:09.567" endtime="20210729 14:21:11.196">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t90" name="With Any Valid Token, Updating Password Of Each System User With ABC456. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:11.201" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:11.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:11.214" level="INFO">${pids} = 17189</msg>
<status status="PASS" starttime="20210729 14:21:11.198" endtime="20210729 14:21:11.214"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:11.215" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:11.214" endtime="20210729 14:21:11.215"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:11.216" level="INFO">${pids} = ['17189']</msg>
<status status="PASS" starttime="20210729 14:21:11.216" endtime="20210729 14:21:11.216"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17189</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:11.222" level="INFO">Running command 'kill 17189 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:11.217" endtime="20210729 14:21:11.222"/>
</kw>
<status status="PASS" starttime="20210729 14:21:11.217" endtime="20210729 14:21:11.222"/>
</iter>
<status status="PASS" starttime="20210729 14:21:11.217" endtime="20210729 14:21:11.222"/>
</for>
<status status="PASS" starttime="20210729 14:21:11.216" endtime="20210729 14:21:11.223"/>
</branch>
<status status="PASS" starttime="20210729 14:21:11.216" endtime="20210729 14:21:11.223"/>
</if>
<status status="PASS" starttime="20210729 14:21:11.197" endtime="20210729 14:21:11.223"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:11.225" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:11.224" endtime="20210729 14:21:11.225"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:11.226" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:11.226" endtime="20210729 14:21:11.226"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:11.228" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:11.226" endtime="20210729 14:21:11.228"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:11.229" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:11.228" endtime="20210729 14:21:11.229"/>
</kw>
<msg timestamp="20210729 14:21:11.229" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:11.225" endtime="20210729 14:21:11.230"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:11.242" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:11.230" endtime="20210729 14:21:11.244"/>
</kw>
<status status="PASS" starttime="20210729 14:21:11.223" endtime="20210729 14:21:11.244"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:21:11.245" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:21:11.245" endtime="20210729 14:21:11.250"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:21:12.753" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:21:11.251" endtime="20210729 14:21:12.753"/>
</kw>
<status status="PASS" starttime="20210729 14:21:11.244" endtime="20210729 14:21:12.753"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:12.755" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:12.754" endtime="20210729 14:21:12.755"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:12.755" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:12.755" endtime="20210729 14:21:12.755"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:12.755" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:12.755" endtime="20210729 14:21:12.755"/>
</kw>
<msg timestamp="20210729 14:21:12.756" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:12.754" endtime="20210729 14:21:12.756"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:21:12.756" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:21:12.756" endtime="20210729 14:21:12.756"/>
</kw>
<status status="PASS" starttime="20210729 14:21:12.754" endtime="20210729 14:21:12.757"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:21:12.757" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:21:12.757" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:21:12.757" endtime="20210729 14:21:12.757"/>
</kw>
<status status="PASS" starttime="20210729 14:21:12.757" endtime="20210729 14:21:12.757"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:21:12.758" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:21:12.758" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:21:12.758" endtime="20210729 14:21:12.758"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:21:12.758" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:21:12.758" endtime="20210729 14:21:12.758"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:12.759" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:12.759" endtime="20210729 14:21:12.759"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:12.759" endtime="20210729 14:21:12.760"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:12.760" endtime="20210729 14:21:12.760"/>
</kw>
<status status="PASS" starttime="20210729 14:21:12.759" endtime="20210729 14:21:12.760"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:12.761" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:12.761" endtime="20210729 14:21:12.761"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:12.761" endtime="20210729 14:21:12.761"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:12.762" endtime="20210729 14:21:12.762"/>
</kw>
<status status="PASS" starttime="20210729 14:21:12.761" endtime="20210729 14:21:12.762"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:12.762" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:12.762" endtime="20210729 14:21:12.762"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:12.762" endtime="20210729 14:21:12.763"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:12.763" endtime="20210729 14:21:12.763"/>
</kw>
<status status="PASS" starttime="20210729 14:21:12.762" endtime="20210729 14:21:12.763"/>
</iter>
<status status="PASS" starttime="20210729 14:21:12.758" endtime="20210729 14:21:12.763"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:21:12.764" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:21:12.763" endtime="20210729 14:21:12.764"/>
</kw>
<status status="PASS" starttime="20210729 14:21:12.758" endtime="20210729 14:21:12.764"/>
</kw>
<status status="PASS" starttime="20210729 14:21:11.197" endtime="20210729 14:21:12.764"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABC456.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:12.765" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:21:12.765" endtime="20210729 14:21:12.765"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:12.766" level="INFO">${payload} = {'password': 'ABC456.'}</msg>
<status status="PASS" starttime="20210729 14:21:12.765" endtime="20210729 14:21:12.766"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:12.774" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:12.774" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:12.766" endtime="20210729 14:21:12.774"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:12.775" endtime="20210729 14:21:12.775"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:12.775" endtime="20210729 14:21:12.775"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:12.766" endtime="20210729 14:21:12.775"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:12.766" endtime="20210729 14:21:12.775"/>
</for>
<status status="FAIL" starttime="20210729 14:21:12.764" endtime="20210729 14:21:12.775"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:12.764" endtime="20210729 14:21:12.775"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABC456.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:12.776" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:21:12.776" endtime="20210729 14:21:12.776"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:12.777" level="INFO">${payload} = {'password': 'ABC456.'}</msg>
<status status="PASS" starttime="20210729 14:21:12.777" endtime="20210729 14:21:12.777"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:12.781" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:12.782" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:12.777" endtime="20210729 14:21:12.782"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:12.782" endtime="20210729 14:21:12.782"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:12.782" endtime="20210729 14:21:12.782"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:12.777" endtime="20210729 14:21:12.782"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:12.777" endtime="20210729 14:21:12.782"/>
</for>
<status status="FAIL" starttime="20210729 14:21:12.775" endtime="20210729 14:21:12.782"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:12.775" endtime="20210729 14:21:12.783"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABC456.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:12.784" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:21:12.783" endtime="20210729 14:21:12.784"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:12.784" level="INFO">${payload} = {'password': 'ABC456.'}</msg>
<status status="PASS" starttime="20210729 14:21:12.784" endtime="20210729 14:21:12.784"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:12.789" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:12.789" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:12.785" endtime="20210729 14:21:12.789"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:12.789" endtime="20210729 14:21:12.789"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:12.789" endtime="20210729 14:21:12.789"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:12.784" endtime="20210729 14:21:12.789"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:12.784" endtime="20210729 14:21:12.789"/>
</for>
<status status="FAIL" starttime="20210729 14:21:12.783" endtime="20210729 14:21:12.789"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:12.783" endtime="20210729 14:21:12.789"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:12.764" endtime="20210729 14:21:12.790"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:12.794" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:12.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:12.804" level="INFO">${pids} = 17212
17219
17224</msg>
<status status="PASS" starttime="20210729 14:21:12.790" endtime="20210729 14:21:12.804"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:12.805" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:12.805" endtime="20210729 14:21:12.805"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:12.806" level="INFO">${pids} = ['17212', '17219', '17224']</msg>
<status status="PASS" starttime="20210729 14:21:12.806" endtime="20210729 14:21:12.806"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17212</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:12.809" level="INFO">Running command 'kill 17212 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:12.806" endtime="20210729 14:21:12.810"/>
</kw>
<status status="PASS" starttime="20210729 14:21:12.806" endtime="20210729 14:21:12.810"/>
</iter>
<iter>
<var name="${pid}">17219</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:12.813" level="INFO">Running command 'kill 17219 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:12.810" endtime="20210729 14:21:12.815"/>
</kw>
<status status="PASS" starttime="20210729 14:21:12.810" endtime="20210729 14:21:12.816"/>
</iter>
<iter>
<var name="${pid}">17224</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:12.819" level="INFO">Running command 'kill 17224 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:12.816" endtime="20210729 14:21:12.820"/>
</kw>
<status status="PASS" starttime="20210729 14:21:12.816" endtime="20210729 14:21:12.820"/>
</iter>
<status status="PASS" starttime="20210729 14:21:12.806" endtime="20210729 14:21:12.820"/>
</for>
<status status="PASS" starttime="20210729 14:21:12.805" endtime="20210729 14:21:12.820"/>
</branch>
<status status="PASS" starttime="20210729 14:21:12.805" endtime="20210729 14:21:12.821"/>
</if>
<status status="PASS" starttime="20210729 14:21:12.790" endtime="20210729 14:21:12.821"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABC456.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:21:11.196" endtime="20210729 14:21:12.822">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t91" name="With Any Valid Token, Updating Password Of Each System User With ABC456.? Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:12.827" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:12.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:12.836" level="INFO">${pids} = 17253</msg>
<status status="PASS" starttime="20210729 14:21:12.824" endtime="20210729 14:21:12.836"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:12.837" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:12.836" endtime="20210729 14:21:12.837"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:12.837" level="INFO">${pids} = ['17253']</msg>
<status status="PASS" starttime="20210729 14:21:12.837" endtime="20210729 14:21:12.837"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17253</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:12.844" level="INFO">Running command 'kill 17253 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:12.838" endtime="20210729 14:21:12.844"/>
</kw>
<status status="PASS" starttime="20210729 14:21:12.838" endtime="20210729 14:21:12.844"/>
</iter>
<status status="PASS" starttime="20210729 14:21:12.838" endtime="20210729 14:21:12.844"/>
</for>
<status status="PASS" starttime="20210729 14:21:12.837" endtime="20210729 14:21:12.844"/>
</branch>
<status status="PASS" starttime="20210729 14:21:12.837" endtime="20210729 14:21:12.844"/>
</if>
<status status="PASS" starttime="20210729 14:21:12.823" endtime="20210729 14:21:12.845"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:12.846" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:12.845" endtime="20210729 14:21:12.846"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:12.846" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:12.846" endtime="20210729 14:21:12.846"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:12.847" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:12.847" endtime="20210729 14:21:12.847"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:12.847" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:12.847" endtime="20210729 14:21:12.847"/>
</kw>
<msg timestamp="20210729 14:21:12.847" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:12.846" endtime="20210729 14:21:12.847"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:12.851" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:12.848" endtime="20210729 14:21:12.853"/>
</kw>
<status status="PASS" starttime="20210729 14:21:12.845" endtime="20210729 14:21:12.853"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:21:12.855" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:21:12.854" endtime="20210729 14:21:12.859"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:21:14.365" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:21:12.860" endtime="20210729 14:21:14.365"/>
</kw>
<status status="PASS" starttime="20210729 14:21:12.854" endtime="20210729 14:21:14.365"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:14.367" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:14.366" endtime="20210729 14:21:14.367"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:14.368" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:14.367" endtime="20210729 14:21:14.368"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:14.368" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:14.368" endtime="20210729 14:21:14.368"/>
</kw>
<msg timestamp="20210729 14:21:14.368" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:14.366" endtime="20210729 14:21:14.368"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:21:14.369" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:21:14.369" endtime="20210729 14:21:14.369"/>
</kw>
<status status="PASS" starttime="20210729 14:21:14.365" endtime="20210729 14:21:14.369"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:21:14.370" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:21:14.370" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:21:14.370" endtime="20210729 14:21:14.370"/>
</kw>
<status status="PASS" starttime="20210729 14:21:14.369" endtime="20210729 14:21:14.370"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:21:14.371" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:21:14.371" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:21:14.371" endtime="20210729 14:21:14.371"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:21:14.371" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:21:14.371" endtime="20210729 14:21:14.371"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:14.372" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:14.372" endtime="20210729 14:21:14.372"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:14.372" endtime="20210729 14:21:14.372"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:14.373" endtime="20210729 14:21:14.373"/>
</kw>
<status status="PASS" starttime="20210729 14:21:14.371" endtime="20210729 14:21:14.373"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:14.373" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:14.373" endtime="20210729 14:21:14.373"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:14.373" endtime="20210729 14:21:14.374"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:14.374" endtime="20210729 14:21:14.374"/>
</kw>
<status status="PASS" starttime="20210729 14:21:14.373" endtime="20210729 14:21:14.374"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:14.375" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:14.375" endtime="20210729 14:21:14.375"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:14.375" endtime="20210729 14:21:14.375"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:14.376" endtime="20210729 14:21:14.376"/>
</kw>
<status status="PASS" starttime="20210729 14:21:14.374" endtime="20210729 14:21:14.376"/>
</iter>
<status status="PASS" starttime="20210729 14:21:14.371" endtime="20210729 14:21:14.376"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:21:14.376" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:21:14.376" endtime="20210729 14:21:14.376"/>
</kw>
<status status="PASS" starttime="20210729 14:21:14.370" endtime="20210729 14:21:14.376"/>
</kw>
<status status="PASS" starttime="20210729 14:21:12.823" endtime="20210729 14:21:14.376"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABC456.?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:14.378" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:21:14.377" endtime="20210729 14:21:14.378"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:14.378" level="INFO">${payload} = {'password': 'ABC456.?'}</msg>
<status status="PASS" starttime="20210729 14:21:14.378" endtime="20210729 14:21:14.378"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:14.388" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:14.388" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:14.378" endtime="20210729 14:21:14.388"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:14.389" endtime="20210729 14:21:14.389"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:14.389" endtime="20210729 14:21:14.389"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:14.378" endtime="20210729 14:21:14.389"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:14.378" endtime="20210729 14:21:14.389"/>
</for>
<status status="FAIL" starttime="20210729 14:21:14.377" endtime="20210729 14:21:14.389"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:14.377" endtime="20210729 14:21:14.389"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABC456.?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:14.391" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:21:14.390" endtime="20210729 14:21:14.391"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:14.391" level="INFO">${payload} = {'password': 'ABC456.?'}</msg>
<status status="PASS" starttime="20210729 14:21:14.391" endtime="20210729 14:21:14.391"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:14.395" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:14.395" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:14.391" endtime="20210729 14:21:14.395"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:14.396" endtime="20210729 14:21:14.396"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:14.396" endtime="20210729 14:21:14.396"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:14.391" endtime="20210729 14:21:14.396"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:14.391" endtime="20210729 14:21:14.396"/>
</for>
<status status="FAIL" starttime="20210729 14:21:14.389" endtime="20210729 14:21:14.396"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:14.389" endtime="20210729 14:21:14.396"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABC456.?</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:14.397" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:21:14.397" endtime="20210729 14:21:14.397"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:14.398" level="INFO">${payload} = {'password': 'ABC456.?'}</msg>
<status status="PASS" starttime="20210729 14:21:14.397" endtime="20210729 14:21:14.398"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:14.402" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:14.402" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:14.398" endtime="20210729 14:21:14.402"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:14.402" endtime="20210729 14:21:14.402"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:14.403" endtime="20210729 14:21:14.403"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:14.398" endtime="20210729 14:21:14.403"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:14.398" endtime="20210729 14:21:14.403"/>
</for>
<status status="FAIL" starttime="20210729 14:21:14.396" endtime="20210729 14:21:14.403"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:14.396" endtime="20210729 14:21:14.403"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:14.377" endtime="20210729 14:21:14.403"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:14.409" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:14.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:14.418" level="INFO">${pids} = 17276
17283
17287</msg>
<status status="PASS" starttime="20210729 14:21:14.404" endtime="20210729 14:21:14.418"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:14.419" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:14.418" endtime="20210729 14:21:14.419"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:14.419" level="INFO">${pids} = ['17276', '17283', '17287']</msg>
<status status="PASS" starttime="20210729 14:21:14.419" endtime="20210729 14:21:14.419"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17276</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:14.423" level="INFO">Running command 'kill 17276 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:14.420" endtime="20210729 14:21:14.424"/>
</kw>
<status status="PASS" starttime="20210729 14:21:14.420" endtime="20210729 14:21:14.424"/>
</iter>
<iter>
<var name="${pid}">17283</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:14.428" level="INFO">Running command 'kill 17283 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:14.424" endtime="20210729 14:21:14.428"/>
</kw>
<status status="PASS" starttime="20210729 14:21:14.424" endtime="20210729 14:21:14.428"/>
</iter>
<iter>
<var name="${pid}">17287</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:14.433" level="INFO">Running command 'kill 17287 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:14.429" endtime="20210729 14:21:14.434"/>
</kw>
<status status="PASS" starttime="20210729 14:21:14.428" endtime="20210729 14:21:14.434"/>
</iter>
<status status="PASS" starttime="20210729 14:21:14.419" endtime="20210729 14:21:14.434"/>
</for>
<status status="PASS" starttime="20210729 14:21:14.419" endtime="20210729 14:21:14.434"/>
</branch>
<status status="PASS" starttime="20210729 14:21:14.419" endtime="20210729 14:21:14.434"/>
</if>
<status status="PASS" starttime="20210729 14:21:14.403" endtime="20210729 14:21:14.434"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABC456.?'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:21:12.822" endtime="20210729 14:21:14.434">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t92" name="With Any Valid Token, Updating Password Of Each System User With ABC456.?ABC456.?ABC456 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:14.441" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:14.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:14.451" level="INFO">${pids} = 17316</msg>
<status status="PASS" starttime="20210729 14:21:14.436" endtime="20210729 14:21:14.451"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:14.452" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:14.451" endtime="20210729 14:21:14.452"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:14.452" level="INFO">${pids} = ['17316']</msg>
<status status="PASS" starttime="20210729 14:21:14.452" endtime="20210729 14:21:14.452"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17316</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:14.456" level="INFO">Running command 'kill 17316 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:14.453" endtime="20210729 14:21:14.456"/>
</kw>
<status status="PASS" starttime="20210729 14:21:14.453" endtime="20210729 14:21:14.456"/>
</iter>
<status status="PASS" starttime="20210729 14:21:14.453" endtime="20210729 14:21:14.456"/>
</for>
<status status="PASS" starttime="20210729 14:21:14.452" endtime="20210729 14:21:14.456"/>
</branch>
<status status="PASS" starttime="20210729 14:21:14.452" endtime="20210729 14:21:14.456"/>
</if>
<status status="PASS" starttime="20210729 14:21:14.436" endtime="20210729 14:21:14.457"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:14.458" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:14.457" endtime="20210729 14:21:14.458"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:14.458" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:14.458" endtime="20210729 14:21:14.458"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:14.459" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:14.458" endtime="20210729 14:21:14.459"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:14.459" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:14.459" endtime="20210729 14:21:14.459"/>
</kw>
<msg timestamp="20210729 14:21:14.459" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:14.458" endtime="20210729 14:21:14.459"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:14.463" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:14.460" endtime="20210729 14:21:14.465"/>
</kw>
<status status="PASS" starttime="20210729 14:21:14.457" endtime="20210729 14:21:14.465"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:21:14.467" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:21:14.466" endtime="20210729 14:21:14.472"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:21:15.973" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:21:14.472" endtime="20210729 14:21:15.973"/>
</kw>
<status status="PASS" starttime="20210729 14:21:14.466" endtime="20210729 14:21:15.974"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:15.975" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:15.974" endtime="20210729 14:21:15.975"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:15.975" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:15.975" endtime="20210729 14:21:15.975"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:15.976" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:15.975" endtime="20210729 14:21:15.976"/>
</kw>
<msg timestamp="20210729 14:21:15.976" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:15.974" endtime="20210729 14:21:15.976"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:21:15.977" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:21:15.976" endtime="20210729 14:21:15.977"/>
</kw>
<status status="PASS" starttime="20210729 14:21:15.974" endtime="20210729 14:21:15.977"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:21:15.978" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:21:15.978" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:21:15.977" endtime="20210729 14:21:15.978"/>
</kw>
<status status="PASS" starttime="20210729 14:21:15.977" endtime="20210729 14:21:15.978"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:21:15.978" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:21:15.978" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:21:15.978" endtime="20210729 14:21:15.979"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:21:15.979" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:21:15.979" endtime="20210729 14:21:15.979"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:15.979" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:15.979" endtime="20210729 14:21:15.979"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:15.980" endtime="20210729 14:21:15.981"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:15.981" endtime="20210729 14:21:15.982"/>
</kw>
<status status="PASS" starttime="20210729 14:21:15.979" endtime="20210729 14:21:15.982"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:15.982" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:15.982" endtime="20210729 14:21:15.982"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:15.983" endtime="20210729 14:21:15.983"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:15.983" endtime="20210729 14:21:15.984"/>
</kw>
<status status="PASS" starttime="20210729 14:21:15.982" endtime="20210729 14:21:15.984"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:15.984" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:15.984" endtime="20210729 14:21:15.984"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:15.984" endtime="20210729 14:21:15.985"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:15.985" endtime="20210729 14:21:15.985"/>
</kw>
<status status="PASS" starttime="20210729 14:21:15.984" endtime="20210729 14:21:15.985"/>
</iter>
<status status="PASS" starttime="20210729 14:21:15.979" endtime="20210729 14:21:15.985"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:21:15.986" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:21:15.985" endtime="20210729 14:21:15.986"/>
</kw>
<status status="PASS" starttime="20210729 14:21:15.978" endtime="20210729 14:21:15.986"/>
</kw>
<status status="PASS" starttime="20210729 14:21:14.436" endtime="20210729 14:21:15.986"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABC456.?ABC456.?ABC456</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:15.987" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:21:15.987" endtime="20210729 14:21:15.987"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:15.987" level="INFO">${payload} = {'password': 'ABC456.?ABC456.?ABC456'}</msg>
<status status="PASS" starttime="20210729 14:21:15.987" endtime="20210729 14:21:15.987"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:15.998" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:15.998" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:15.988" endtime="20210729 14:21:15.998"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:15.998" endtime="20210729 14:21:15.998"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:15.998" endtime="20210729 14:21:15.998"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:15.988" endtime="20210729 14:21:15.999"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:15.988" endtime="20210729 14:21:15.999"/>
</for>
<status status="FAIL" starttime="20210729 14:21:15.986" endtime="20210729 14:21:15.999"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:15.986" endtime="20210729 14:21:15.999"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABC456.?ABC456.?ABC456</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:16.001" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:21:16.000" endtime="20210729 14:21:16.001"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:16.001" level="INFO">${payload} = {'password': 'ABC456.?ABC456.?ABC456'}</msg>
<status status="PASS" starttime="20210729 14:21:16.001" endtime="20210729 14:21:16.001"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:16.006" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:16.006" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:16.002" endtime="20210729 14:21:16.006"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:16.006" endtime="20210729 14:21:16.007"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:16.007" endtime="20210729 14:21:16.007"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:16.002" endtime="20210729 14:21:16.007"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:16.002" endtime="20210729 14:21:16.007"/>
</for>
<status status="FAIL" starttime="20210729 14:21:15.999" endtime="20210729 14:21:16.007"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:15.999" endtime="20210729 14:21:16.007"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABC456.?ABC456.?ABC456</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:16.008" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:21:16.008" endtime="20210729 14:21:16.008"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:16.008" level="INFO">${payload} = {'password': 'ABC456.?ABC456.?ABC456'}</msg>
<status status="PASS" starttime="20210729 14:21:16.008" endtime="20210729 14:21:16.008"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:16.013" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:16.013" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:16.009" endtime="20210729 14:21:16.013"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:16.013" endtime="20210729 14:21:16.013"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:16.013" endtime="20210729 14:21:16.013"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:16.009" endtime="20210729 14:21:16.013"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:16.008" endtime="20210729 14:21:16.013"/>
</for>
<status status="FAIL" starttime="20210729 14:21:16.007" endtime="20210729 14:21:16.014"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:16.007" endtime="20210729 14:21:16.014"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:15.986" endtime="20210729 14:21:16.014"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:16.019" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:16.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:16.029" level="INFO">${pids} = 17339
17346
17356</msg>
<status status="PASS" starttime="20210729 14:21:16.015" endtime="20210729 14:21:16.029"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:16.030" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:16.029" endtime="20210729 14:21:16.030"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:16.032" level="INFO">${pids} = ['17339', '17346', '17356']</msg>
<status status="PASS" starttime="20210729 14:21:16.031" endtime="20210729 14:21:16.032"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17339</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:16.037" level="INFO">Running command 'kill 17339 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:16.033" endtime="20210729 14:21:16.037"/>
</kw>
<status status="PASS" starttime="20210729 14:21:16.033" endtime="20210729 14:21:16.037"/>
</iter>
<iter>
<var name="${pid}">17346</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:16.042" level="INFO">Running command 'kill 17346 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:16.038" endtime="20210729 14:21:16.043"/>
</kw>
<status status="PASS" starttime="20210729 14:21:16.038" endtime="20210729 14:21:16.043"/>
</iter>
<iter>
<var name="${pid}">17356</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:16.054" level="INFO">Running command 'kill 17356 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:16.043" endtime="20210729 14:21:16.054"/>
</kw>
<status status="PASS" starttime="20210729 14:21:16.043" endtime="20210729 14:21:16.054"/>
</iter>
<status status="PASS" starttime="20210729 14:21:16.032" endtime="20210729 14:21:16.054"/>
</for>
<status status="PASS" starttime="20210729 14:21:16.031" endtime="20210729 14:21:16.054"/>
</branch>
<status status="PASS" starttime="20210729 14:21:16.030" endtime="20210729 14:21:16.055"/>
</if>
<status status="PASS" starttime="20210729 14:21:16.014" endtime="20210729 14:21:16.055"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABC456.?ABC456.?ABC456'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:21:14.435" endtime="20210729 14:21:16.055">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t93" name="With Any Valid Token, Updating Password Of Each System User With ABC!?.0 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:16.061" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:16.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:16.071" level="INFO">${pids} = 17385</msg>
<status status="PASS" starttime="20210729 14:21:16.057" endtime="20210729 14:21:16.071"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:16.072" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:16.072" endtime="20210729 14:21:16.072"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:16.073" level="INFO">${pids} = ['17385']</msg>
<status status="PASS" starttime="20210729 14:21:16.073" endtime="20210729 14:21:16.073"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17385</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:16.077" level="INFO">Running command 'kill 17385 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:16.073" endtime="20210729 14:21:16.078"/>
</kw>
<status status="PASS" starttime="20210729 14:21:16.073" endtime="20210729 14:21:16.078"/>
</iter>
<status status="PASS" starttime="20210729 14:21:16.073" endtime="20210729 14:21:16.078"/>
</for>
<status status="PASS" starttime="20210729 14:21:16.072" endtime="20210729 14:21:16.078"/>
</branch>
<status status="PASS" starttime="20210729 14:21:16.072" endtime="20210729 14:21:16.078"/>
</if>
<status status="PASS" starttime="20210729 14:21:16.057" endtime="20210729 14:21:16.078"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:16.080" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:16.079" endtime="20210729 14:21:16.080"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:16.080" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:16.080" endtime="20210729 14:21:16.080"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:16.081" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:16.081" endtime="20210729 14:21:16.081"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:16.083" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:16.081" endtime="20210729 14:21:16.083"/>
</kw>
<msg timestamp="20210729 14:21:16.083" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:16.080" endtime="20210729 14:21:16.083"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:16.088" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:16.083" endtime="20210729 14:21:16.107"/>
</kw>
<status status="PASS" starttime="20210729 14:21:16.079" endtime="20210729 14:21:16.108"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:21:16.110" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:21:16.109" endtime="20210729 14:21:16.120"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:21:17.622" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:21:16.121" endtime="20210729 14:21:17.622"/>
</kw>
<status status="PASS" starttime="20210729 14:21:16.108" endtime="20210729 14:21:17.622"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:17.624" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:17.623" endtime="20210729 14:21:17.624"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:17.624" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:17.624" endtime="20210729 14:21:17.624"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:17.624" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:17.624" endtime="20210729 14:21:17.624"/>
</kw>
<msg timestamp="20210729 14:21:17.624" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:17.623" endtime="20210729 14:21:17.625"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:21:17.625" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:21:17.625" endtime="20210729 14:21:17.625"/>
</kw>
<status status="PASS" starttime="20210729 14:21:17.623" endtime="20210729 14:21:17.626"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:21:17.626" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:21:17.626" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:21:17.626" endtime="20210729 14:21:17.626"/>
</kw>
<status status="PASS" starttime="20210729 14:21:17.626" endtime="20210729 14:21:17.626"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:21:17.627" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:21:17.627" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:21:17.627" endtime="20210729 14:21:17.627"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:21:17.627" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:21:17.627" endtime="20210729 14:21:17.627"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:17.628" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:17.628" endtime="20210729 14:21:17.628"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:17.628" endtime="20210729 14:21:17.628"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:17.629" endtime="20210729 14:21:17.629"/>
</kw>
<status status="PASS" starttime="20210729 14:21:17.627" endtime="20210729 14:21:17.629"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:17.629" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:17.629" endtime="20210729 14:21:17.629"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:17.629" endtime="20210729 14:21:17.630"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:17.630" endtime="20210729 14:21:17.630"/>
</kw>
<status status="PASS" starttime="20210729 14:21:17.629" endtime="20210729 14:21:17.630"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:17.631" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:17.631" endtime="20210729 14:21:17.631"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:17.632" endtime="20210729 14:21:17.633"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:17.633" endtime="20210729 14:21:17.633"/>
</kw>
<status status="PASS" starttime="20210729 14:21:17.631" endtime="20210729 14:21:17.633"/>
</iter>
<status status="PASS" starttime="20210729 14:21:17.627" endtime="20210729 14:21:17.633"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:21:17.634" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:21:17.633" endtime="20210729 14:21:17.634"/>
</kw>
<status status="PASS" starttime="20210729 14:21:17.626" endtime="20210729 14:21:17.634"/>
</kw>
<status status="PASS" starttime="20210729 14:21:16.057" endtime="20210729 14:21:17.634"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABC!?.0</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:17.635" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:21:17.635" endtime="20210729 14:21:17.635"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:17.636" level="INFO">${payload} = {'password': 'ABC!?.0'}</msg>
<status status="PASS" starttime="20210729 14:21:17.635" endtime="20210729 14:21:17.636"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:17.646" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:17.646" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:17.636" endtime="20210729 14:21:17.646"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:17.647" endtime="20210729 14:21:17.647"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:17.647" endtime="20210729 14:21:17.647"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:17.636" endtime="20210729 14:21:17.647"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:17.636" endtime="20210729 14:21:17.647"/>
</for>
<status status="FAIL" starttime="20210729 14:21:17.634" endtime="20210729 14:21:17.647"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:17.634" endtime="20210729 14:21:17.647"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABC!?.0</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:17.651" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:21:17.651" endtime="20210729 14:21:17.652"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:17.652" level="INFO">${payload} = {'password': 'ABC!?.0'}</msg>
<status status="PASS" starttime="20210729 14:21:17.652" endtime="20210729 14:21:17.652"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:17.656" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:17.657" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:17.652" endtime="20210729 14:21:17.657"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:17.657" endtime="20210729 14:21:17.657"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:17.657" endtime="20210729 14:21:17.657"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:17.652" endtime="20210729 14:21:17.657"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:17.652" endtime="20210729 14:21:17.657"/>
</for>
<status status="FAIL" starttime="20210729 14:21:17.648" endtime="20210729 14:21:17.657"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:17.647" endtime="20210729 14:21:17.657"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABC!?.0</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:17.658" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:21:17.658" endtime="20210729 14:21:17.658"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:17.659" level="INFO">${payload} = {'password': 'ABC!?.0'}</msg>
<status status="PASS" starttime="20210729 14:21:17.658" endtime="20210729 14:21:17.659"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:17.663" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:17.663" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:17.659" endtime="20210729 14:21:17.663"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:17.664" endtime="20210729 14:21:17.664"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:17.664" endtime="20210729 14:21:17.664"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:17.659" endtime="20210729 14:21:17.664"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:17.659" endtime="20210729 14:21:17.664"/>
</for>
<status status="FAIL" starttime="20210729 14:21:17.657" endtime="20210729 14:21:17.664"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:17.657" endtime="20210729 14:21:17.664"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:17.634" endtime="20210729 14:21:17.664"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:17.669" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:17.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:17.679" level="INFO">${pids} = 17408
17415
17420</msg>
<status status="PASS" starttime="20210729 14:21:17.665" endtime="20210729 14:21:17.679"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:17.680" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:17.679" endtime="20210729 14:21:17.680"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:17.680" level="INFO">${pids} = ['17408', '17415', '17420']</msg>
<status status="PASS" starttime="20210729 14:21:17.680" endtime="20210729 14:21:17.680"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17408</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:17.684" level="INFO">Running command 'kill 17408 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:17.681" endtime="20210729 14:21:17.685"/>
</kw>
<status status="PASS" starttime="20210729 14:21:17.681" endtime="20210729 14:21:17.685"/>
</iter>
<iter>
<var name="${pid}">17415</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:17.688" level="INFO">Running command 'kill 17415 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:17.685" endtime="20210729 14:21:17.688"/>
</kw>
<status status="PASS" starttime="20210729 14:21:17.685" endtime="20210729 14:21:17.688"/>
</iter>
<iter>
<var name="${pid}">17420</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:17.693" level="INFO">Running command 'kill 17420 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:17.689" endtime="20210729 14:21:17.694"/>
</kw>
<status status="PASS" starttime="20210729 14:21:17.689" endtime="20210729 14:21:17.694"/>
</iter>
<status status="PASS" starttime="20210729 14:21:17.680" endtime="20210729 14:21:17.694"/>
</for>
<status status="PASS" starttime="20210729 14:21:17.680" endtime="20210729 14:21:17.694"/>
</branch>
<status status="PASS" starttime="20210729 14:21:17.680" endtime="20210729 14:21:17.694"/>
</if>
<status status="PASS" starttime="20210729 14:21:17.664" endtime="20210729 14:21:17.694"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABC!?.0'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:21:16.056" endtime="20210729 14:21:17.694">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t94" name="With Any Valid Token, Updating Password Of Each System User With ABC!?.01 Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:17.701" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:17.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:17.710" level="INFO">${pids} = 17449</msg>
<status status="PASS" starttime="20210729 14:21:17.696" endtime="20210729 14:21:17.710"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:17.711" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:17.710" endtime="20210729 14:21:17.711"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:17.712" level="INFO">${pids} = ['17449']</msg>
<status status="PASS" starttime="20210729 14:21:17.711" endtime="20210729 14:21:17.712"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17449</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:17.716" level="INFO">Running command 'kill 17449 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:17.712" endtime="20210729 14:21:17.717"/>
</kw>
<status status="PASS" starttime="20210729 14:21:17.712" endtime="20210729 14:21:17.717"/>
</iter>
<status status="PASS" starttime="20210729 14:21:17.712" endtime="20210729 14:21:17.717"/>
</for>
<status status="PASS" starttime="20210729 14:21:17.711" endtime="20210729 14:21:17.717"/>
</branch>
<status status="PASS" starttime="20210729 14:21:17.711" endtime="20210729 14:21:17.717"/>
</if>
<status status="PASS" starttime="20210729 14:21:17.696" endtime="20210729 14:21:17.717"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:17.718" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:17.718" endtime="20210729 14:21:17.718"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:17.719" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:17.719" endtime="20210729 14:21:17.719"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:17.719" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:17.719" endtime="20210729 14:21:17.719"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:17.720" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:17.719" endtime="20210729 14:21:17.720"/>
</kw>
<msg timestamp="20210729 14:21:17.720" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:17.718" endtime="20210729 14:21:17.720"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:17.723" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:17.720" endtime="20210729 14:21:17.726"/>
</kw>
<status status="PASS" starttime="20210729 14:21:17.717" endtime="20210729 14:21:17.726"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:21:17.728" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:21:17.727" endtime="20210729 14:21:17.733"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:21:19.234" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:21:17.733" endtime="20210729 14:21:19.234"/>
</kw>
<status status="PASS" starttime="20210729 14:21:17.726" endtime="20210729 14:21:19.235"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:19.236" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:19.235" endtime="20210729 14:21:19.236"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:19.236" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:19.236" endtime="20210729 14:21:19.236"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:19.236" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:19.236" endtime="20210729 14:21:19.236"/>
</kw>
<msg timestamp="20210729 14:21:19.237" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:19.235" endtime="20210729 14:21:19.237"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:21:19.237" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:21:19.237" endtime="20210729 14:21:19.237"/>
</kw>
<status status="PASS" starttime="20210729 14:21:19.235" endtime="20210729 14:21:19.237"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:21:19.238" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:21:19.238" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:21:19.238" endtime="20210729 14:21:19.238"/>
</kw>
<status status="PASS" starttime="20210729 14:21:19.238" endtime="20210729 14:21:19.238"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:21:19.239" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:21:19.239" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:21:19.239" endtime="20210729 14:21:19.239"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:21:19.239" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:21:19.239" endtime="20210729 14:21:19.239"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:19.240" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:19.240" endtime="20210729 14:21:19.240"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:19.240" endtime="20210729 14:21:19.241"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:19.241" endtime="20210729 14:21:19.241"/>
</kw>
<status status="PASS" starttime="20210729 14:21:19.240" endtime="20210729 14:21:19.241"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:19.242" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:19.242" endtime="20210729 14:21:19.242"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:19.242" endtime="20210729 14:21:19.242"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:19.243" endtime="20210729 14:21:19.243"/>
</kw>
<status status="PASS" starttime="20210729 14:21:19.241" endtime="20210729 14:21:19.243"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:19.243" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:19.243" endtime="20210729 14:21:19.243"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:19.243" endtime="20210729 14:21:19.244"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:19.244" endtime="20210729 14:21:19.244"/>
</kw>
<status status="PASS" starttime="20210729 14:21:19.243" endtime="20210729 14:21:19.244"/>
</iter>
<status status="PASS" starttime="20210729 14:21:19.239" endtime="20210729 14:21:19.244"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:21:19.245" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:21:19.245" endtime="20210729 14:21:19.245"/>
</kw>
<status status="PASS" starttime="20210729 14:21:19.239" endtime="20210729 14:21:19.245"/>
</kw>
<status status="PASS" starttime="20210729 14:21:17.696" endtime="20210729 14:21:19.245"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABC!?.01</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:19.246" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:21:19.246" endtime="20210729 14:21:19.246"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:19.247" level="INFO">${payload} = {'password': 'ABC!?.01'}</msg>
<status status="PASS" starttime="20210729 14:21:19.246" endtime="20210729 14:21:19.247"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:19.256" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:19.256" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:19.247" endtime="20210729 14:21:19.256"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:19.256" endtime="20210729 14:21:19.256"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:19.256" endtime="20210729 14:21:19.256"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:19.247" endtime="20210729 14:21:19.256"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:19.247" endtime="20210729 14:21:19.256"/>
</for>
<status status="FAIL" starttime="20210729 14:21:19.245" endtime="20210729 14:21:19.256"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:19.245" endtime="20210729 14:21:19.257"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABC!?.01</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:19.258" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:21:19.257" endtime="20210729 14:21:19.258"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:19.258" level="INFO">${payload} = {'password': 'ABC!?.01'}</msg>
<status status="PASS" starttime="20210729 14:21:19.258" endtime="20210729 14:21:19.258"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:19.262" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:19.262" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:19.258" endtime="20210729 14:21:19.262"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:19.262" endtime="20210729 14:21:19.262"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:19.263" endtime="20210729 14:21:19.263"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:19.258" endtime="20210729 14:21:19.263"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:19.258" endtime="20210729 14:21:19.263"/>
</for>
<status status="FAIL" starttime="20210729 14:21:19.257" endtime="20210729 14:21:19.263"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:19.257" endtime="20210729 14:21:19.263"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABC!?.01</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:19.264" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:21:19.264" endtime="20210729 14:21:19.264"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:19.264" level="INFO">${payload} = {'password': 'ABC!?.01'}</msg>
<status status="PASS" starttime="20210729 14:21:19.264" endtime="20210729 14:21:19.264"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:19.269" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:19.269" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:19.265" endtime="20210729 14:21:19.269"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:19.269" endtime="20210729 14:21:19.269"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:19.269" endtime="20210729 14:21:19.269"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:19.265" endtime="20210729 14:21:19.269"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:19.265" endtime="20210729 14:21:19.269"/>
</for>
<status status="FAIL" starttime="20210729 14:21:19.263" endtime="20210729 14:21:19.269"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:19.263" endtime="20210729 14:21:19.269"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:19.245" endtime="20210729 14:21:19.270"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:19.275" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:19.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:19.285" level="INFO">${pids} = 17472
17479
17483</msg>
<status status="PASS" starttime="20210729 14:21:19.270" endtime="20210729 14:21:19.285"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:19.285" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:19.285" endtime="20210729 14:21:19.285"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:19.286" level="INFO">${pids} = ['17472', '17479', '17483']</msg>
<status status="PASS" starttime="20210729 14:21:19.286" endtime="20210729 14:21:19.286"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17472</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:19.289" level="INFO">Running command 'kill 17472 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:19.286" endtime="20210729 14:21:19.290"/>
</kw>
<status status="PASS" starttime="20210729 14:21:19.286" endtime="20210729 14:21:19.290"/>
</iter>
<iter>
<var name="${pid}">17479</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:19.293" level="INFO">Running command 'kill 17479 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:19.290" endtime="20210729 14:21:19.294"/>
</kw>
<status status="PASS" starttime="20210729 14:21:19.290" endtime="20210729 14:21:19.294"/>
</iter>
<iter>
<var name="${pid}">17483</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:19.297" level="INFO">Running command 'kill 17483 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:19.294" endtime="20210729 14:21:19.298"/>
</kw>
<status status="PASS" starttime="20210729 14:21:19.294" endtime="20210729 14:21:19.298"/>
</iter>
<status status="PASS" starttime="20210729 14:21:19.286" endtime="20210729 14:21:19.298"/>
</for>
<status status="PASS" starttime="20210729 14:21:19.286" endtime="20210729 14:21:19.298"/>
</branch>
<status status="PASS" starttime="20210729 14:21:19.286" endtime="20210729 14:21:19.298"/>
</if>
<status status="PASS" starttime="20210729 14:21:19.270" endtime="20210729 14:21:19.298"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABC!?.01'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:21:17.695" endtime="20210729 14:21:19.298">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t95" name="With Any Valid Token, Updating Password Of Each System User With ABC!?.01ABC!?.01ABC!?. Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:19.309" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:19.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:19.319" level="INFO">${pids} = 17512</msg>
<status status="PASS" starttime="20210729 14:21:19.302" endtime="20210729 14:21:19.319"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:19.320" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:19.319" endtime="20210729 14:21:19.320"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:19.321" level="INFO">${pids} = ['17512']</msg>
<status status="PASS" starttime="20210729 14:21:19.320" endtime="20210729 14:21:19.321"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17512</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:19.325" level="INFO">Running command 'kill 17512 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:19.321" endtime="20210729 14:21:19.325"/>
</kw>
<status status="PASS" starttime="20210729 14:21:19.321" endtime="20210729 14:21:19.325"/>
</iter>
<status status="PASS" starttime="20210729 14:21:19.321" endtime="20210729 14:21:19.325"/>
</for>
<status status="PASS" starttime="20210729 14:21:19.320" endtime="20210729 14:21:19.325"/>
</branch>
<status status="PASS" starttime="20210729 14:21:19.320" endtime="20210729 14:21:19.325"/>
</if>
<status status="PASS" starttime="20210729 14:21:19.301" endtime="20210729 14:21:19.326"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:19.327" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:19.327" endtime="20210729 14:21:19.327"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:19.328" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:19.327" endtime="20210729 14:21:19.328"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:19.328" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:19.328" endtime="20210729 14:21:19.328"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:19.329" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:19.328" endtime="20210729 14:21:19.329"/>
</kw>
<msg timestamp="20210729 14:21:19.329" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:19.327" endtime="20210729 14:21:19.329"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:19.334" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:19.329" endtime="20210729 14:21:19.336"/>
</kw>
<status status="PASS" starttime="20210729 14:21:19.326" endtime="20210729 14:21:19.336"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:21:19.337" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:21:19.337" endtime="20210729 14:21:19.342"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:21:20.843" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:21:19.342" endtime="20210729 14:21:20.844"/>
</kw>
<status status="PASS" starttime="20210729 14:21:19.336" endtime="20210729 14:21:20.844"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:20.845" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:20.845" endtime="20210729 14:21:20.845"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:20.845" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:20.845" endtime="20210729 14:21:20.845"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:20.846" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:20.845" endtime="20210729 14:21:20.846"/>
</kw>
<msg timestamp="20210729 14:21:20.846" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:20.844" endtime="20210729 14:21:20.846"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:21:20.846" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:21:20.846" endtime="20210729 14:21:20.847"/>
</kw>
<status status="PASS" starttime="20210729 14:21:20.844" endtime="20210729 14:21:20.847"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:21:20.848" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:21:20.848" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:21:20.848" endtime="20210729 14:21:20.848"/>
</kw>
<status status="PASS" starttime="20210729 14:21:20.847" endtime="20210729 14:21:20.849"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:21:20.849" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:21:20.850" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:21:20.849" endtime="20210729 14:21:20.850"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:21:20.850" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:21:20.850" endtime="20210729 14:21:20.850"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:20.851" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:20.851" endtime="20210729 14:21:20.851"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:20.851" endtime="20210729 14:21:20.852"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:20.852" endtime="20210729 14:21:20.852"/>
</kw>
<status status="PASS" starttime="20210729 14:21:20.850" endtime="20210729 14:21:20.852"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:20.852" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:20.852" endtime="20210729 14:21:20.852"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:20.852" endtime="20210729 14:21:20.853"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:20.853" endtime="20210729 14:21:20.853"/>
</kw>
<status status="PASS" starttime="20210729 14:21:20.852" endtime="20210729 14:21:20.853"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:20.854" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:20.854" endtime="20210729 14:21:20.854"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:20.854" endtime="20210729 14:21:20.854"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:20.854" endtime="20210729 14:21:20.855"/>
</kw>
<status status="PASS" starttime="20210729 14:21:20.853" endtime="20210729 14:21:20.855"/>
</iter>
<status status="PASS" starttime="20210729 14:21:20.850" endtime="20210729 14:21:20.855"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:21:20.855" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:21:20.855" endtime="20210729 14:21:20.855"/>
</kw>
<status status="PASS" starttime="20210729 14:21:20.849" endtime="20210729 14:21:20.855"/>
</kw>
<status status="PASS" starttime="20210729 14:21:19.301" endtime="20210729 14:21:20.855"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABC!?.01ABC!?.01ABC!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:20.857" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:21:20.856" endtime="20210729 14:21:20.857"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:20.857" level="INFO">${payload} = {'password': 'ABC!?.01ABC!?.01ABC!?.'}</msg>
<status status="PASS" starttime="20210729 14:21:20.857" endtime="20210729 14:21:20.857"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:20.866" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:20.866" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:20.858" endtime="20210729 14:21:20.866"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:20.867" endtime="20210729 14:21:20.867"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:20.867" endtime="20210729 14:21:20.867"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:20.858" endtime="20210729 14:21:20.867"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:20.857" endtime="20210729 14:21:20.867"/>
</for>
<status status="FAIL" starttime="20210729 14:21:20.856" endtime="20210729 14:21:20.867"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:20.856" endtime="20210729 14:21:20.867"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABC!?.01ABC!?.01ABC!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:20.869" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:21:20.869" endtime="20210729 14:21:20.869"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:20.870" level="INFO">${payload} = {'password': 'ABC!?.01ABC!?.01ABC!?.'}</msg>
<status status="PASS" starttime="20210729 14:21:20.870" endtime="20210729 14:21:20.870"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:20.874" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:20.874" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:20.870" endtime="20210729 14:21:20.874"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:20.874" endtime="20210729 14:21:20.875"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:20.875" endtime="20210729 14:21:20.875"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:20.870" endtime="20210729 14:21:20.875"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:20.870" endtime="20210729 14:21:20.875"/>
</for>
<status status="FAIL" starttime="20210729 14:21:20.868" endtime="20210729 14:21:20.875"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:20.867" endtime="20210729 14:21:20.875"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=ABC!?.01ABC!?.01ABC!?.</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:20.876" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:21:20.876" endtime="20210729 14:21:20.876"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:20.876" level="INFO">${payload} = {'password': 'ABC!?.01ABC!?.01ABC!?.'}</msg>
<status status="PASS" starttime="20210729 14:21:20.876" endtime="20210729 14:21:20.876"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:20.881" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:20.881" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:20.877" endtime="20210729 14:21:20.881"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:20.881" endtime="20210729 14:21:20.881"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:20.881" endtime="20210729 14:21:20.881"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:20.877" endtime="20210729 14:21:20.881"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:20.877" endtime="20210729 14:21:20.881"/>
</for>
<status status="FAIL" starttime="20210729 14:21:20.875" endtime="20210729 14:21:20.882"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:20.875" endtime="20210729 14:21:20.882"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:20.856" endtime="20210729 14:21:20.882"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:20.887" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:20.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:20.896" level="INFO">${pids} = 17535
17542
17546</msg>
<status status="PASS" starttime="20210729 14:21:20.882" endtime="20210729 14:21:20.896"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:20.897" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:20.896" endtime="20210729 14:21:20.897"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:20.898" level="INFO">${pids} = ['17535', '17542', '17546']</msg>
<status status="PASS" starttime="20210729 14:21:20.897" endtime="20210729 14:21:20.898"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17535</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:20.902" level="INFO">Running command 'kill 17535 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:20.898" endtime="20210729 14:21:20.903"/>
</kw>
<status status="PASS" starttime="20210729 14:21:20.898" endtime="20210729 14:21:20.903"/>
</iter>
<iter>
<var name="${pid}">17542</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:20.906" level="INFO">Running command 'kill 17542 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:20.904" endtime="20210729 14:21:20.907"/>
</kw>
<status status="PASS" starttime="20210729 14:21:20.903" endtime="20210729 14:21:20.907"/>
</iter>
<iter>
<var name="${pid}">17546</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:20.910" level="INFO">Running command 'kill 17546 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:20.907" endtime="20210729 14:21:20.911"/>
</kw>
<status status="PASS" starttime="20210729 14:21:20.907" endtime="20210729 14:21:20.911"/>
</iter>
<status status="PASS" starttime="20210729 14:21:20.898" endtime="20210729 14:21:20.911"/>
</for>
<status status="PASS" starttime="20210729 14:21:20.897" endtime="20210729 14:21:20.911"/>
</branch>
<status status="PASS" starttime="20210729 14:21:20.897" endtime="20210729 14:21:20.911"/>
</if>
<status status="PASS" starttime="20210729 14:21:20.882" endtime="20210729 14:21:20.911"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": 'ABC!?.01ABC!?.01ABC!?.'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:21:19.300" endtime="20210729 14:21:20.911">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t96" name="With Any Valid Token, Updating Password Of Each System User With 012!.Aa Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:20.919" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:20.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:20.928" level="INFO">${pids} = 17575</msg>
<status status="PASS" starttime="20210729 14:21:20.913" endtime="20210729 14:21:20.928"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:20.929" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:20.928" endtime="20210729 14:21:20.929"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:20.930" level="INFO">${pids} = ['17575']</msg>
<status status="PASS" starttime="20210729 14:21:20.929" endtime="20210729 14:21:20.930"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17575</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:20.935" level="INFO">Running command 'kill 17575 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:20.930" endtime="20210729 14:21:20.942"/>
</kw>
<status status="PASS" starttime="20210729 14:21:20.930" endtime="20210729 14:21:20.942"/>
</iter>
<status status="PASS" starttime="20210729 14:21:20.930" endtime="20210729 14:21:20.942"/>
</for>
<status status="PASS" starttime="20210729 14:21:20.929" endtime="20210729 14:21:20.942"/>
</branch>
<status status="PASS" starttime="20210729 14:21:20.929" endtime="20210729 14:21:20.942"/>
</if>
<status status="PASS" starttime="20210729 14:21:20.913" endtime="20210729 14:21:20.943"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:20.944" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:20.944" endtime="20210729 14:21:20.944"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:20.945" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:20.945" endtime="20210729 14:21:20.945"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:20.946" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:20.945" endtime="20210729 14:21:20.946"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:20.946" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:20.946" endtime="20210729 14:21:20.946"/>
</kw>
<msg timestamp="20210729 14:21:20.946" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:20.945" endtime="20210729 14:21:20.946"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:20.950" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:20.946" endtime="20210729 14:21:20.951"/>
</kw>
<status status="PASS" starttime="20210729 14:21:20.943" endtime="20210729 14:21:20.952"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:21:20.953" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:21:20.952" endtime="20210729 14:21:20.957"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:21:22.459" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:21:20.957" endtime="20210729 14:21:22.460"/>
</kw>
<status status="PASS" starttime="20210729 14:21:20.952" endtime="20210729 14:21:22.460"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:22.461" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:22.461" endtime="20210729 14:21:22.461"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:22.462" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:22.461" endtime="20210729 14:21:22.462"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:22.462" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:22.462" endtime="20210729 14:21:22.462"/>
</kw>
<msg timestamp="20210729 14:21:22.462" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:22.461" endtime="20210729 14:21:22.462"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:21:22.463" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:21:22.463" endtime="20210729 14:21:22.463"/>
</kw>
<status status="PASS" starttime="20210729 14:21:22.460" endtime="20210729 14:21:22.463"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:21:22.464" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:21:22.464" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:21:22.464" endtime="20210729 14:21:22.464"/>
</kw>
<status status="PASS" starttime="20210729 14:21:22.464" endtime="20210729 14:21:22.464"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:21:22.465" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:21:22.465" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:21:22.465" endtime="20210729 14:21:22.465"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:21:22.466" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:21:22.465" endtime="20210729 14:21:22.466"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:22.467" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:22.466" endtime="20210729 14:21:22.467"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:22.467" endtime="20210729 14:21:22.468"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:22.468" endtime="20210729 14:21:22.468"/>
</kw>
<status status="PASS" starttime="20210729 14:21:22.466" endtime="20210729 14:21:22.468"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:22.469" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:22.469" endtime="20210729 14:21:22.469"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:22.469" endtime="20210729 14:21:22.469"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:22.469" endtime="20210729 14:21:22.470"/>
</kw>
<status status="PASS" starttime="20210729 14:21:22.468" endtime="20210729 14:21:22.470"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:22.470" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:22.470" endtime="20210729 14:21:22.470"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:22.470" endtime="20210729 14:21:22.471"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:22.471" endtime="20210729 14:21:22.471"/>
</kw>
<status status="PASS" starttime="20210729 14:21:22.470" endtime="20210729 14:21:22.471"/>
</iter>
<status status="PASS" starttime="20210729 14:21:22.466" endtime="20210729 14:21:22.471"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:21:22.472" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:21:22.472" endtime="20210729 14:21:22.472"/>
</kw>
<status status="PASS" starttime="20210729 14:21:22.464" endtime="20210729 14:21:22.472"/>
</kw>
<status status="PASS" starttime="20210729 14:21:20.912" endtime="20210729 14:21:22.472"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=012!.Aa</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:22.473" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:21:22.473" endtime="20210729 14:21:22.473"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:22.473" level="INFO">${payload} = {'password': '012!.Aa'}</msg>
<status status="PASS" starttime="20210729 14:21:22.473" endtime="20210729 14:21:22.474"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:22.483" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:22.484" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:22.474" endtime="20210729 14:21:22.484"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:22.484" endtime="20210729 14:21:22.484"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:22.484" endtime="20210729 14:21:22.484"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:22.474" endtime="20210729 14:21:22.484"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:22.474" endtime="20210729 14:21:22.484"/>
</for>
<status status="FAIL" starttime="20210729 14:21:22.472" endtime="20210729 14:21:22.484"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:22.472" endtime="20210729 14:21:22.484"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=012!.Aa</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:22.485" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:21:22.485" endtime="20210729 14:21:22.486"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:22.486" level="INFO">${payload} = {'password': '012!.Aa'}</msg>
<status status="PASS" starttime="20210729 14:21:22.486" endtime="20210729 14:21:22.486"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:22.490" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:22.490" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:22.486" endtime="20210729 14:21:22.490"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:22.490" endtime="20210729 14:21:22.490"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:22.490" endtime="20210729 14:21:22.490"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:22.486" endtime="20210729 14:21:22.490"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:22.486" endtime="20210729 14:21:22.490"/>
</for>
<status status="FAIL" starttime="20210729 14:21:22.485" endtime="20210729 14:21:22.490"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:22.485" endtime="20210729 14:21:22.490"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=012!.Aa</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:22.491" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:21:22.491" endtime="20210729 14:21:22.492"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:22.492" level="INFO">${payload} = {'password': '012!.Aa'}</msg>
<status status="PASS" starttime="20210729 14:21:22.492" endtime="20210729 14:21:22.492"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:22.496" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:22.496" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:22.492" endtime="20210729 14:21:22.496"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:22.496" endtime="20210729 14:21:22.496"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:22.496" endtime="20210729 14:21:22.496"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:22.492" endtime="20210729 14:21:22.496"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:22.492" endtime="20210729 14:21:22.496"/>
</for>
<status status="FAIL" starttime="20210729 14:21:22.491" endtime="20210729 14:21:22.496"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:22.491" endtime="20210729 14:21:22.497"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:22.472" endtime="20210729 14:21:22.497"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:22.502" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:22.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:22.513" level="INFO">${pids} = 17598
17605
17616</msg>
<status status="PASS" starttime="20210729 14:21:22.497" endtime="20210729 14:21:22.513"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:22.514" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:22.513" endtime="20210729 14:21:22.514"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:22.515" level="INFO">${pids} = ['17598', '17605', '17616']</msg>
<status status="PASS" starttime="20210729 14:21:22.514" endtime="20210729 14:21:22.515"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17598</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:22.518" level="INFO">Running command 'kill 17598 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:22.515" endtime="20210729 14:21:22.519"/>
</kw>
<status status="PASS" starttime="20210729 14:21:22.515" endtime="20210729 14:21:22.519"/>
</iter>
<iter>
<var name="${pid}">17605</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:22.522" level="INFO">Running command 'kill 17605 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:22.520" endtime="20210729 14:21:22.524"/>
</kw>
<status status="PASS" starttime="20210729 14:21:22.519" endtime="20210729 14:21:22.524"/>
</iter>
<iter>
<var name="${pid}">17616</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:22.528" level="INFO">Running command 'kill 17616 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:22.525" endtime="20210729 14:21:22.528"/>
</kw>
<status status="PASS" starttime="20210729 14:21:22.525" endtime="20210729 14:21:22.528"/>
</iter>
<status status="PASS" starttime="20210729 14:21:22.515" endtime="20210729 14:21:22.528"/>
</for>
<status status="PASS" starttime="20210729 14:21:22.514" endtime="20210729 14:21:22.528"/>
</branch>
<status status="PASS" starttime="20210729 14:21:22.514" endtime="20210729 14:21:22.528"/>
</if>
<status status="PASS" starttime="20210729 14:21:22.497" endtime="20210729 14:21:22.529"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": '012!.Aa'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:21:20.912" endtime="20210729 14:21:22.529">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t97" name="With Any Valid Token, Updating Password Of Each System User With 012!.Aab Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:22.535" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:22.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:22.544" level="INFO">${pids} = 17645</msg>
<status status="PASS" starttime="20210729 14:21:22.531" endtime="20210729 14:21:22.544"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:22.545" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:22.545" endtime="20210729 14:21:22.545"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:22.546" level="INFO">${pids} = ['17645']</msg>
<status status="PASS" starttime="20210729 14:21:22.546" endtime="20210729 14:21:22.546"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17645</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:22.551" level="INFO">Running command 'kill 17645 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:22.546" endtime="20210729 14:21:22.551"/>
</kw>
<status status="PASS" starttime="20210729 14:21:22.546" endtime="20210729 14:21:22.551"/>
</iter>
<status status="PASS" starttime="20210729 14:21:22.546" endtime="20210729 14:21:22.552"/>
</for>
<status status="PASS" starttime="20210729 14:21:22.546" endtime="20210729 14:21:22.552"/>
</branch>
<status status="PASS" starttime="20210729 14:21:22.545" endtime="20210729 14:21:22.552"/>
</if>
<status status="PASS" starttime="20210729 14:21:22.531" endtime="20210729 14:21:22.552"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:22.553" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:22.553" endtime="20210729 14:21:22.553"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:22.554" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:22.553" endtime="20210729 14:21:22.554"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:22.554" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:22.554" endtime="20210729 14:21:22.554"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:22.554" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:22.554" endtime="20210729 14:21:22.554"/>
</kw>
<msg timestamp="20210729 14:21:22.554" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:22.553" endtime="20210729 14:21:22.554"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:22.558" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:22.555" endtime="20210729 14:21:22.559"/>
</kw>
<status status="PASS" starttime="20210729 14:21:22.552" endtime="20210729 14:21:22.559"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:21:22.560" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:21:22.560" endtime="20210729 14:21:22.566"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:21:24.070" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:21:22.567" endtime="20210729 14:21:24.070"/>
</kw>
<status status="PASS" starttime="20210729 14:21:22.560" endtime="20210729 14:21:24.071"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:24.072" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:24.071" endtime="20210729 14:21:24.072"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:24.072" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:24.072" endtime="20210729 14:21:24.072"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:24.073" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:24.072" endtime="20210729 14:21:24.073"/>
</kw>
<msg timestamp="20210729 14:21:24.073" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:24.071" endtime="20210729 14:21:24.073"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:21:24.073" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:21:24.073" endtime="20210729 14:21:24.074"/>
</kw>
<status status="PASS" starttime="20210729 14:21:24.071" endtime="20210729 14:21:24.074"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:21:24.074" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:21:24.074" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:21:24.074" endtime="20210729 14:21:24.074"/>
</kw>
<status status="PASS" starttime="20210729 14:21:24.074" endtime="20210729 14:21:24.074"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:21:24.075" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:21:24.075" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:21:24.075" endtime="20210729 14:21:24.075"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:21:24.076" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:21:24.075" endtime="20210729 14:21:24.076"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:24.076" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:24.076" endtime="20210729 14:21:24.076"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:24.076" endtime="20210729 14:21:24.077"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:24.077" endtime="20210729 14:21:24.077"/>
</kw>
<status status="PASS" starttime="20210729 14:21:24.076" endtime="20210729 14:21:24.077"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:24.078" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:24.077" endtime="20210729 14:21:24.078"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:24.078" endtime="20210729 14:21:24.078"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:24.078" endtime="20210729 14:21:24.079"/>
</kw>
<status status="PASS" starttime="20210729 14:21:24.077" endtime="20210729 14:21:24.079"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:24.079" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:24.079" endtime="20210729 14:21:24.079"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:24.079" endtime="20210729 14:21:24.080"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:24.080" endtime="20210729 14:21:24.080"/>
</kw>
<status status="PASS" starttime="20210729 14:21:24.079" endtime="20210729 14:21:24.080"/>
</iter>
<status status="PASS" starttime="20210729 14:21:24.076" endtime="20210729 14:21:24.080"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:21:24.081" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:21:24.080" endtime="20210729 14:21:24.081"/>
</kw>
<status status="PASS" starttime="20210729 14:21:24.075" endtime="20210729 14:21:24.081"/>
</kw>
<status status="PASS" starttime="20210729 14:21:22.530" endtime="20210729 14:21:24.081"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=012!.Aab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:24.082" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:21:24.082" endtime="20210729 14:21:24.082"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:24.083" level="INFO">${payload} = {'password': '012!.Aab'}</msg>
<status status="PASS" starttime="20210729 14:21:24.082" endtime="20210729 14:21:24.083"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:24.092" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:24.092" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:24.083" endtime="20210729 14:21:24.092"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:24.092" endtime="20210729 14:21:24.092"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:24.092" endtime="20210729 14:21:24.092"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:24.083" endtime="20210729 14:21:24.092"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:24.083" endtime="20210729 14:21:24.092"/>
</for>
<status status="FAIL" starttime="20210729 14:21:24.081" endtime="20210729 14:21:24.093"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:24.081" endtime="20210729 14:21:24.093"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=012!.Aab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:24.094" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:21:24.093" endtime="20210729 14:21:24.094"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:24.094" level="INFO">${payload} = {'password': '012!.Aab'}</msg>
<status status="PASS" starttime="20210729 14:21:24.094" endtime="20210729 14:21:24.094"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:24.098" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:24.099" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:24.095" endtime="20210729 14:21:24.099"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:24.099" endtime="20210729 14:21:24.099"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:24.099" endtime="20210729 14:21:24.099"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:24.094" endtime="20210729 14:21:24.099"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:24.094" endtime="20210729 14:21:24.099"/>
</for>
<status status="FAIL" starttime="20210729 14:21:24.093" endtime="20210729 14:21:24.099"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:24.093" endtime="20210729 14:21:24.099"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=012!.Aab</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:24.101" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:21:24.100" endtime="20210729 14:21:24.101"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:24.101" level="INFO">${payload} = {'password': '012!.Aab'}</msg>
<status status="PASS" starttime="20210729 14:21:24.101" endtime="20210729 14:21:24.101"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:24.106" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:24.106" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:24.102" endtime="20210729 14:21:24.106"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:24.106" endtime="20210729 14:21:24.106"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:24.106" endtime="20210729 14:21:24.106"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:24.102" endtime="20210729 14:21:24.106"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:24.101" endtime="20210729 14:21:24.106"/>
</for>
<status status="FAIL" starttime="20210729 14:21:24.100" endtime="20210729 14:21:24.106"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:24.100" endtime="20210729 14:21:24.106"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:24.081" endtime="20210729 14:21:24.106"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:24.114" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:24.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:24.124" level="INFO">${pids} = 17668
17675
17682</msg>
<status status="PASS" starttime="20210729 14:21:24.108" endtime="20210729 14:21:24.124"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:24.125" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:24.124" endtime="20210729 14:21:24.125"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:24.125" level="INFO">${pids} = ['17668', '17675', '17682']</msg>
<status status="PASS" starttime="20210729 14:21:24.125" endtime="20210729 14:21:24.126"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17668</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:24.129" level="INFO">Running command 'kill 17668 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:24.126" endtime="20210729 14:21:24.129"/>
</kw>
<status status="PASS" starttime="20210729 14:21:24.126" endtime="20210729 14:21:24.129"/>
</iter>
<iter>
<var name="${pid}">17675</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:24.133" level="INFO">Running command 'kill 17675 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:24.130" endtime="20210729 14:21:24.134"/>
</kw>
<status status="PASS" starttime="20210729 14:21:24.129" endtime="20210729 14:21:24.134"/>
</iter>
<iter>
<var name="${pid}">17682</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:24.141" level="INFO">Running command 'kill 17682 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:24.135" endtime="20210729 14:21:24.142"/>
</kw>
<status status="PASS" starttime="20210729 14:21:24.134" endtime="20210729 14:21:24.142"/>
</iter>
<status status="PASS" starttime="20210729 14:21:24.126" endtime="20210729 14:21:24.142"/>
</for>
<status status="PASS" starttime="20210729 14:21:24.125" endtime="20210729 14:21:24.142"/>
</branch>
<status status="PASS" starttime="20210729 14:21:24.125" endtime="20210729 14:21:24.142"/>
</if>
<status status="PASS" starttime="20210729 14:21:24.107" endtime="20210729 14:21:24.142"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": '012!.Aab'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:21:22.529" endtime="20210729 14:21:24.142">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<test id="s1-t98" name="With Any Valid Token, Updating Password Of Each System User With 012!.Aab012!.Aab012!.A Results In &quot;Field update not allowed&quot;">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kill Web Application</arg>
<arg>AND</arg>
<arg>Replace Database With New Database Having Users</arg>
<arg>AND</arg>
<arg>Start Web Application With No Init Procedure</arg>
<arg>AND</arg>
<arg>Initialize Database Connection</arg>
<arg>AND</arg>
<arg>Verify Tables</arg>
<arg>AND</arg>
<arg>Fetch All System Users From Db</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kill Web Application" library="Common">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:24.148" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:24.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:24.158" level="INFO">${pids} = 17711</msg>
<status status="PASS" starttime="20210729 14:21:24.144" endtime="20210729 14:21:24.158"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:24.159" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:24.158" endtime="20210729 14:21:24.159"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:24.159" level="INFO">${pids} = ['17711']</msg>
<status status="PASS" starttime="20210729 14:21:24.159" endtime="20210729 14:21:24.160"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17711</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:24.163" level="INFO">Running command 'kill 17711 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:24.160" endtime="20210729 14:21:24.164"/>
</kw>
<status status="PASS" starttime="20210729 14:21:24.160" endtime="20210729 14:21:24.164"/>
</iter>
<status status="PASS" starttime="20210729 14:21:24.160" endtime="20210729 14:21:24.164"/>
</for>
<status status="PASS" starttime="20210729 14:21:24.159" endtime="20210729 14:21:24.164"/>
</branch>
<status status="PASS" starttime="20210729 14:21:24.159" endtime="20210729 14:21:24.164"/>
</if>
<status status="PASS" starttime="20210729 14:21:24.144" endtime="20210729 14:21:24.165"/>
</kw>
<kw name="Replace Database With New Database Having Users" library="DbManager">
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${EXECDIR}${/}TestData${/}demo_app_with_users.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:24.166" level="INFO">${source} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:24.165" endtime="20210729 14:21:24.166"/>
</kw>
<kw name="Get Path To App Database" library="DbManager">
<var>${target}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:24.166" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:24.166" endtime="20210729 14:21:24.166"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:24.167" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:24.166" endtime="20210729 14:21:24.167"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:24.167" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:24.167" endtime="20210729 14:21:24.167"/>
</kw>
<msg timestamp="20210729 14:21:24.167" level="INFO">${target} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:24.166" endtime="20210729 14:21:24.168"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>cp ${source} ${target}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:24.176" level="INFO">Running command 'cp /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject/TestData/demo_app_with_users.sqlite /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:24.168" endtime="20210729 14:21:24.177"/>
</kw>
<status status="PASS" starttime="20210729 14:21:24.165" endtime="20210729 14:21:24.178"/>
</kw>
<kw name="Start Web Application With No Init Procedure" library="Common">
<kw name="Start Process" library="Process">
<arg>export FLASK_APP\=demo_app;flask run --host\=0.0.0.0 --port\=8080</arg>
<arg>shell=True</arg>
<arg>alias=flasky</arg>
<arg>cwd=${EXECDIR}${/}..${/}Flasky</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20210729 14:21:24.179" level="INFO">Starting process:
export FLASK_APP=demo_app;flask run --host=0.0.0.0 --port=8080</msg>
<status status="PASS" starttime="20210729 14:21:24.178" endtime="20210729 14:21:24.183"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1.5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210729 14:21:25.686" level="INFO">Slept 1 second 500 milliseconds</msg>
<status status="PASS" starttime="20210729 14:21:24.184" endtime="20210729 14:21:25.686"/>
</kw>
<status status="PASS" starttime="20210729 14:21:24.178" endtime="20210729 14:21:25.686"/>
</kw>
<kw name="Initialize Database Connection" library="DbManager">
<kw name="Get Path To App Database" library="DbManager">
<var>${path_to_database}</var>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${EXECDIR}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:25.687" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/TestProject</msg>
<status status="PASS" starttime="20210729 14:21:25.687" endtime="20210729 14:21:25.687"/>
</kw>
<kw name="Fetch From Left" library="String">
<var>${path_to_database}</var>
<arg>${path_to_database}</arg>
<arg>TestProject</arg>
<doc>Returns contents of the ``string`` before the first occurrence of ``marker``.</doc>
<msg timestamp="20210729 14:21:25.688" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/</msg>
<status status="PASS" starttime="20210729 14:21:25.687" endtime="20210729 14:21:25.688"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${path_to_database}</var>
<arg>${path_to_database}Flasky${/}instance${/}demo_app.sqlite</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210729 14:21:25.688" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:25.688" endtime="20210729 14:21:25.688"/>
</kw>
<msg timestamp="20210729 14:21:25.688" level="INFO">${path_to_database} = /home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite</msg>
<status status="PASS" starttime="20210729 14:21:25.687" endtime="20210729 14:21:25.688"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>sqlite3</arg>
<arg>database='${path_to_database}'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20210729 14:21:25.689" level="INFO">Executing : Connect To Database Using Custom Params : sqlite3.connect(db_api_2.connect(database='/home/hakan/Python/Robot/CRF_Demo_Solution/Flasky/instance/demo_app.sqlite')) </msg>
<status status="PASS" starttime="20210729 14:21:25.688" endtime="20210729 14:21:25.689"/>
</kw>
<status status="PASS" starttime="20210729 14:21:25.686" endtime="20210729 14:21:25.689"/>
</kw>
<kw name="Verify Tables" library="DbManager">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>user</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback.</doc>
<msg timestamp="20210729 14:21:25.689" level="INFO">Executing : Table Must Exist  |  user </msg>
<msg timestamp="20210729 14:21:25.689" level="INFO">Executing : Row Count  |  SELECT name FROM sqlite_master WHERE type='table' AND name='user' COLLATE NOCASE </msg>
<status status="PASS" starttime="20210729 14:21:25.689" endtime="20210729 14:21:25.690"/>
</kw>
<status status="PASS" starttime="20210729 14:21:25.689" endtime="20210729 14:21:25.690"/>
</kw>
<kw name="Fetch All System Users From Db" library="DbManager">
<kw name="Query" library="DatabaseLibrary">
<var>${users}</var>
<arg>${QUERY_ALL_USERS}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20210729 14:21:25.691" level="INFO">Executing : Query  |  select username, firstname, lastname, phone, token from user; </msg>
<msg timestamp="20210729 14:21:25.692" level="INFO">${users} = [('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'), ('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTU...</msg>
<status status="PASS" starttime="20210729 14:21:25.690" endtime="20210729 14:21:25.692"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${SYSTEM_USERS}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210729 14:21:25.692" level="INFO">${SYSTEM_USERS} = []</msg>
<status status="PASS" starttime="20210729 14:21:25.692" endtime="20210729 14:21:25.692"/>
</kw>
<for flavor="IN">
<var>${user}</var>
<value>@{users}</value>
<iter>
<var name="${user}">('SuperDuperUser1', 'David', 'Holm', '0506627124', 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:25.693" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:25.692" endtime="20210729 14:21:25.693"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:25.693" endtime="20210729 14:21:25.693"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:25.693" endtime="20210729 14:21:25.694"/>
</kw>
<status status="PASS" starttime="20210729 14:21:25.692" endtime="20210729 14:21:25.694"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser2', 'Hakan', 'Holm', '0407563452', 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:25.694" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:25.694" endtime="20210729 14:21:25.694"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:25.694" endtime="20210729 14:21:25.695"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:25.695" endtime="20210729 14:21:25.695"/>
</kw>
<status status="PASS" starttime="20210729 14:21:25.694" endtime="20210729 14:21:25.695"/>
</iter>
<iter>
<var name="${user}">('SuperDuperUser3', 'John', 'Brown', '0508094677', 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3')</var>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{new_user}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:25.696" level="INFO">&amp;{new_user} = { }</msg>
<status status="PASS" starttime="20210729 14:21:25.695" endtime="20210729 14:21:25.696"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${new_user}</arg>
<arg>username=${user}[0]</arg>
<arg>firstname=${user}[1]</arg>
<arg>lastname=${user}[2]</arg>
<arg>phone=${user}[3]</arg>
<arg>token=${user}[4]</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20210729 14:21:25.696" endtime="20210729 14:21:25.696"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${SYSTEM_USERS}</arg>
<arg>${new_user}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210729 14:21:25.696" endtime="20210729 14:21:25.697"/>
</kw>
<status status="PASS" starttime="20210729 14:21:25.695" endtime="20210729 14:21:25.697"/>
</iter>
<status status="PASS" starttime="20210729 14:21:25.692" endtime="20210729 14:21:25.697"/>
</for>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>@{SYSTEM_USERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210729 14:21:25.697" level="INFO">@{SYSTEM_USERS} = [ {'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'} | {'username': 'SuperDuperUser2', 'f...</msg>
<status status="PASS" starttime="20210729 14:21:25.697" endtime="20210729 14:21:25.697"/>
</kw>
<status status="PASS" starttime="20210729 14:21:25.690" endtime="20210729 14:21:25.698"/>
</kw>
<status status="PASS" starttime="20210729 14:21:24.144" endtime="20210729 14:21:25.698"/>
</kw>
<for flavor="IN">
<var>${api_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=012!.Aab012!.Aab012!.A</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:25.699" level="INFO">${headers} = {'Token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</msg>
<status status="PASS" starttime="20210729 14:21:25.698" endtime="20210729 14:21:25.699"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:25.699" level="INFO">${payload} = {'password': '012!.Aab012!.Aab012!.A'}</msg>
<status status="PASS" starttime="20210729 14:21:25.699" endtime="20210729 14:21:25.699"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:25.708" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:25.709" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:25.700" endtime="20210729 14:21:25.709"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:25.709" endtime="20210729 14:21:25.709"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:25.709" endtime="20210729 14:21:25.709"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:25.700" endtime="20210729 14:21:25.709"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:25.699" endtime="20210729 14:21:25.709"/>
</for>
<status status="FAIL" starttime="20210729 14:21:25.698" endtime="20210729 14:21:25.709"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:25.698" endtime="20210729 14:21:25.709"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser2', 'firstname': 'Hakan', 'lastname': 'Holm', 'phone': '0407563452', 'token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=012!.Aab012!.Aab012!.A</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:25.711" level="INFO">${headers} = {'Token': 'MzI2MTg2NjIyMDY0OTk3NTc1ODcxMjEwNDQ2OTUxMTUzMTQxOTY4'}</msg>
<status status="PASS" starttime="20210729 14:21:25.710" endtime="20210729 14:21:25.711"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:25.711" level="INFO">${payload} = {'password': '012!.Aab012!.Aab012!.A'}</msg>
<status status="PASS" starttime="20210729 14:21:25.711" endtime="20210729 14:21:25.711"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:25.715" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:25.716" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:25.711" endtime="20210729 14:21:25.716"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:25.716" endtime="20210729 14:21:25.716"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:25.716" endtime="20210729 14:21:25.716"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:25.711" endtime="20210729 14:21:25.716"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:25.711" endtime="20210729 14:21:25.716"/>
</for>
<status status="FAIL" starttime="20210729 14:21:25.710" endtime="20210729 14:21:25.716"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:25.710" endtime="20210729 14:21:25.716"/>
</iter>
<iter>
<var name="${api_user}">{'username': 'SuperDuperUser3', 'firstname': 'John', 'lastname': 'Brown', 'phone': '0508094677', 'token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</var>
<kw name="With Valid Token, Attempt to Set Password To All System Users">
<arg>token=${api_user}[token]</arg>
<arg>password_value=012!.Aab012!.Aab012!.A</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Token=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:25.717" level="INFO">${headers} = {'Token': 'MTgxMjcxNDM1OTIzNTUzNjMyMzIxNTgzNjY0MTg1MzU4MTg0MTA3'}</msg>
<status status="PASS" starttime="20210729 14:21:25.717" endtime="20210729 14:21:25.717"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${payload}</var>
<arg>password=${password_value}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210729 14:21:25.718" level="INFO">${payload} = {'password': '012!.Aab012!.Aab012!.A'}</msg>
<status status="PASS" starttime="20210729 14:21:25.718" endtime="20210729 14:21:25.718"/>
</kw>
<for flavor="IN">
<var>${system_user}</var>
<value>@{SYSTEM_USERS}</value>
<iter>
<var name="${system_user}">{'username': 'SuperDuperUser1', 'firstname': 'David', 'lastname': 'Holm', 'phone': '0506627124', 'token': 'MTczNzAyNjc5NDg4Mzc1MzcwNDIwODAyOTM1NTExMjU4NzkzNDM2'}</var>
<kw name="PUT" library="CRUD_Library">
<var>${response}</var>
<arg>/users/${system_user}[username]</arg>
<arg>headers=${headers}</arg>
<arg>body=${payload}</arg>
<doc>Sends a PUT request to the endpoint.
    The endpoint is joined with the base_url given on library init.</doc>
<msg timestamp="20210729 14:21:25.722" level="INFO">HTTP error occurred: 400 Client Error: BAD REQUEST for url: http://0.0.0.0:8080/api/users/SuperDuperUser1</msg>
<msg timestamp="20210729 14:21:25.722" level="FAIL">We expected a JSON, but received text/html</msg>
<status status="FAIL" starttime="20210729 14:21:25.718" endtime="20210729 14:21:25.722"/>
</kw>
<kw name="Verify Response">
<arg>${response}</arg>
<arg>message=Field update not allowed</arg>
<arg>status=FAILURE</arg>
<status status="NOT RUN" starttime="20210729 14:21:25.722" endtime="20210729 14:21:25.722"/>
</kw>
<kw name="Verify System Users In Database Are Intact">
<status status="NOT RUN" starttime="20210729 14:21:25.723" endtime="20210729 14:21:25.723"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:25.718" endtime="20210729 14:21:25.723"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:25.718" endtime="20210729 14:21:25.723"/>
</for>
<status status="FAIL" starttime="20210729 14:21:25.717" endtime="20210729 14:21:25.723"/>
</kw>
<status status="FAIL" starttime="20210729 14:21:25.716" endtime="20210729 14:21:25.723"/>
</iter>
<status status="FAIL" starttime="20210729 14:21:25.698" endtime="20210729 14:21:25.723"/>
</for>
<kw name="Kill Web Application" library="Common" type="TEARDOWN">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${pids}</var>
<arg>pgrep -f 'flask run --host=0.0.0.0 --port=8080'</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210729 14:21:25.729" level="INFO">Running command 'pgrep -f 'flask run --host=0.0.0.0 --port=8080' 2&gt;&amp;1'.</msg>
<msg timestamp="20210729 14:21:25.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20210729 14:21:25.739" level="INFO">${pids} = 17734
17741
17745</msg>
<status status="PASS" starttime="20210729 14:21:25.724" endtime="20210729 14:21:25.739"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${is_not_empty}</var>
<arg>$pids!=''</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:25.740" level="INFO">${is_not_empty} = True</msg>
<status status="PASS" starttime="20210729 14:21:25.740" endtime="20210729 14:21:25.740"/>
</kw>
<if>
<branch type="IF" condition="${is_not_empty}">
<kw name="Evaluate" library="BuiltIn">
<var>${pids}</var>
<arg>$pids.split('\\n')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210729 14:21:25.741" level="INFO">${pids} = ['17734', '17741', '17745']</msg>
<status status="PASS" starttime="20210729 14:21:25.740" endtime="20210729 14:21:25.741"/>
</kw>
<for flavor="IN">
<var>${pid}</var>
<value>@{pids}</value>
<iter>
<var name="${pid}">17734</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:25.744" level="INFO">Running command 'kill 17734 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:25.741" endtime="20210729 14:21:25.745"/>
</kw>
<status status="PASS" starttime="20210729 14:21:25.741" endtime="20210729 14:21:25.745"/>
</iter>
<iter>
<var name="${pid}">17741</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:25.749" level="INFO">Running command 'kill 17741 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:25.745" endtime="20210729 14:21:25.750"/>
</kw>
<status status="PASS" starttime="20210729 14:21:25.745" endtime="20210729 14:21:25.750"/>
</iter>
<iter>
<var name="${pid}">17745</var>
<kw name="Run" library="OperatingSystem">
<arg>kill ${pid}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20210729 14:21:25.754" level="INFO">Running command 'kill 17745 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20210729 14:21:25.751" endtime="20210729 14:21:25.754"/>
</kw>
<status status="PASS" starttime="20210729 14:21:25.750" endtime="20210729 14:21:25.755"/>
</iter>
<status status="PASS" starttime="20210729 14:21:25.741" endtime="20210729 14:21:25.755"/>
</for>
<status status="PASS" starttime="20210729 14:21:25.740" endtime="20210729 14:21:25.755"/>
</branch>
<status status="PASS" starttime="20210729 14:21:25.740" endtime="20210729 14:21:25.755"/>
</if>
<status status="PASS" starttime="20210729 14:21:25.723" endtime="20210729 14:21:25.755"/>
</kw>
<doc>Imagine we have three system &amp; api users X, Y, Z, each of whom makes PUT requests to /api/users/&lt;username&gt;
where &lt;username&gt; is any system user's username. In the requests' body, we set an empty
password as such:
{
"password": '012!.Aab012!.Aab012!.A'
}
Then, each request should fail with the following response body:
{
"message": "Field update not allowed",
"status": "FAILURE"
}</doc>
<status status="FAIL" starttime="20210729 14:21:24.143" endtime="20210729 14:21:25.755">Several failures occurred:

1) We expected a JSON, but received text/html

2) We expected a JSON, but received text/html

3) We expected a JSON, but received text/html</status>
</test>
<doc>This test suite contains test cases for CRF Demo API.
Documentation for the API can be found:
https://github.com/Interview-demoapp/Flasky
The acceptance criteria we verify here is
"3: As an API Consumer, if authenticated, I can update personal information of users"
Definitions
(1) System User: The user, who is registered to the system under test with a valid token
(2) API User: The user, who calls the API to update personal information of the system user</doc>
<status status="FAIL" starttime="20210729 14:18:46.555" endtime="20210729 14:21:25.761"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="98" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="98" skip="0" id="s1" name="3-Updating-Personal-Information">3-Updating-Personal-Information</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20210729 14:20:03.232" level="WARN">Multiple test cases with name 'With Any Valid Token, Updating Password Of Each System User With ABCDEFG Results In "Field update not allowed"' executed in test suite '3-Updating-Personal-Information'.</msg>
<msg timestamp="20210729 14:20:04.851" level="WARN">Multiple test cases with name 'With Any Valid Token, Updating Password Of Each System User With ABCDEFGH Results In "Field update not allowed"' executed in test suite '3-Updating-Personal-Information'.</msg>
<msg timestamp="20210729 14:20:06.460" level="WARN">Multiple test cases with name 'With Any Valid Token, Updating Password Of Each System User With ABCDEFGHJKLMNPRSTOÖUÜVYZ Results In "Field update not allowed"' executed in test suite '3-Updating-Personal-Information'.</msg>
<msg timestamp="20210729 14:20:32.325" level="WARN">Multiple test cases with name 'With Any Valid Token, Updating Password Of Each System User With ABCD012 Results In "Field update not allowed"' executed in test suite '3-Updating-Personal-Information'.</msg>
<msg timestamp="20210729 14:20:33.944" level="WARN">Multiple test cases with name 'With Any Valid Token, Updating Password Of Each System User With ABCD0123 Results In "Field update not allowed"' executed in test suite '3-Updating-Personal-Information'.</msg>
<msg timestamp="20210729 14:20:37.183" level="WARN">Multiple test cases with name 'With Any Valid Token, Updating Password Of Each System User With ABCD!?. Results In "Field update not allowed"' executed in test suite '3-Updating-Personal-Information'.</msg>
</errors>
</robot>
